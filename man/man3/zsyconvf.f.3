.TH "zsyconvf.f" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
zsyconvf.f
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBzsyconvf\fP (UPLO, WAY, \fBN\fP, A, \fBLDA\fP, E, IPIV, INFO)"
.br
.RI "\fBZSYCONVF\fP "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine zsyconvf (character UPLO, character WAY, integer N, complex*16, dimension( lda, * ) A, integer LDA, complex*16, dimension( * ) E, integer, dimension( * ) IPIV, integer INFO)"

.PP
\fBZSYCONVF\fP  
.PP
\fBPurpose: \fP
.RS 4

.PP
.nf
 If parameter WAY = 'C':
 ZSYCONVF converts the factorization output format used in
 ZSYTRF provided on entry in parameter A into the factorization
 output format used in ZSYTRF_RK (or ZSYTRF_BK) that is stored
 on exit in parameters A and E. It also coverts in place details of
 the intechanges stored in IPIV from the format used in ZSYTRF into
 the format used in ZSYTRF_RK (or ZSYTRF_BK).

 If parameter WAY = 'R':
 ZSYCONVF performs the conversion in reverse direction, i.e.
 converts the factorization output format used in ZSYTRF_RK
 (or ZSYTRF_BK) provided on entry in parameters A and E into
 the factorization output format used in ZSYTRF that is stored
 on exit in parameter A. It also coverts in place details of
 the intechanges stored in IPIV from the format used in ZSYTRF_RK
 (or ZSYTRF_BK) into the format used in ZSYTRF.

 ZSYCONVF can also convert in Hermitian matrix case, i.e. between
 formats used in ZHETRF and ZHETRF_RK (or ZHETRF_BK).
.fi
.PP
 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIUPLO\fP 
.PP
.nf
          UPLO is CHARACTER*1
          Specifies whether the details of the factorization are
          stored as an upper or lower triangular matrix A.
          = 'U':  Upper triangular
          = 'L':  Lower triangular
.fi
.PP
.br
\fIWAY\fP 
.PP
.nf
          WAY is CHARACTER*1
          = 'C': Convert
          = 'R': Revert
.fi
.PP
.br
\fIN\fP 
.PP
.nf
          N is INTEGER
          The order of the matrix A.  N >= 0.
.fi
.PP
.br
\fIA\fP 
.PP
.nf
          A is COMPLEX*16 array, dimension (LDA,N)

          1) If WAY ='C':

          On entry, contains factorization details in format used in
          ZSYTRF:
            a) all elements of the symmetric block diagonal
               matrix D on the diagonal of A and on superdiagonal
               (or subdiagonal) of A, and
            b) If UPLO = 'U': multipliers used to obtain factor U
               in the superdiagonal part of A.
               If UPLO = 'L': multipliers used to obtain factor L
               in the superdiagonal part of A.

          On exit, contains factorization details in format used in
          ZSYTRF_RK or ZSYTRF_BK:
            a) ONLY diagonal elements of the symmetric block diagonal
               matrix D on the diagonal of A, i.e. D(k,k) = A(k,k);
               (superdiagonal (or subdiagonal) elements of D
                are stored on exit in array E), and
            b) If UPLO = 'U': factor U in the superdiagonal part of A.
               If UPLO = 'L': factor L in the subdiagonal part of A.

          2) If WAY = 'R':

          On entry, contains factorization details in format used in
          ZSYTRF_RK or ZSYTRF_BK:
            a) ONLY diagonal elements of the symmetric block diagonal
               matrix D on the diagonal of A, i.e. D(k,k) = A(k,k);
               (superdiagonal (or subdiagonal) elements of D
                are stored on exit in array E), and
            b) If UPLO = 'U': factor U in the superdiagonal part of A.
               If UPLO = 'L': factor L in the subdiagonal part of A.

          On exit, contains factorization details in format used in
          ZSYTRF:
            a) all elements of the symmetric block diagonal
               matrix D on the diagonal of A and on superdiagonal
               (or subdiagonal) of A, and
            b) If UPLO = 'U': multipliers used to obtain factor U
               in the superdiagonal part of A.
               If UPLO = 'L': multipliers used to obtain factor L
               in the superdiagonal part of A.
.fi
.PP
.br
\fILDA\fP 
.PP
.nf
          LDA is INTEGER
          The leading dimension of the array A.  LDA >= max(1,N).
.fi
.PP
.br
\fIE\fP 
.PP
.nf
          E is COMPLEX*16 array, dimension (N)

          1) If WAY ='C':

          On entry, just a workspace.

          On exit, contains the superdiagonal (or subdiagonal)
          elements of the symmetric block diagonal matrix D
          with 1-by-1 or 2-by-2 diagonal blocks, where
          If UPLO = 'U': E(i) = D(i-1,i), i=2:N, E(1) is set to 0;
          If UPLO = 'L': E(i) = D(i+1,i), i=1:N-1, E(N) is set to 0.

          2) If WAY = 'R':

          On entry, contains the superdiagonal (or subdiagonal)
          elements of the symmetric block diagonal matrix D
          with 1-by-1 or 2-by-2 diagonal blocks, where
          If UPLO = 'U': E(i) = D(i-1,i),i=2:N, E(1) not referenced;
          If UPLO = 'L': E(i) = D(i+1,i),i=1:N-1, E(N) not referenced.

          On exit, is not changed
.fi
.PP
 
.br
\fIIPIV\fP 
.PP
.nf
          IPIV is INTEGER array, dimension (N)

          1) If WAY ='C':
          On entry, details of the interchanges and the block
          structure of D in the format used in ZSYTRF.
          On exit, details of the interchanges and the block
          structure of D in the format used in ZSYTRF_RK
          ( or ZSYTRF_BK).

          1) If WAY ='R':
          On entry, details of the interchanges and the block
          structure of D in the format used in ZSYTRF_RK
          ( or ZSYTRF_BK).
          On exit, details of the interchanges and the block
          structure of D in the format used in ZSYTRF.
.fi
.PP
.br
\fIINFO\fP 
.PP
.nf
          INFO is INTEGER
          = 0:  successful exit
          < 0:  if INFO = -i, the i-th argument had an illegal value
.fi
.PP
 
.RE
.PP
\fBAuthor:\fP
.RS 4
Univ\&. of Tennessee 
.PP
Univ\&. of California Berkeley 
.PP
Univ\&. of Colorado Denver 
.PP
NAG Ltd\&. 
.RE
.PP
\fBDate:\fP
.RS 4
November 2017 
.RE
.PP
\fBContributors: \fP
.RS 4

.PP
.nf
  November 2017,  Igor Kozachenko,
                  Computer Science Division,
                  University of California, Berkeley
.fi
.PP
 
.RE
.PP

.PP
Definition at line 211 of file zsyconvf\&.f\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
