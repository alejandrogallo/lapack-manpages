.TH "lapacke.h" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lapacke.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <complex\&.h>\fP
.br
\fC#include 'lapacke_mangling\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBlapack_int\fP   int"
.br
.ti -1c
.RI "#define \fBlapack_logical\fP   \fBlapack_int\fP"
.br
.ti -1c
.RI "#define \fBlapack_complex_float\fP   float _Complex"
.br
.ti -1c
.RI "#define \fBlapack_complex_float_real\fP(z)   (creal(z))"
.br
.ti -1c
.RI "#define \fBlapack_complex_float_imag\fP(z)   (cimag(z))"
.br
.ti -1c
.RI "#define \fBlapack_complex_double\fP   double _Complex"
.br
.ti -1c
.RI "#define \fBlapack_complex_double_real\fP(z)   (creal(z))"
.br
.ti -1c
.RI "#define \fBlapack_complex_double_imag\fP(z)   (cimag(z))"
.br
.ti -1c
.RI "#define \fBLAPACKE_malloc\fP(size)   malloc( size )"
.br
.ti -1c
.RI "#define \fBLAPACKE_free\fP(p)   free( p )"
.br
.ti -1c
.RI "#define \fBLAPACK_C2INT\fP(x)   (\fBlapack_int\fP)(*((float*)&x ))"
.br
.ti -1c
.RI "#define \fBLAPACK_Z2INT\fP(x)   (\fBlapack_int\fP)(*((double*)&x ))"
.br
.ti -1c
.RI "#define \fBLAPACK_ROW_MAJOR\fP   101"
.br
.ti -1c
.RI "#define \fBLAPACK_COL_MAJOR\fP   102"
.br
.ti -1c
.RI "#define \fBLAPACK_WORK_MEMORY_ERROR\fP   \-1010"
.br
.ti -1c
.RI "#define \fBLAPACK_TRANSPOSE_MEMORY_ERROR\fP   \-1011"
.br
.ti -1c
.RI "#define \fBLAPACK_lsame\fP   \fBLAPACK_GLOBAL\fP(\fBlsame\fP,LSAME)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetrf\fP   \fBLAPACK_GLOBAL\fP(\fBsgetrf\fP,SGETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetrf\fP   \fBLAPACK_GLOBAL\fP(\fBdgetrf\fP,DGETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetrf\fP   \fBLAPACK_GLOBAL\fP(\fBcgetrf\fP,CGETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetrf\fP   \fBLAPACK_GLOBAL\fP(\fBzgetrf\fP,ZGETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetrf2\fP   \fBLAPACK_GLOBAL\fP(\fBsgetrf2\fP,SGETRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetrf2\fP   \fBLAPACK_GLOBAL\fP(\fBdgetrf2\fP,DGETRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetrf2\fP   \fBLAPACK_GLOBAL\fP(\fBcgetrf2\fP,CGETRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetrf2\fP   \fBLAPACK_GLOBAL\fP(\fBzgetrf2\fP,ZGETRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBsgbtrf\fP,SGBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBdgbtrf\fP,DGBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBcgbtrf\fP,CGBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBzgbtrf\fP,ZGBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgttrf\fP   \fBLAPACK_GLOBAL\fP(\fBsgttrf\fP,SGTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgttrf\fP   \fBLAPACK_GLOBAL\fP(\fBdgttrf\fP,DGTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgttrf\fP   \fBLAPACK_GLOBAL\fP(\fBcgttrf\fP,CGTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgttrf\fP   \fBLAPACK_GLOBAL\fP(\fBzgttrf\fP,ZGTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spotrf\fP   \fBLAPACK_GLOBAL\fP(\fBspotrf\fP,SPOTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpotrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpotrf\fP,DPOTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpotrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpotrf\fP,CPOTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpotrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpotrf\fP,ZPOTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spotrf2\fP   \fBLAPACK_GLOBAL\fP(\fBspotrf2\fP,SPOTRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpotrf2\fP   \fBLAPACK_GLOBAL\fP(\fBdpotrf2\fP,DPOTRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpotrf2\fP   \fBLAPACK_GLOBAL\fP(\fBcpotrf2\fP,CPOTRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpotrf2\fP   \fBLAPACK_GLOBAL\fP(\fBzpotrf2\fP,ZPOTRF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpstrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpstrf\fP,DPSTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spstrf\fP   \fBLAPACK_GLOBAL\fP(\fBspstrf\fP,SPSTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpstrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpstrf\fP,ZPSTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpstrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpstrf\fP,CPSTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpftrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpftrf\fP,DPFTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spftrf\fP   \fBLAPACK_GLOBAL\fP(\fBspftrf\fP,SPFTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpftrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpftrf\fP,ZPFTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpftrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpftrf\fP,CPFTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spptrf\fP   \fBLAPACK_GLOBAL\fP(\fBspptrf\fP,SPPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpptrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpptrf\fP,DPPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpptrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpptrf\fP,CPPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpptrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpptrf\fP,ZPPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBspbtrf\fP,SPBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpbtrf\fP,DPBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpbtrf\fP,CPBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbtrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpbtrf\fP,ZPBTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_spttrf\fP   \fBLAPACK_GLOBAL\fP(\fBspttrf\fP,SPTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpttrf\fP   \fBLAPACK_GLOBAL\fP(\fBdpttrf\fP,DPTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpttrf\fP   \fBLAPACK_GLOBAL\fP(\fBcpttrf\fP,CPTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpttrf\fP   \fBLAPACK_GLOBAL\fP(\fBzpttrf\fP,ZPTTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrf\fP   \fBLAPACK_GLOBAL\fP(\fBssytrf\fP,SSYTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBssytrf_rook\fP,SSYTRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrf\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrf\fP,DSYTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrf_rook\fP,DSYTRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrf\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrf\fP,CSYTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrf_rook\fP,CSYTRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrf\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrf\fP,ZSYTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrf_rook\fP,ZSYTRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrf\fP   \fBLAPACK_GLOBAL\fP(\fBchetrf\fP,CHETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBchetrf_rook\fP,CHETRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrf\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrf\fP,ZHETRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrf_rook\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrf_rook\fP,ZHETRF_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssptrf\fP   \fBLAPACK_GLOBAL\fP(\fBssptrf\fP,SSPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsptrf\fP   \fBLAPACK_GLOBAL\fP(\fBdsptrf\fP,DSPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_csptrf\fP   \fBLAPACK_GLOBAL\fP(\fBcsptrf\fP,CSPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsptrf\fP   \fBLAPACK_GLOBAL\fP(\fBzsptrf\fP,ZSPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_chptrf\fP   \fBLAPACK_GLOBAL\fP(\fBchptrf\fP,CHPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhptrf\fP   \fBLAPACK_GLOBAL\fP(\fBzhptrf\fP,ZHPTRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetrs\fP   \fBLAPACK_GLOBAL\fP(\fBsgetrs\fP,SGETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetrs\fP   \fBLAPACK_GLOBAL\fP(\fBdgetrs\fP,DGETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetrs\fP   \fBLAPACK_GLOBAL\fP(\fBcgetrs\fP,CGETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetrs\fP   \fBLAPACK_GLOBAL\fP(\fBzgetrs\fP,ZGETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBsgbtrs\fP,SGBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBdgbtrs\fP,DGBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBcgbtrs\fP,CGBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBzgbtrs\fP,ZGBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgttrs\fP   \fBLAPACK_GLOBAL\fP(\fBsgttrs\fP,SGTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgttrs\fP   \fBLAPACK_GLOBAL\fP(\fBdgttrs\fP,DGTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgttrs\fP   \fBLAPACK_GLOBAL\fP(\fBcgttrs\fP,CGTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgttrs\fP   \fBLAPACK_GLOBAL\fP(\fBzgttrs\fP,ZGTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spotrs\fP   \fBLAPACK_GLOBAL\fP(\fBspotrs\fP,SPOTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpotrs\fP   \fBLAPACK_GLOBAL\fP(\fBdpotrs\fP,DPOTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpotrs\fP   \fBLAPACK_GLOBAL\fP(\fBcpotrs\fP,CPOTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpotrs\fP   \fBLAPACK_GLOBAL\fP(\fBzpotrs\fP,ZPOTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpftrs\fP   \fBLAPACK_GLOBAL\fP(\fBdpftrs\fP,DPFTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spftrs\fP   \fBLAPACK_GLOBAL\fP(\fBspftrs\fP,SPFTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpftrs\fP   \fBLAPACK_GLOBAL\fP(\fBzpftrs\fP,ZPFTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpftrs\fP   \fBLAPACK_GLOBAL\fP(\fBcpftrs\fP,CPFTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spptrs\fP   \fBLAPACK_GLOBAL\fP(\fBspptrs\fP,SPPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpptrs\fP   \fBLAPACK_GLOBAL\fP(\fBdpptrs\fP,DPPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpptrs\fP   \fBLAPACK_GLOBAL\fP(\fBcpptrs\fP,CPPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpptrs\fP   \fBLAPACK_GLOBAL\fP(\fBzpptrs\fP,ZPPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBspbtrs\fP,SPBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBdpbtrs\fP,DPBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBcpbtrs\fP,CPBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBzpbtrs\fP,ZPBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spttrs\fP   \fBLAPACK_GLOBAL\fP(\fBspttrs\fP,SPTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpttrs\fP   \fBLAPACK_GLOBAL\fP(\fBdpttrs\fP,DPTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpttrs\fP   \fBLAPACK_GLOBAL\fP(\fBcpttrs\fP,CPTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpttrs\fP   \fBLAPACK_GLOBAL\fP(\fBzpttrs\fP,ZPTTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs\fP,SSYTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs_rook\fP,SSYTRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs\fP,DSYTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs_rook\fP,DSYTRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs\fP,CSYTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs_rook\fP,CSYTRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs\fP,ZSYTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs_rook\fP,ZSYTRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs\fP,CHETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs_rook\fP,CHETRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs\fP,ZHETRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs_rook\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs_rook\fP,ZHETRS_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssptrs\fP   \fBLAPACK_GLOBAL\fP(\fBssptrs\fP,SSPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsptrs\fP   \fBLAPACK_GLOBAL\fP(\fBdsptrs\fP,DSPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_csptrs\fP   \fBLAPACK_GLOBAL\fP(\fBcsptrs\fP,CSPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsptrs\fP   \fBLAPACK_GLOBAL\fP(\fBzsptrs\fP,ZSPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_chptrs\fP   \fBLAPACK_GLOBAL\fP(\fBchptrs\fP,CHPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhptrs\fP   \fBLAPACK_GLOBAL\fP(\fBzhptrs\fP,ZHPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_strtrs\fP   \fBLAPACK_GLOBAL\fP(\fBstrtrs\fP,STRTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrtrs\fP   \fBLAPACK_GLOBAL\fP(\fBdtrtrs\fP,DTRTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrtrs\fP   \fBLAPACK_GLOBAL\fP(\fBctrtrs\fP,CTRTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrtrs\fP   \fBLAPACK_GLOBAL\fP(\fBztrtrs\fP,ZTRTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_stptrs\fP   \fBLAPACK_GLOBAL\fP(\fBstptrs\fP,STPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtptrs\fP   \fBLAPACK_GLOBAL\fP(\fBdtptrs\fP,DTPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctptrs\fP   \fBLAPACK_GLOBAL\fP(\fBctptrs\fP,CTPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztptrs\fP   \fBLAPACK_GLOBAL\fP(\fBztptrs\fP,ZTPTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_stbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBstbtrs\fP,STBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBdtbtrs\fP,DTBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBctbtrs\fP,CTBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztbtrs\fP   \fBLAPACK_GLOBAL\fP(\fBztbtrs\fP,ZTBTRS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgecon\fP   \fBLAPACK_GLOBAL\fP(\fBsgecon\fP,SGECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgecon\fP   \fBLAPACK_GLOBAL\fP(\fBdgecon\fP,DGECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgecon\fP   \fBLAPACK_GLOBAL\fP(\fBcgecon\fP,CGECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgecon\fP   \fBLAPACK_GLOBAL\fP(\fBzgecon\fP,ZGECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbcon\fP   \fBLAPACK_GLOBAL\fP(\fBsgbcon\fP,SGBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbcon\fP   \fBLAPACK_GLOBAL\fP(\fBdgbcon\fP,DGBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbcon\fP   \fBLAPACK_GLOBAL\fP(\fBcgbcon\fP,CGBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbcon\fP   \fBLAPACK_GLOBAL\fP(\fBzgbcon\fP,ZGBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgtcon\fP   \fBLAPACK_GLOBAL\fP(\fBsgtcon\fP,SGTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgtcon\fP   \fBLAPACK_GLOBAL\fP(\fBdgtcon\fP,DGTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgtcon\fP   \fBLAPACK_GLOBAL\fP(\fBcgtcon\fP,CGTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgtcon\fP   \fBLAPACK_GLOBAL\fP(\fBzgtcon\fP,ZGTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_spocon\fP   \fBLAPACK_GLOBAL\fP(\fBspocon\fP,SPOCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpocon\fP   \fBLAPACK_GLOBAL\fP(\fBdpocon\fP,DPOCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpocon\fP   \fBLAPACK_GLOBAL\fP(\fBcpocon\fP,CPOCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpocon\fP   \fBLAPACK_GLOBAL\fP(\fBzpocon\fP,ZPOCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sppcon\fP   \fBLAPACK_GLOBAL\fP(\fBsppcon\fP,SPPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dppcon\fP   \fBLAPACK_GLOBAL\fP(\fBdppcon\fP,DPPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cppcon\fP   \fBLAPACK_GLOBAL\fP(\fBcppcon\fP,CPPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zppcon\fP   \fBLAPACK_GLOBAL\fP(\fBzppcon\fP,ZPPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbcon\fP   \fBLAPACK_GLOBAL\fP(\fBspbcon\fP,SPBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbcon\fP   \fBLAPACK_GLOBAL\fP(\fBdpbcon\fP,DPBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbcon\fP   \fBLAPACK_GLOBAL\fP(\fBcpbcon\fP,CPBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbcon\fP   \fBLAPACK_GLOBAL\fP(\fBzpbcon\fP,ZPBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sptcon\fP   \fBLAPACK_GLOBAL\fP(\fBsptcon\fP,SPTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dptcon\fP   \fBLAPACK_GLOBAL\fP(\fBdptcon\fP,DPTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cptcon\fP   \fBLAPACK_GLOBAL\fP(\fBcptcon\fP,CPTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zptcon\fP   \fBLAPACK_GLOBAL\fP(\fBzptcon\fP,ZPTCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssycon\fP   \fBLAPACK_GLOBAL\fP(\fBssycon\fP,SSYCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsycon\fP   \fBLAPACK_GLOBAL\fP(\fBdsycon\fP,DSYCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_csycon\fP   \fBLAPACK_GLOBAL\fP(\fBcsycon\fP,CSYCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsycon\fP   \fBLAPACK_GLOBAL\fP(\fBzsycon\fP,ZSYCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_checon\fP   \fBLAPACK_GLOBAL\fP(\fBchecon\fP,CHECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhecon\fP   \fBLAPACK_GLOBAL\fP(\fBzhecon\fP,ZHECON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspcon\fP   \fBLAPACK_GLOBAL\fP(\fBsspcon\fP,SSPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspcon\fP   \fBLAPACK_GLOBAL\fP(\fBdspcon\fP,DSPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_cspcon\fP   \fBLAPACK_GLOBAL\fP(\fBcspcon\fP,CSPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zspcon\fP   \fBLAPACK_GLOBAL\fP(\fBzspcon\fP,ZSPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpcon\fP   \fBLAPACK_GLOBAL\fP(\fBchpcon\fP,CHPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpcon\fP   \fBLAPACK_GLOBAL\fP(\fBzhpcon\fP,ZHPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_strcon\fP   \fBLAPACK_GLOBAL\fP(\fBstrcon\fP,STRCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrcon\fP   \fBLAPACK_GLOBAL\fP(\fBdtrcon\fP,DTRCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrcon\fP   \fBLAPACK_GLOBAL\fP(\fBctrcon\fP,CTRCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrcon\fP   \fBLAPACK_GLOBAL\fP(\fBztrcon\fP,ZTRCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpcon\fP   \fBLAPACK_GLOBAL\fP(\fBstpcon\fP,STPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpcon\fP   \fBLAPACK_GLOBAL\fP(\fBdtpcon\fP,DTPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpcon\fP   \fBLAPACK_GLOBAL\fP(\fBctpcon\fP,CTPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpcon\fP   \fBLAPACK_GLOBAL\fP(\fBztpcon\fP,ZTPCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_stbcon\fP   \fBLAPACK_GLOBAL\fP(\fBstbcon\fP,STBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtbcon\fP   \fBLAPACK_GLOBAL\fP(\fBdtbcon\fP,DTBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctbcon\fP   \fBLAPACK_GLOBAL\fP(\fBctbcon\fP,CTBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztbcon\fP   \fBLAPACK_GLOBAL\fP(\fBztbcon\fP,ZTBCON)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgerfs\fP   \fBLAPACK_GLOBAL\fP(\fBsgerfs\fP,SGERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgerfs\fP   \fBLAPACK_GLOBAL\fP(\fBdgerfs\fP,DGERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgerfs\fP   \fBLAPACK_GLOBAL\fP(\fBcgerfs\fP,CGERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgerfs\fP   \fBLAPACK_GLOBAL\fP(\fBzgerfs\fP,ZGERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgerfsx\fP   \fBLAPACK_GLOBAL\fP(\fBdgerfsx\fP,DGERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgerfsx\fP   \fBLAPACK_GLOBAL\fP(\fBsgerfsx\fP,SGERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgerfsx\fP   \fBLAPACK_GLOBAL\fP(\fBzgerfsx\fP,ZGERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgerfsx\fP   \fBLAPACK_GLOBAL\fP(\fBcgerfsx\fP,CGERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBsgbrfs\fP,SGBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdgbrfs\fP,DGBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBcgbrfs\fP,CGBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBzgbrfs\fP,ZGBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBdgbrfsx\fP,DGBRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBsgbrfsx\fP,SGBRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBzgbrfsx\fP,ZGBRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBcgbrfsx\fP,CGBRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgtrfs\fP   \fBLAPACK_GLOBAL\fP(\fBsgtrfs\fP,SGTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgtrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdgtrfs\fP,DGTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgtrfs\fP   \fBLAPACK_GLOBAL\fP(\fBcgtrfs\fP,CGTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgtrfs\fP   \fBLAPACK_GLOBAL\fP(\fBzgtrfs\fP,ZGTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sporfs\fP   \fBLAPACK_GLOBAL\fP(\fBsporfs\fP,SPORFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dporfs\fP   \fBLAPACK_GLOBAL\fP(\fBdporfs\fP,DPORFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cporfs\fP   \fBLAPACK_GLOBAL\fP(\fBcporfs\fP,CPORFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zporfs\fP   \fBLAPACK_GLOBAL\fP(\fBzporfs\fP,ZPORFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dporfsx\fP   \fBLAPACK_GLOBAL\fP(\fBdporfsx\fP,DPORFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sporfsx\fP   \fBLAPACK_GLOBAL\fP(\fBsporfsx\fP,SPORFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zporfsx\fP   \fBLAPACK_GLOBAL\fP(\fBzporfsx\fP,ZPORFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cporfsx\fP   \fBLAPACK_GLOBAL\fP(\fBcporfsx\fP,CPORFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_spprfs\fP   \fBLAPACK_GLOBAL\fP(\fBspprfs\fP,SPPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpprfs\fP   \fBLAPACK_GLOBAL\fP(\fBdpprfs\fP,DPPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpprfs\fP   \fBLAPACK_GLOBAL\fP(\fBcpprfs\fP,CPPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpprfs\fP   \fBLAPACK_GLOBAL\fP(\fBzpprfs\fP,ZPPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBspbrfs\fP,SPBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdpbrfs\fP,DPBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBcpbrfs\fP,CPBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBzpbrfs\fP,ZPBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sptrfs\fP   \fBLAPACK_GLOBAL\fP(\fBsptrfs\fP,SPTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dptrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdptrfs\fP,DPTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cptrfs\fP   \fBLAPACK_GLOBAL\fP(\fBcptrfs\fP,CPTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zptrfs\fP   \fBLAPACK_GLOBAL\fP(\fBzptrfs\fP,ZPTRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyrfs\fP   \fBLAPACK_GLOBAL\fP(\fBssyrfs\fP,SSYRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdsyrfs\fP,DSYRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyrfs\fP   \fBLAPACK_GLOBAL\fP(\fBcsyrfs\fP,CSYRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyrfs\fP   \fBLAPACK_GLOBAL\fP(\fBzsyrfs\fP,ZSYRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBdsyrfsx\fP,DSYRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBssyrfsx\fP,SSYRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBzsyrfsx\fP,ZSYRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyrfsx\fP   \fBLAPACK_GLOBAL\fP(\fBcsyrfsx\fP,CSYRFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cherfs\fP   \fBLAPACK_GLOBAL\fP(\fBcherfs\fP,CHERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zherfs\fP   \fBLAPACK_GLOBAL\fP(\fBzherfs\fP,ZHERFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zherfsx\fP   \fBLAPACK_GLOBAL\fP(\fBzherfsx\fP,ZHERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cherfsx\fP   \fBLAPACK_GLOBAL\fP(\fBcherfsx\fP,CHERFSX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssprfs\fP   \fBLAPACK_GLOBAL\fP(\fBssprfs\fP,SSPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsprfs\fP   \fBLAPACK_GLOBAL\fP(\fBdsprfs\fP,DSPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_csprfs\fP   \fBLAPACK_GLOBAL\fP(\fBcsprfs\fP,CSPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsprfs\fP   \fBLAPACK_GLOBAL\fP(\fBzsprfs\fP,ZSPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_chprfs\fP   \fBLAPACK_GLOBAL\fP(\fBchprfs\fP,CHPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhprfs\fP   \fBLAPACK_GLOBAL\fP(\fBzhprfs\fP,ZHPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_strrfs\fP   \fBLAPACK_GLOBAL\fP(\fBstrrfs\fP,STRRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdtrrfs\fP,DTRRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrrfs\fP   \fBLAPACK_GLOBAL\fP(\fBctrrfs\fP,CTRRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrrfs\fP   \fBLAPACK_GLOBAL\fP(\fBztrrfs\fP,ZTRRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_stprfs\fP   \fBLAPACK_GLOBAL\fP(\fBstprfs\fP,STPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtprfs\fP   \fBLAPACK_GLOBAL\fP(\fBdtprfs\fP,DTPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctprfs\fP   \fBLAPACK_GLOBAL\fP(\fBctprfs\fP,CTPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztprfs\fP   \fBLAPACK_GLOBAL\fP(\fBztprfs\fP,ZTPRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_stbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBstbrfs\fP,STBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBdtbrfs\fP,DTBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBctbrfs\fP,CTBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztbrfs\fP   \fBLAPACK_GLOBAL\fP(\fBztbrfs\fP,ZTBRFS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetri\fP   \fBLAPACK_GLOBAL\fP(\fBsgetri\fP,SGETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetri\fP   \fBLAPACK_GLOBAL\fP(\fBdgetri\fP,DGETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetri\fP   \fBLAPACK_GLOBAL\fP(\fBcgetri\fP,CGETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetri\fP   \fBLAPACK_GLOBAL\fP(\fBzgetri\fP,ZGETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_spotri\fP   \fBLAPACK_GLOBAL\fP(\fBspotri\fP,SPOTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpotri\fP   \fBLAPACK_GLOBAL\fP(\fBdpotri\fP,DPOTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpotri\fP   \fBLAPACK_GLOBAL\fP(\fBcpotri\fP,CPOTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpotri\fP   \fBLAPACK_GLOBAL\fP(\fBzpotri\fP,ZPOTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpftri\fP   \fBLAPACK_GLOBAL\fP(\fBdpftri\fP,DPFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_spftri\fP   \fBLAPACK_GLOBAL\fP(\fBspftri\fP,SPFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpftri\fP   \fBLAPACK_GLOBAL\fP(\fBzpftri\fP,ZPFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpftri\fP   \fBLAPACK_GLOBAL\fP(\fBcpftri\fP,CPFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_spptri\fP   \fBLAPACK_GLOBAL\fP(\fBspptri\fP,SPPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpptri\fP   \fBLAPACK_GLOBAL\fP(\fBdpptri\fP,DPPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpptri\fP   \fBLAPACK_GLOBAL\fP(\fBcpptri\fP,CPPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpptri\fP   \fBLAPACK_GLOBAL\fP(\fBzpptri\fP,ZPPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytri\fP   \fBLAPACK_GLOBAL\fP(\fBssytri\fP,SSYTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytri\fP   \fBLAPACK_GLOBAL\fP(\fBdsytri\fP,DSYTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytri\fP   \fBLAPACK_GLOBAL\fP(\fBcsytri\fP,CSYTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytri\fP   \fBLAPACK_GLOBAL\fP(\fBzsytri\fP,ZSYTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetri\fP   \fBLAPACK_GLOBAL\fP(\fBchetri\fP,CHETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetri\fP   \fBLAPACK_GLOBAL\fP(\fBzhetri\fP,ZHETRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssptri\fP   \fBLAPACK_GLOBAL\fP(\fBssptri\fP,SSPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsptri\fP   \fBLAPACK_GLOBAL\fP(\fBdsptri\fP,DSPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_csptri\fP   \fBLAPACK_GLOBAL\fP(\fBcsptri\fP,CSPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsptri\fP   \fBLAPACK_GLOBAL\fP(\fBzsptri\fP,ZSPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_chptri\fP   \fBLAPACK_GLOBAL\fP(\fBchptri\fP,CHPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhptri\fP   \fBLAPACK_GLOBAL\fP(\fBzhptri\fP,ZHPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_strtri\fP   \fBLAPACK_GLOBAL\fP(\fBstrtri\fP,STRTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrtri\fP   \fBLAPACK_GLOBAL\fP(\fBdtrtri\fP,DTRTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrtri\fP   \fBLAPACK_GLOBAL\fP(\fBctrtri\fP,CTRTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrtri\fP   \fBLAPACK_GLOBAL\fP(\fBztrtri\fP,ZTRTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtftri\fP   \fBLAPACK_GLOBAL\fP(\fBdtftri\fP,DTFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_stftri\fP   \fBLAPACK_GLOBAL\fP(\fBstftri\fP,STFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztftri\fP   \fBLAPACK_GLOBAL\fP(\fBztftri\fP,ZTFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctftri\fP   \fBLAPACK_GLOBAL\fP(\fBctftri\fP,CTFTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_stptri\fP   \fBLAPACK_GLOBAL\fP(\fBstptri\fP,STPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtptri\fP   \fBLAPACK_GLOBAL\fP(\fBdtptri\fP,DTPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctptri\fP   \fBLAPACK_GLOBAL\fP(\fBctptri\fP,CTPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztptri\fP   \fBLAPACK_GLOBAL\fP(\fBztptri\fP,ZTPTRI)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeequ\fP   \fBLAPACK_GLOBAL\fP(\fBsgeequ\fP,SGEEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeequ\fP   \fBLAPACK_GLOBAL\fP(\fBdgeequ\fP,DGEEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeequ\fP   \fBLAPACK_GLOBAL\fP(\fBcgeequ\fP,CGEEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeequ\fP   \fBLAPACK_GLOBAL\fP(\fBzgeequ\fP,ZGEEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeequb\fP   \fBLAPACK_GLOBAL\fP(\fBdgeequb\fP,DGEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeequb\fP   \fBLAPACK_GLOBAL\fP(\fBsgeequb\fP,SGEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeequb\fP   \fBLAPACK_GLOBAL\fP(\fBzgeequb\fP,ZGEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeequb\fP   \fBLAPACK_GLOBAL\fP(\fBcgeequb\fP,CGEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbequ\fP   \fBLAPACK_GLOBAL\fP(\fBsgbequ\fP,SGBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbequ\fP   \fBLAPACK_GLOBAL\fP(\fBdgbequ\fP,DGBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbequ\fP   \fBLAPACK_GLOBAL\fP(\fBcgbequ\fP,CGBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbequ\fP   \fBLAPACK_GLOBAL\fP(\fBzgbequ\fP,ZGBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbequb\fP   \fBLAPACK_GLOBAL\fP(\fBdgbequb\fP,DGBEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbequb\fP   \fBLAPACK_GLOBAL\fP(\fBsgbequb\fP,SGBEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbequb\fP   \fBLAPACK_GLOBAL\fP(\fBzgbequb\fP,ZGBEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbequb\fP   \fBLAPACK_GLOBAL\fP(\fBcgbequb\fP,CGBEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_spoequ\fP   \fBLAPACK_GLOBAL\fP(\fBspoequ\fP,SPOEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpoequ\fP   \fBLAPACK_GLOBAL\fP(\fBdpoequ\fP,DPOEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpoequ\fP   \fBLAPACK_GLOBAL\fP(\fBcpoequ\fP,CPOEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpoequ\fP   \fBLAPACK_GLOBAL\fP(\fBzpoequ\fP,ZPOEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpoequb\fP   \fBLAPACK_GLOBAL\fP(\fBdpoequb\fP,DPOEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_spoequb\fP   \fBLAPACK_GLOBAL\fP(\fBspoequb\fP,SPOEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpoequb\fP   \fBLAPACK_GLOBAL\fP(\fBzpoequb\fP,ZPOEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpoequb\fP   \fBLAPACK_GLOBAL\fP(\fBcpoequb\fP,CPOEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sppequ\fP   \fBLAPACK_GLOBAL\fP(\fBsppequ\fP,SPPEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dppequ\fP   \fBLAPACK_GLOBAL\fP(\fBdppequ\fP,DPPEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_cppequ\fP   \fBLAPACK_GLOBAL\fP(\fBcppequ\fP,CPPEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_zppequ\fP   \fBLAPACK_GLOBAL\fP(\fBzppequ\fP,ZPPEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbequ\fP   \fBLAPACK_GLOBAL\fP(\fBspbequ\fP,SPBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbequ\fP   \fBLAPACK_GLOBAL\fP(\fBdpbequ\fP,DPBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbequ\fP   \fBLAPACK_GLOBAL\fP(\fBcpbequ\fP,CPBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbequ\fP   \fBLAPACK_GLOBAL\fP(\fBzpbequ\fP,ZPBEQU)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyequb\fP   \fBLAPACK_GLOBAL\fP(\fBdsyequb\fP,DSYEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyequb\fP   \fBLAPACK_GLOBAL\fP(\fBssyequb\fP,SSYEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyequb\fP   \fBLAPACK_GLOBAL\fP(\fBzsyequb\fP,ZSYEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyequb\fP   \fBLAPACK_GLOBAL\fP(\fBcsyequb\fP,CSYEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheequb\fP   \fBLAPACK_GLOBAL\fP(\fBzheequb\fP,ZHEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheequb\fP   \fBLAPACK_GLOBAL\fP(\fBcheequb\fP,CHEEQUB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesv\fP   \fBLAPACK_GLOBAL\fP(\fBsgesv\fP,SGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesv\fP   \fBLAPACK_GLOBAL\fP(\fBdgesv\fP,DGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesv\fP   \fBLAPACK_GLOBAL\fP(\fBcgesv\fP,CGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesv\fP   \fBLAPACK_GLOBAL\fP(\fBzgesv\fP,ZGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsgesv\fP   \fBLAPACK_GLOBAL\fP(\fBdsgesv\fP,DSGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zcgesv\fP   \fBLAPACK_GLOBAL\fP(\fBzcgesv\fP,ZCGESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesvx\fP   \fBLAPACK_GLOBAL\fP(\fBsgesvx\fP,SGESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesvx\fP   \fBLAPACK_GLOBAL\fP(\fBdgesvx\fP,DGESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesvx\fP   \fBLAPACK_GLOBAL\fP(\fBcgesvx\fP,CGESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesvx\fP   \fBLAPACK_GLOBAL\fP(\fBzgesvx\fP,ZGESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBdgesvxx\fP,DGESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBsgesvxx\fP,SGESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBzgesvxx\fP,ZGESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBcgesvxx\fP,CGESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbsv\fP   \fBLAPACK_GLOBAL\fP(\fBsgbsv\fP,SGBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbsv\fP   \fBLAPACK_GLOBAL\fP(\fBdgbsv\fP,DGBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbsv\fP   \fBLAPACK_GLOBAL\fP(\fBcgbsv\fP,CGBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbsv\fP   \fBLAPACK_GLOBAL\fP(\fBzgbsv\fP,ZGBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBsgbsvx\fP,SGBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdgbsvx\fP,DGBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcgbsvx\fP,CGBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzgbsvx\fP,ZGBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbsvxx\fP   \fBLAPACK_GLOBAL\fP(\fBdgbsvxx\fP,DGBSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbsvxx\fP   \fBLAPACK_GLOBAL\fP(\fBsgbsvxx\fP,SGBSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbsvxx\fP   \fBLAPACK_GLOBAL\fP(\fBzgbsvxx\fP,ZGBSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbsvxx\fP   \fBLAPACK_GLOBAL\fP(\fBcgbsvxx\fP,CGBSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgtsv\fP   \fBLAPACK_GLOBAL\fP(\fBsgtsv\fP,SGTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgtsv\fP   \fBLAPACK_GLOBAL\fP(\fBdgtsv\fP,DGTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgtsv\fP   \fBLAPACK_GLOBAL\fP(\fBcgtsv\fP,CGTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgtsv\fP   \fBLAPACK_GLOBAL\fP(\fBzgtsv\fP,ZGTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgtsvx\fP   \fBLAPACK_GLOBAL\fP(\fBsgtsvx\fP,SGTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgtsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdgtsvx\fP,DGTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgtsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcgtsvx\fP,CGTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgtsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzgtsvx\fP,ZGTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sposv\fP   \fBLAPACK_GLOBAL\fP(\fBsposv\fP,SPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dposv\fP   \fBLAPACK_GLOBAL\fP(\fBdposv\fP,DPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cposv\fP   \fBLAPACK_GLOBAL\fP(\fBcposv\fP,CPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zposv\fP   \fBLAPACK_GLOBAL\fP(\fBzposv\fP,ZPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsposv\fP   \fBLAPACK_GLOBAL\fP(\fBdsposv\fP,DSPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zcposv\fP   \fBLAPACK_GLOBAL\fP(\fBzcposv\fP,ZCPOSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sposvx\fP   \fBLAPACK_GLOBAL\fP(\fBsposvx\fP,SPOSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dposvx\fP   \fBLAPACK_GLOBAL\fP(\fBdposvx\fP,DPOSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cposvx\fP   \fBLAPACK_GLOBAL\fP(\fBcposvx\fP,CPOSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zposvx\fP   \fBLAPACK_GLOBAL\fP(\fBzposvx\fP,ZPOSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dposvxx\fP   \fBLAPACK_GLOBAL\fP(\fBdposvxx\fP,DPOSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sposvxx\fP   \fBLAPACK_GLOBAL\fP(\fBsposvxx\fP,SPOSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zposvxx\fP   \fBLAPACK_GLOBAL\fP(\fBzposvxx\fP,ZPOSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cposvxx\fP   \fBLAPACK_GLOBAL\fP(\fBcposvxx\fP,CPOSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sppsv\fP   \fBLAPACK_GLOBAL\fP(\fBsppsv\fP,SPPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dppsv\fP   \fBLAPACK_GLOBAL\fP(\fBdppsv\fP,DPPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cppsv\fP   \fBLAPACK_GLOBAL\fP(\fBcppsv\fP,CPPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zppsv\fP   \fBLAPACK_GLOBAL\fP(\fBzppsv\fP,ZPPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sppsvx\fP   \fBLAPACK_GLOBAL\fP(\fBsppsvx\fP,SPPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dppsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdppsvx\fP,DPPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cppsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcppsvx\fP,CPPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zppsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzppsvx\fP,ZPPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbsv\fP   \fBLAPACK_GLOBAL\fP(\fBspbsv\fP,SPBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbsv\fP   \fBLAPACK_GLOBAL\fP(\fBdpbsv\fP,DPBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbsv\fP   \fBLAPACK_GLOBAL\fP(\fBcpbsv\fP,CPBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbsv\fP   \fBLAPACK_GLOBAL\fP(\fBzpbsv\fP,ZPBSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBspbsvx\fP,SPBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdpbsvx\fP,DPBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcpbsvx\fP,CPBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzpbsvx\fP,ZPBSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sptsv\fP   \fBLAPACK_GLOBAL\fP(\fBsptsv\fP,SPTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dptsv\fP   \fBLAPACK_GLOBAL\fP(\fBdptsv\fP,DPTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cptsv\fP   \fBLAPACK_GLOBAL\fP(\fBcptsv\fP,CPTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zptsv\fP   \fBLAPACK_GLOBAL\fP(\fBzptsv\fP,ZPTSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sptsvx\fP   \fBLAPACK_GLOBAL\fP(\fBsptsvx\fP,SPTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dptsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdptsvx\fP,DPTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cptsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcptsvx\fP,CPTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zptsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzptsvx\fP,ZPTSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysv\fP   \fBLAPACK_GLOBAL\fP(\fBssysv\fP,SSYSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysv\fP   \fBLAPACK_GLOBAL\fP(\fBdsysv\fP,DSYSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysv\fP   \fBLAPACK_GLOBAL\fP(\fBcsysv\fP,CSYSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysv\fP   \fBLAPACK_GLOBAL\fP(\fBzsysv\fP,ZSYSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysvx\fP   \fBLAPACK_GLOBAL\fP(\fBssysvx\fP,SSYSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysvx\fP   \fBLAPACK_GLOBAL\fP(\fBdsysvx\fP,DSYSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysvx\fP   \fBLAPACK_GLOBAL\fP(\fBcsysvx\fP,CSYSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysvx\fP   \fBLAPACK_GLOBAL\fP(\fBzsysvx\fP,ZSYSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysvxx\fP   \fBLAPACK_GLOBAL\fP(\fBdsysvxx\fP,DSYSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysvxx\fP   \fBLAPACK_GLOBAL\fP(\fBssysvxx\fP,SSYSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysvxx\fP   \fBLAPACK_GLOBAL\fP(\fBzsysvxx\fP,ZSYSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysvxx\fP   \fBLAPACK_GLOBAL\fP(\fBcsysvxx\fP,CSYSVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesv\fP   \fBLAPACK_GLOBAL\fP(\fBchesv\fP,CHESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesv\fP   \fBLAPACK_GLOBAL\fP(\fBzhesv\fP,ZHESV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesvx\fP   \fBLAPACK_GLOBAL\fP(\fBchesvx\fP,CHESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesvx\fP   \fBLAPACK_GLOBAL\fP(\fBzhesvx\fP,ZHESVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBzhesvxx\fP,ZHESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesvxx\fP   \fBLAPACK_GLOBAL\fP(\fBchesvxx\fP,CHESVXX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspsv\fP   \fBLAPACK_GLOBAL\fP(\fBsspsv\fP,SSPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspsv\fP   \fBLAPACK_GLOBAL\fP(\fBdspsv\fP,DSPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cspsv\fP   \fBLAPACK_GLOBAL\fP(\fBcspsv\fP,CSPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zspsv\fP   \fBLAPACK_GLOBAL\fP(\fBzspsv\fP,ZSPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspsvx\fP   \fBLAPACK_GLOBAL\fP(\fBsspsvx\fP,SSPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspsvx\fP   \fBLAPACK_GLOBAL\fP(\fBdspsvx\fP,DSPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cspsvx\fP   \fBLAPACK_GLOBAL\fP(\fBcspsvx\fP,CSPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zspsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzspsvx\fP,ZSPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpsv\fP   \fBLAPACK_GLOBAL\fP(\fBchpsv\fP,CHPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpsv\fP   \fBLAPACK_GLOBAL\fP(\fBzhpsv\fP,ZHPSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpsvx\fP   \fBLAPACK_GLOBAL\fP(\fBchpsvx\fP,CHPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpsvx\fP   \fBLAPACK_GLOBAL\fP(\fBzhpsvx\fP,ZHPSVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqrf\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqrf\fP,SGEQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqrf\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqrf\fP,DGEQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqrf\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqrf\fP,CGEQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqrf\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqrf\fP,ZGEQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqpf\fP   \fBLAPACK_GLOBAL\fP(sgeqpf,SGEQPF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqpf\fP   \fBLAPACK_GLOBAL\fP(dgeqpf,DGEQPF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqpf\fP   \fBLAPACK_GLOBAL\fP(cgeqpf,CGEQPF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqpf\fP   \fBLAPACK_GLOBAL\fP(zgeqpf,ZGEQPF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqp3\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqp3\fP,SGEQP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqp3\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqp3\fP,DGEQP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqp3\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqp3\fP,CGEQP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqp3\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqp3\fP,ZGEQP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorgqr\fP   \fBLAPACK_GLOBAL\fP(\fBsorgqr\fP,SORGQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorgqr\fP   \fBLAPACK_GLOBAL\fP(\fBdorgqr\fP,DORGQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormqr\fP   \fBLAPACK_GLOBAL\fP(\fBsormqr\fP,SORMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormqr\fP   \fBLAPACK_GLOBAL\fP(\fBdormqr\fP,DORMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cungqr\fP   \fBLAPACK_GLOBAL\fP(\fBcungqr\fP,CUNGQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zungqr\fP   \fBLAPACK_GLOBAL\fP(\fBzungqr\fP,ZUNGQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmqr\fP   \fBLAPACK_GLOBAL\fP(\fBcunmqr\fP,CUNMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmqr\fP   \fBLAPACK_GLOBAL\fP(\fBzunmqr\fP,ZUNMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelqf\fP   \fBLAPACK_GLOBAL\fP(\fBsgelqf\fP,SGELQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelqf\fP   \fBLAPACK_GLOBAL\fP(\fBdgelqf\fP,DGELQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelqf\fP   \fBLAPACK_GLOBAL\fP(\fBcgelqf\fP,CGELQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelqf\fP   \fBLAPACK_GLOBAL\fP(\fBzgelqf\fP,ZGELQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorglq\fP   \fBLAPACK_GLOBAL\fP(\fBsorglq\fP,SORGLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorglq\fP   \fBLAPACK_GLOBAL\fP(\fBdorglq\fP,DORGLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormlq\fP   \fBLAPACK_GLOBAL\fP(\fBsormlq\fP,SORMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormlq\fP   \fBLAPACK_GLOBAL\fP(\fBdormlq\fP,DORMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunglq\fP   \fBLAPACK_GLOBAL\fP(\fBcunglq\fP,CUNGLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunglq\fP   \fBLAPACK_GLOBAL\fP(\fBzunglq\fP,ZUNGLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmlq\fP   \fBLAPACK_GLOBAL\fP(\fBcunmlq\fP,CUNMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmlq\fP   \fBLAPACK_GLOBAL\fP(\fBzunmlq\fP,ZUNMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqlf\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqlf\fP,SGEQLF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqlf\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqlf\fP,DGEQLF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqlf\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqlf\fP,CGEQLF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqlf\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqlf\fP,ZGEQLF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorgql\fP   \fBLAPACK_GLOBAL\fP(\fBsorgql\fP,SORGQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorgql\fP   \fBLAPACK_GLOBAL\fP(\fBdorgql\fP,DORGQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_cungql\fP   \fBLAPACK_GLOBAL\fP(\fBcungql\fP,CUNGQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_zungql\fP   \fBLAPACK_GLOBAL\fP(\fBzungql\fP,ZUNGQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormql\fP   \fBLAPACK_GLOBAL\fP(\fBsormql\fP,SORMQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormql\fP   \fBLAPACK_GLOBAL\fP(\fBdormql\fP,DORMQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmql\fP   \fBLAPACK_GLOBAL\fP(\fBcunmql\fP,CUNMQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmql\fP   \fBLAPACK_GLOBAL\fP(\fBzunmql\fP,ZUNMQL)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgerqf\fP   \fBLAPACK_GLOBAL\fP(\fBsgerqf\fP,SGERQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgerqf\fP   \fBLAPACK_GLOBAL\fP(\fBdgerqf\fP,DGERQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgerqf\fP   \fBLAPACK_GLOBAL\fP(\fBcgerqf\fP,CGERQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgerqf\fP   \fBLAPACK_GLOBAL\fP(\fBzgerqf\fP,ZGERQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorgrq\fP   \fBLAPACK_GLOBAL\fP(\fBsorgrq\fP,SORGRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorgrq\fP   \fBLAPACK_GLOBAL\fP(\fBdorgrq\fP,DORGRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cungrq\fP   \fBLAPACK_GLOBAL\fP(\fBcungrq\fP,CUNGRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zungrq\fP   \fBLAPACK_GLOBAL\fP(\fBzungrq\fP,ZUNGRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormrq\fP   \fBLAPACK_GLOBAL\fP(\fBsormrq\fP,SORMRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormrq\fP   \fBLAPACK_GLOBAL\fP(\fBdormrq\fP,DORMRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmrq\fP   \fBLAPACK_GLOBAL\fP(\fBcunmrq\fP,CUNMRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmrq\fP   \fBLAPACK_GLOBAL\fP(\fBzunmrq\fP,ZUNMRQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_stzrzf\fP   \fBLAPACK_GLOBAL\fP(\fBstzrzf\fP,STZRZF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtzrzf\fP   \fBLAPACK_GLOBAL\fP(\fBdtzrzf\fP,DTZRZF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctzrzf\fP   \fBLAPACK_GLOBAL\fP(\fBctzrzf\fP,CTZRZF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztzrzf\fP   \fBLAPACK_GLOBAL\fP(\fBztzrzf\fP,ZTZRZF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormrz\fP   \fBLAPACK_GLOBAL\fP(\fBsormrz\fP,SORMRZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormrz\fP   \fBLAPACK_GLOBAL\fP(\fBdormrz\fP,DORMRZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmrz\fP   \fBLAPACK_GLOBAL\fP(\fBcunmrz\fP,CUNMRZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmrz\fP   \fBLAPACK_GLOBAL\fP(\fBzunmrz\fP,ZUNMRZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggqrf\fP   \fBLAPACK_GLOBAL\fP(\fBsggqrf\fP,SGGQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggqrf\fP   \fBLAPACK_GLOBAL\fP(\fBdggqrf\fP,DGGQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggqrf\fP   \fBLAPACK_GLOBAL\fP(\fBcggqrf\fP,CGGQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggqrf\fP   \fBLAPACK_GLOBAL\fP(\fBzggqrf\fP,ZGGQRF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggrqf\fP   \fBLAPACK_GLOBAL\fP(\fBsggrqf\fP,SGGRQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggrqf\fP   \fBLAPACK_GLOBAL\fP(\fBdggrqf\fP,DGGRQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggrqf\fP   \fBLAPACK_GLOBAL\fP(\fBcggrqf\fP,CGGRQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggrqf\fP   \fBLAPACK_GLOBAL\fP(\fBzggrqf\fP,ZGGRQF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgebrd\fP   \fBLAPACK_GLOBAL\fP(\fBsgebrd\fP,SGEBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgebrd\fP   \fBLAPACK_GLOBAL\fP(\fBdgebrd\fP,DGEBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgebrd\fP   \fBLAPACK_GLOBAL\fP(\fBcgebrd\fP,CGEBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgebrd\fP   \fBLAPACK_GLOBAL\fP(\fBzgebrd\fP,ZGEBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgbbrd\fP   \fBLAPACK_GLOBAL\fP(\fBsgbbrd\fP,SGBBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgbbrd\fP   \fBLAPACK_GLOBAL\fP(\fBdgbbrd\fP,DGBBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgbbrd\fP   \fBLAPACK_GLOBAL\fP(\fBcgbbrd\fP,CGBBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgbbrd\fP   \fBLAPACK_GLOBAL\fP(\fBzgbbrd\fP,ZGBBRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorgbr\fP   \fBLAPACK_GLOBAL\fP(\fBsorgbr\fP,SORGBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorgbr\fP   \fBLAPACK_GLOBAL\fP(\fBdorgbr\fP,DORGBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormbr\fP   \fBLAPACK_GLOBAL\fP(\fBsormbr\fP,SORMBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormbr\fP   \fBLAPACK_GLOBAL\fP(\fBdormbr\fP,DORMBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cungbr\fP   \fBLAPACK_GLOBAL\fP(\fBcungbr\fP,CUNGBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zungbr\fP   \fBLAPACK_GLOBAL\fP(\fBzungbr\fP,ZUNGBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmbr\fP   \fBLAPACK_GLOBAL\fP(\fBcunmbr\fP,CUNMBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmbr\fP   \fBLAPACK_GLOBAL\fP(\fBzunmbr\fP,ZUNMBR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sbdsqr\fP   \fBLAPACK_GLOBAL\fP(\fBsbdsqr\fP,SBDSQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dbdsqr\fP   \fBLAPACK_GLOBAL\fP(\fBdbdsqr\fP,DBDSQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cbdsqr\fP   \fBLAPACK_GLOBAL\fP(\fBcbdsqr\fP,CBDSQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zbdsqr\fP   \fBLAPACK_GLOBAL\fP(\fBzbdsqr\fP,ZBDSQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sbdsdc\fP   \fBLAPACK_GLOBAL\fP(\fBsbdsdc\fP,SBDSDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dbdsdc\fP   \fBLAPACK_GLOBAL\fP(\fBdbdsdc\fP,DBDSDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_sbdsvdx\fP   \fBLAPACK_GLOBAL\fP(\fBsbdsvdx\fP,SBDSVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dbdsvdx\fP   \fBLAPACK_GLOBAL\fP(\fBdbdsvdx\fP,DBDSVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrd\fP   \fBLAPACK_GLOBAL\fP(\fBssytrd\fP,SSYTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrd\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrd\fP,DSYTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorgtr\fP   \fBLAPACK_GLOBAL\fP(\fBsorgtr\fP,SORGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorgtr\fP   \fBLAPACK_GLOBAL\fP(\fBdorgtr\fP,DORGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormtr\fP   \fBLAPACK_GLOBAL\fP(\fBsormtr\fP,SORMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormtr\fP   \fBLAPACK_GLOBAL\fP(\fBdormtr\fP,DORMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrd\fP   \fBLAPACK_GLOBAL\fP(\fBchetrd\fP,CHETRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrd\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrd\fP,ZHETRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cungtr\fP   \fBLAPACK_GLOBAL\fP(\fBcungtr\fP,CUNGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zungtr\fP   \fBLAPACK_GLOBAL\fP(\fBzungtr\fP,ZUNGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmtr\fP   \fBLAPACK_GLOBAL\fP(\fBcunmtr\fP,CUNMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmtr\fP   \fBLAPACK_GLOBAL\fP(\fBzunmtr\fP,ZUNMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssptrd\fP   \fBLAPACK_GLOBAL\fP(\fBssptrd\fP,SSPTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsptrd\fP   \fBLAPACK_GLOBAL\fP(\fBdsptrd\fP,DSPTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sopgtr\fP   \fBLAPACK_GLOBAL\fP(\fBsopgtr\fP,SOPGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dopgtr\fP   \fBLAPACK_GLOBAL\fP(\fBdopgtr\fP,DOPGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sopmtr\fP   \fBLAPACK_GLOBAL\fP(\fBsopmtr\fP,SOPMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dopmtr\fP   \fBLAPACK_GLOBAL\fP(\fBdopmtr\fP,DOPMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_chptrd\fP   \fBLAPACK_GLOBAL\fP(\fBchptrd\fP,CHPTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhptrd\fP   \fBLAPACK_GLOBAL\fP(\fBzhptrd\fP,ZHPTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cupgtr\fP   \fBLAPACK_GLOBAL\fP(\fBcupgtr\fP,CUPGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zupgtr\fP   \fBLAPACK_GLOBAL\fP(\fBzupgtr\fP,ZUPGTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cupmtr\fP   \fBLAPACK_GLOBAL\fP(\fBcupmtr\fP,CUPMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zupmtr\fP   \fBLAPACK_GLOBAL\fP(\fBzupmtr\fP,ZUPMTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbtrd\fP   \fBLAPACK_GLOBAL\fP(\fBssbtrd\fP,SSBTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbtrd\fP   \fBLAPACK_GLOBAL\fP(\fBdsbtrd\fP,DSBTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbtrd\fP   \fBLAPACK_GLOBAL\fP(\fBchbtrd\fP,CHBTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbtrd\fP   \fBLAPACK_GLOBAL\fP(\fBzhbtrd\fP,ZHBTRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssterf\fP   \fBLAPACK_GLOBAL\fP(\fBssterf\fP,SSTERF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsterf\fP   \fBLAPACK_GLOBAL\fP(\fBdsterf\fP,DSTERF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssteqr\fP   \fBLAPACK_GLOBAL\fP(\fBssteqr\fP,SSTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsteqr\fP   \fBLAPACK_GLOBAL\fP(\fBdsteqr\fP,DSTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_csteqr\fP   \fBLAPACK_GLOBAL\fP(\fBcsteqr\fP,CSTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsteqr\fP   \fBLAPACK_GLOBAL\fP(\fBzsteqr\fP,ZSTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstemr\fP   \fBLAPACK_GLOBAL\fP(\fBsstemr\fP,SSTEMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstemr\fP   \fBLAPACK_GLOBAL\fP(\fBdstemr\fP,DSTEMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cstemr\fP   \fBLAPACK_GLOBAL\fP(\fBcstemr\fP,CSTEMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zstemr\fP   \fBLAPACK_GLOBAL\fP(\fBzstemr\fP,ZSTEMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstedc\fP   \fBLAPACK_GLOBAL\fP(\fBsstedc\fP,SSTEDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstedc\fP   \fBLAPACK_GLOBAL\fP(\fBdstedc\fP,DSTEDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_cstedc\fP   \fBLAPACK_GLOBAL\fP(\fBcstedc\fP,CSTEDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_zstedc\fP   \fBLAPACK_GLOBAL\fP(\fBzstedc\fP,ZSTEDC)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstegr\fP   \fBLAPACK_GLOBAL\fP(\fBsstegr\fP,SSTEGR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstegr\fP   \fBLAPACK_GLOBAL\fP(\fBdstegr\fP,DSTEGR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cstegr\fP   \fBLAPACK_GLOBAL\fP(\fBcstegr\fP,CSTEGR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zstegr\fP   \fBLAPACK_GLOBAL\fP(\fBzstegr\fP,ZSTEGR)"
.br
.ti -1c
.RI "#define \fBLAPACK_spteqr\fP   \fBLAPACK_GLOBAL\fP(\fBspteqr\fP,SPTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpteqr\fP   \fBLAPACK_GLOBAL\fP(\fBdpteqr\fP,DPTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpteqr\fP   \fBLAPACK_GLOBAL\fP(\fBcpteqr\fP,CPTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpteqr\fP   \fBLAPACK_GLOBAL\fP(\fBzpteqr\fP,ZPTEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstebz\fP   \fBLAPACK_GLOBAL\fP(\fBsstebz\fP,SSTEBZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstebz\fP   \fBLAPACK_GLOBAL\fP(\fBdstebz\fP,DSTEBZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstein\fP   \fBLAPACK_GLOBAL\fP(\fBsstein\fP,SSTEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstein\fP   \fBLAPACK_GLOBAL\fP(\fBdstein\fP,DSTEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_cstein\fP   \fBLAPACK_GLOBAL\fP(\fBcstein\fP,CSTEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_zstein\fP   \fBLAPACK_GLOBAL\fP(\fBzstein\fP,ZSTEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_sdisna\fP   \fBLAPACK_GLOBAL\fP(\fBsdisna\fP,SDISNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ddisna\fP   \fBLAPACK_GLOBAL\fP(\fBddisna\fP,DDISNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssygst\fP   \fBLAPACK_GLOBAL\fP(\fBssygst\fP,SSYGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsygst\fP   \fBLAPACK_GLOBAL\fP(\fBdsygst\fP,DSYGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_chegst\fP   \fBLAPACK_GLOBAL\fP(\fBchegst\fP,CHEGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhegst\fP   \fBLAPACK_GLOBAL\fP(\fBzhegst\fP,ZHEGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspgst\fP   \fBLAPACK_GLOBAL\fP(\fBsspgst\fP,SSPGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspgst\fP   \fBLAPACK_GLOBAL\fP(\fBdspgst\fP,DSPGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpgst\fP   \fBLAPACK_GLOBAL\fP(\fBchpgst\fP,CHPGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpgst\fP   \fBLAPACK_GLOBAL\fP(\fBzhpgst\fP,ZHPGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbgst\fP   \fBLAPACK_GLOBAL\fP(\fBssbgst\fP,SSBGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbgst\fP   \fBLAPACK_GLOBAL\fP(\fBdsbgst\fP,DSBGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbgst\fP   \fBLAPACK_GLOBAL\fP(\fBchbgst\fP,CHBGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbgst\fP   \fBLAPACK_GLOBAL\fP(\fBzhbgst\fP,ZHBGST)"
.br
.ti -1c
.RI "#define \fBLAPACK_spbstf\fP   \fBLAPACK_GLOBAL\fP(\fBspbstf\fP,SPBSTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dpbstf\fP   \fBLAPACK_GLOBAL\fP(\fBdpbstf\fP,DPBSTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_cpbstf\fP   \fBLAPACK_GLOBAL\fP(\fBcpbstf\fP,CPBSTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_zpbstf\fP   \fBLAPACK_GLOBAL\fP(\fBzpbstf\fP,ZPBSTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgehrd\fP   \fBLAPACK_GLOBAL\fP(\fBsgehrd\fP,SGEHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgehrd\fP   \fBLAPACK_GLOBAL\fP(\fBdgehrd\fP,DGEHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgehrd\fP   \fBLAPACK_GLOBAL\fP(\fBcgehrd\fP,CGEHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgehrd\fP   \fBLAPACK_GLOBAL\fP(\fBzgehrd\fP,ZGEHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorghr\fP   \fBLAPACK_GLOBAL\fP(\fBsorghr\fP,SORGHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorghr\fP   \fBLAPACK_GLOBAL\fP(\fBdorghr\fP,DORGHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sormhr\fP   \fBLAPACK_GLOBAL\fP(\fBsormhr\fP,SORMHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dormhr\fP   \fBLAPACK_GLOBAL\fP(\fBdormhr\fP,DORMHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunghr\fP   \fBLAPACK_GLOBAL\fP(\fBcunghr\fP,CUNGHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunghr\fP   \fBLAPACK_GLOBAL\fP(\fBzunghr\fP,ZUNGHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunmhr\fP   \fBLAPACK_GLOBAL\fP(\fBcunmhr\fP,CUNMHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunmhr\fP   \fBLAPACK_GLOBAL\fP(\fBzunmhr\fP,ZUNMHR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgebal\fP   \fBLAPACK_GLOBAL\fP(\fBsgebal\fP,SGEBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgebal\fP   \fBLAPACK_GLOBAL\fP(\fBdgebal\fP,DGEBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgebal\fP   \fBLAPACK_GLOBAL\fP(\fBcgebal\fP,CGEBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgebal\fP   \fBLAPACK_GLOBAL\fP(\fBzgebal\fP,ZGEBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgebak\fP   \fBLAPACK_GLOBAL\fP(\fBsgebak\fP,SGEBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgebak\fP   \fBLAPACK_GLOBAL\fP(\fBdgebak\fP,DGEBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgebak\fP   \fBLAPACK_GLOBAL\fP(\fBcgebak\fP,CGEBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgebak\fP   \fBLAPACK_GLOBAL\fP(\fBzgebak\fP,ZGEBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_shseqr\fP   \fBLAPACK_GLOBAL\fP(\fBshseqr\fP,SHSEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dhseqr\fP   \fBLAPACK_GLOBAL\fP(\fBdhseqr\fP,DHSEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_chseqr\fP   \fBLAPACK_GLOBAL\fP(\fBchseqr\fP,CHSEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhseqr\fP   \fBLAPACK_GLOBAL\fP(\fBzhseqr\fP,ZHSEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_shsein\fP   \fBLAPACK_GLOBAL\fP(\fBshsein\fP,SHSEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_dhsein\fP   \fBLAPACK_GLOBAL\fP(\fBdhsein\fP,DHSEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_chsein\fP   \fBLAPACK_GLOBAL\fP(\fBchsein\fP,CHSEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhsein\fP   \fBLAPACK_GLOBAL\fP(\fBzhsein\fP,ZHSEIN)"
.br
.ti -1c
.RI "#define \fBLAPACK_strevc\fP   \fBLAPACK_GLOBAL\fP(\fBstrevc\fP,STREVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrevc\fP   \fBLAPACK_GLOBAL\fP(\fBdtrevc\fP,DTREVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrevc\fP   \fBLAPACK_GLOBAL\fP(\fBctrevc\fP,CTREVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrevc\fP   \fBLAPACK_GLOBAL\fP(\fBztrevc\fP,ZTREVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_strsna\fP   \fBLAPACK_GLOBAL\fP(\fBstrsna\fP,STRSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrsna\fP   \fBLAPACK_GLOBAL\fP(\fBdtrsna\fP,DTRSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrsna\fP   \fBLAPACK_GLOBAL\fP(\fBctrsna\fP,CTRSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrsna\fP   \fBLAPACK_GLOBAL\fP(\fBztrsna\fP,ZTRSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_strexc\fP   \fBLAPACK_GLOBAL\fP(\fBstrexc\fP,STREXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrexc\fP   \fBLAPACK_GLOBAL\fP(\fBdtrexc\fP,DTREXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrexc\fP   \fBLAPACK_GLOBAL\fP(\fBctrexc\fP,CTREXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrexc\fP   \fBLAPACK_GLOBAL\fP(\fBztrexc\fP,ZTREXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_strsen\fP   \fBLAPACK_GLOBAL\fP(\fBstrsen\fP,STRSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrsen\fP   \fBLAPACK_GLOBAL\fP(\fBdtrsen\fP,DTRSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrsen\fP   \fBLAPACK_GLOBAL\fP(\fBctrsen\fP,CTRSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrsen\fP   \fBLAPACK_GLOBAL\fP(\fBztrsen\fP,ZTRSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_strsyl\fP   \fBLAPACK_GLOBAL\fP(\fBstrsyl\fP,STRSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrsyl\fP   \fBLAPACK_GLOBAL\fP(\fBdtrsyl\fP,DTRSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrsyl\fP   \fBLAPACK_GLOBAL\fP(\fBctrsyl\fP,CTRSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrsyl\fP   \fBLAPACK_GLOBAL\fP(\fBztrsyl\fP,ZTRSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgghrd\fP   \fBLAPACK_GLOBAL\fP(\fBsgghrd\fP,SGGHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgghrd\fP   \fBLAPACK_GLOBAL\fP(\fBdgghrd\fP,DGGHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgghrd\fP   \fBLAPACK_GLOBAL\fP(\fBcgghrd\fP,CGGHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgghrd\fP   \fBLAPACK_GLOBAL\fP(\fBzgghrd\fP,ZGGHRD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgghd3\fP   \fBLAPACK_GLOBAL\fP(\fBsgghd3\fP,SGGHD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgghd3\fP   \fBLAPACK_GLOBAL\fP(\fBdgghd3\fP,DGGHD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgghd3\fP   \fBLAPACK_GLOBAL\fP(\fBcgghd3\fP,CGGHD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgghd3\fP   \fBLAPACK_GLOBAL\fP(\fBzgghd3\fP,ZGGHD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggbal\fP   \fBLAPACK_GLOBAL\fP(\fBsggbal\fP,SGGBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggbal\fP   \fBLAPACK_GLOBAL\fP(\fBdggbal\fP,DGGBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggbal\fP   \fBLAPACK_GLOBAL\fP(\fBcggbal\fP,CGGBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggbal\fP   \fBLAPACK_GLOBAL\fP(\fBzggbal\fP,ZGGBAL)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggbak\fP   \fBLAPACK_GLOBAL\fP(\fBsggbak\fP,SGGBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggbak\fP   \fBLAPACK_GLOBAL\fP(\fBdggbak\fP,DGGBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggbak\fP   \fBLAPACK_GLOBAL\fP(\fBcggbak\fP,CGGBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggbak\fP   \fBLAPACK_GLOBAL\fP(\fBzggbak\fP,ZGGBAK)"
.br
.ti -1c
.RI "#define \fBLAPACK_shgeqz\fP   \fBLAPACK_GLOBAL\fP(\fBshgeqz\fP,SHGEQZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dhgeqz\fP   \fBLAPACK_GLOBAL\fP(\fBdhgeqz\fP,DHGEQZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_chgeqz\fP   \fBLAPACK_GLOBAL\fP(\fBchgeqz\fP,CHGEQZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhgeqz\fP   \fBLAPACK_GLOBAL\fP(\fBzhgeqz\fP,ZHGEQZ)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgevc\fP   \fBLAPACK_GLOBAL\fP(\fBstgevc\fP,STGEVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgevc\fP   \fBLAPACK_GLOBAL\fP(\fBdtgevc\fP,DTGEVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgevc\fP   \fBLAPACK_GLOBAL\fP(\fBctgevc\fP,CTGEVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgevc\fP   \fBLAPACK_GLOBAL\fP(\fBztgevc\fP,ZTGEVC)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgexc\fP   \fBLAPACK_GLOBAL\fP(\fBstgexc\fP,STGEXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgexc\fP   \fBLAPACK_GLOBAL\fP(\fBdtgexc\fP,DTGEXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgexc\fP   \fBLAPACK_GLOBAL\fP(\fBctgexc\fP,CTGEXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgexc\fP   \fBLAPACK_GLOBAL\fP(\fBztgexc\fP,ZTGEXC)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgsen\fP   \fBLAPACK_GLOBAL\fP(\fBstgsen\fP,STGSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgsen\fP   \fBLAPACK_GLOBAL\fP(\fBdtgsen\fP,DTGSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgsen\fP   \fBLAPACK_GLOBAL\fP(\fBctgsen\fP,CTGSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgsen\fP   \fBLAPACK_GLOBAL\fP(\fBztgsen\fP,ZTGSEN)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgsyl\fP   \fBLAPACK_GLOBAL\fP(\fBstgsyl\fP,STGSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgsyl\fP   \fBLAPACK_GLOBAL\fP(\fBdtgsyl\fP,DTGSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgsyl\fP   \fBLAPACK_GLOBAL\fP(\fBctgsyl\fP,CTGSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgsyl\fP   \fBLAPACK_GLOBAL\fP(\fBztgsyl\fP,ZTGSYL)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgsna\fP   \fBLAPACK_GLOBAL\fP(\fBstgsna\fP,STGSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgsna\fP   \fBLAPACK_GLOBAL\fP(\fBdtgsna\fP,DTGSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgsna\fP   \fBLAPACK_GLOBAL\fP(\fBctgsna\fP,CTGSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgsna\fP   \fBLAPACK_GLOBAL\fP(\fBztgsna\fP,ZTGSNA)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggsvp\fP   \fBLAPACK_GLOBAL\fP(sggsvp,SGGSVP)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggsvp\fP   \fBLAPACK_GLOBAL\fP(dggsvp,DGGSVP)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggsvp\fP   \fBLAPACK_GLOBAL\fP(cggsvp,CGGSVP)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggsvp\fP   \fBLAPACK_GLOBAL\fP(zggsvp,ZGGSVP)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggsvp3\fP   \fBLAPACK_GLOBAL\fP(\fBsggsvp3\fP,SGGSVP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggsvp3\fP   \fBLAPACK_GLOBAL\fP(\fBdggsvp3\fP,DGGSVP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggsvp3\fP   \fBLAPACK_GLOBAL\fP(\fBcggsvp3\fP,CGGSVP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggsvp3\fP   \fBLAPACK_GLOBAL\fP(\fBzggsvp3\fP,ZGGSVP3)"
.br
.ti -1c
.RI "#define \fBLAPACK_stgsja\fP   \fBLAPACK_GLOBAL\fP(\fBstgsja\fP,STGSJA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtgsja\fP   \fBLAPACK_GLOBAL\fP(\fBdtgsja\fP,DTGSJA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctgsja\fP   \fBLAPACK_GLOBAL\fP(\fBctgsja\fP,CTGSJA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztgsja\fP   \fBLAPACK_GLOBAL\fP(\fBztgsja\fP,ZTGSJA)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgels\fP   \fBLAPACK_GLOBAL\fP(\fBsgels\fP,SGELS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgels\fP   \fBLAPACK_GLOBAL\fP(\fBdgels\fP,DGELS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgels\fP   \fBLAPACK_GLOBAL\fP(\fBcgels\fP,CGELS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgels\fP   \fBLAPACK_GLOBAL\fP(\fBzgels\fP,ZGELS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelsy\fP   \fBLAPACK_GLOBAL\fP(\fBsgelsy\fP,SGELSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelsy\fP   \fBLAPACK_GLOBAL\fP(\fBdgelsy\fP,DGELSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelsy\fP   \fBLAPACK_GLOBAL\fP(\fBcgelsy\fP,CGELSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelsy\fP   \fBLAPACK_GLOBAL\fP(\fBzgelsy\fP,ZGELSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelss\fP   \fBLAPACK_GLOBAL\fP(\fBsgelss\fP,SGELSS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelss\fP   \fBLAPACK_GLOBAL\fP(\fBdgelss\fP,DGELSS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelss\fP   \fBLAPACK_GLOBAL\fP(\fBcgelss\fP,CGELSS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelss\fP   \fBLAPACK_GLOBAL\fP(\fBzgelss\fP,ZGELSS)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelsd\fP   \fBLAPACK_GLOBAL\fP(\fBsgelsd\fP,SGELSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelsd\fP   \fBLAPACK_GLOBAL\fP(\fBdgelsd\fP,DGELSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelsd\fP   \fBLAPACK_GLOBAL\fP(\fBcgelsd\fP,CGELSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelsd\fP   \fBLAPACK_GLOBAL\fP(\fBzgelsd\fP,ZGELSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgglse\fP   \fBLAPACK_GLOBAL\fP(\fBsgglse\fP,SGGLSE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgglse\fP   \fBLAPACK_GLOBAL\fP(\fBdgglse\fP,DGGLSE)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgglse\fP   \fBLAPACK_GLOBAL\fP(\fBcgglse\fP,CGGLSE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgglse\fP   \fBLAPACK_GLOBAL\fP(\fBzgglse\fP,ZGGLSE)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggglm\fP   \fBLAPACK_GLOBAL\fP(\fBsggglm\fP,SGGGLM)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggglm\fP   \fBLAPACK_GLOBAL\fP(\fBdggglm\fP,DGGGLM)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggglm\fP   \fBLAPACK_GLOBAL\fP(\fBcggglm\fP,CGGGLM)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggglm\fP   \fBLAPACK_GLOBAL\fP(\fBzggglm\fP,ZGGGLM)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyev\fP   \fBLAPACK_GLOBAL\fP(\fBssyev\fP,SSYEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyev\fP   \fBLAPACK_GLOBAL\fP(\fBdsyev\fP,DSYEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheev\fP   \fBLAPACK_GLOBAL\fP(\fBcheev\fP,CHEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheev\fP   \fBLAPACK_GLOBAL\fP(\fBzheev\fP,ZHEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssyev_2stage\fP,SSYEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsyev_2stage\fP,DSYEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcheev_2stage\fP,CHEEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzheev_2stage\fP,ZHEEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevd\fP   \fBLAPACK_GLOBAL\fP(\fBssyevd\fP,SSYEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevd\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevd\fP,DSYEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevd\fP   \fBLAPACK_GLOBAL\fP(\fBcheevd\fP,CHEEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevd\fP   \fBLAPACK_GLOBAL\fP(\fBzheevd\fP,ZHEEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssyevd_2stage\fP,SSYEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevd_2stage\fP,DSYEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcheevd_2stage\fP,CHEEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzheevd_2stage\fP,ZHEEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevx\fP   \fBLAPACK_GLOBAL\fP(\fBssyevx\fP,SSYEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevx\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevx\fP,DSYEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevx\fP   \fBLAPACK_GLOBAL\fP(\fBcheevx\fP,CHEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevx\fP   \fBLAPACK_GLOBAL\fP(\fBzheevx\fP,ZHEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssyevx_2stage\fP,SSYEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevx_2stage\fP,DSYEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcheevx_2stage\fP,CHEEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzheevx_2stage\fP,ZHEEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevr\fP   \fBLAPACK_GLOBAL\fP(\fBssyevr\fP,SSYEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevr\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevr\fP,DSYEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevr\fP   \fBLAPACK_GLOBAL\fP(\fBcheevr\fP,CHEEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevr\fP   \fBLAPACK_GLOBAL\fP(\fBzheevr\fP,ZHEEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyevr_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssyevr_2stage\fP,SSYEVR_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyevr_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsyevr_2stage\fP,DSYEVR_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheevr_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcheevr_2stage\fP,CHEEVR_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheevr_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzheevr_2stage\fP,ZHEEVR_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspev\fP   \fBLAPACK_GLOBAL\fP(\fBsspev\fP,SSPEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspev\fP   \fBLAPACK_GLOBAL\fP(\fBdspev\fP,DSPEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpev\fP   \fBLAPACK_GLOBAL\fP(\fBchpev\fP,CHPEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpev\fP   \fBLAPACK_GLOBAL\fP(\fBzhpev\fP,ZHPEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspevd\fP   \fBLAPACK_GLOBAL\fP(\fBsspevd\fP,SSPEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspevd\fP   \fBLAPACK_GLOBAL\fP(\fBdspevd\fP,DSPEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpevd\fP   \fBLAPACK_GLOBAL\fP(\fBchpevd\fP,CHPEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpevd\fP   \fBLAPACK_GLOBAL\fP(\fBzhpevd\fP,ZHPEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspevx\fP   \fBLAPACK_GLOBAL\fP(\fBsspevx\fP,SSPEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspevx\fP   \fBLAPACK_GLOBAL\fP(\fBdspevx\fP,DSPEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpevx\fP   \fBLAPACK_GLOBAL\fP(\fBchpevx\fP,CHPEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpevx\fP   \fBLAPACK_GLOBAL\fP(\fBzhpevx\fP,ZHPEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbev\fP   \fBLAPACK_GLOBAL\fP(\fBssbev\fP,SSBEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbev\fP   \fBLAPACK_GLOBAL\fP(\fBdsbev\fP,DSBEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbev\fP   \fBLAPACK_GLOBAL\fP(\fBchbev\fP,CHBEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbev\fP   \fBLAPACK_GLOBAL\fP(\fBzhbev\fP,ZHBEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssbev_2stage\fP,SSBEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsbev_2stage\fP,DSBEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchbev_2stage\fP,CHBEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbev_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhbev_2stage\fP,ZHBEV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbevd\fP   \fBLAPACK_GLOBAL\fP(\fBssbevd\fP,SSBEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbevd\fP   \fBLAPACK_GLOBAL\fP(\fBdsbevd\fP,DSBEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbevd\fP   \fBLAPACK_GLOBAL\fP(\fBchbevd\fP,CHBEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbevd\fP   \fBLAPACK_GLOBAL\fP(\fBzhbevd\fP,ZHBEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssbevd_2stage\fP,SSBEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsbevd_2stage\fP,DSBEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchbevd_2stage\fP,CHBEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbevd_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhbevd_2stage\fP,ZHBEVD_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbevx\fP   \fBLAPACK_GLOBAL\fP(\fBssbevx\fP,SSBEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbevx\fP   \fBLAPACK_GLOBAL\fP(\fBdsbevx\fP,DSBEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbevx\fP   \fBLAPACK_GLOBAL\fP(\fBchbevx\fP,CHBEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbevx\fP   \fBLAPACK_GLOBAL\fP(\fBzhbevx\fP,ZHBEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssbevx_2stage\fP,SSBEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsbevx_2stage\fP,DSBEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchbevx_2stage\fP,CHBEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbevx_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhbevx_2stage\fP,ZHBEVX_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstev\fP   \fBLAPACK_GLOBAL\fP(\fBsstev\fP,SSTEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstev\fP   \fBLAPACK_GLOBAL\fP(\fBdstev\fP,DSTEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstevd\fP   \fBLAPACK_GLOBAL\fP(\fBsstevd\fP,SSTEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstevd\fP   \fBLAPACK_GLOBAL\fP(\fBdstevd\fP,DSTEVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstevx\fP   \fBLAPACK_GLOBAL\fP(\fBsstevx\fP,SSTEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstevx\fP   \fBLAPACK_GLOBAL\fP(\fBdstevx\fP,DSTEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sstevr\fP   \fBLAPACK_GLOBAL\fP(\fBsstevr\fP,SSTEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dstevr\fP   \fBLAPACK_GLOBAL\fP(\fBdstevr\fP,DSTEVR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgees\fP   \fBLAPACK_GLOBAL\fP(\fBsgees\fP,SGEES)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgees\fP   \fBLAPACK_GLOBAL\fP(\fBdgees\fP,DGEES)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgees\fP   \fBLAPACK_GLOBAL\fP(\fBcgees\fP,CGEES)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgees\fP   \fBLAPACK_GLOBAL\fP(\fBzgees\fP,ZGEES)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeesx\fP   \fBLAPACK_GLOBAL\fP(\fBsgeesx\fP,SGEESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeesx\fP   \fBLAPACK_GLOBAL\fP(\fBdgeesx\fP,DGEESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeesx\fP   \fBLAPACK_GLOBAL\fP(\fBcgeesx\fP,CGEESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeesx\fP   \fBLAPACK_GLOBAL\fP(\fBzgeesx\fP,ZGEESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeev\fP   \fBLAPACK_GLOBAL\fP(\fBsgeev\fP,SGEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeev\fP   \fBLAPACK_GLOBAL\fP(\fBdgeev\fP,DGEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeev\fP   \fBLAPACK_GLOBAL\fP(\fBcgeev\fP,CGEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeev\fP   \fBLAPACK_GLOBAL\fP(\fBzgeev\fP,ZGEEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeevx\fP   \fBLAPACK_GLOBAL\fP(\fBsgeevx\fP,SGEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeevx\fP   \fBLAPACK_GLOBAL\fP(\fBdgeevx\fP,DGEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeevx\fP   \fBLAPACK_GLOBAL\fP(\fBcgeevx\fP,CGEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeevx\fP   \fBLAPACK_GLOBAL\fP(\fBzgeevx\fP,ZGEEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesvd\fP   \fBLAPACK_GLOBAL\fP(\fBsgesvd\fP,SGESVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesvd\fP   \fBLAPACK_GLOBAL\fP(\fBdgesvd\fP,DGESVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesvd\fP   \fBLAPACK_GLOBAL\fP(\fBcgesvd\fP,CGESVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesvd\fP   \fBLAPACK_GLOBAL\fP(\fBzgesvd\fP,ZGESVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesvdx\fP   \fBLAPACK_GLOBAL\fP(\fBsgesvdx\fP,SGESVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesvdx\fP   \fBLAPACK_GLOBAL\fP(\fBdgesvdx\fP,DGESVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesvdx\fP   \fBLAPACK_GLOBAL\fP(\fBcgesvdx\fP,CGESVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesvdx\fP   \fBLAPACK_GLOBAL\fP(\fBzgesvdx\fP,ZGESVDX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesdd\fP   \fBLAPACK_GLOBAL\fP(\fBsgesdd\fP,SGESDD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesdd\fP   \fBLAPACK_GLOBAL\fP(\fBdgesdd\fP,DGESDD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesdd\fP   \fBLAPACK_GLOBAL\fP(\fBcgesdd\fP,CGESDD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesdd\fP   \fBLAPACK_GLOBAL\fP(\fBzgesdd\fP,ZGESDD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgejsv\fP   \fBLAPACK_GLOBAL\fP(\fBsgejsv\fP,SGEJSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgejsv\fP   \fBLAPACK_GLOBAL\fP(\fBdgejsv\fP,DGEJSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgejsv\fP   \fBLAPACK_GLOBAL\fP(\fBcgejsv\fP,CGEJSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgejsv\fP   \fBLAPACK_GLOBAL\fP(\fBzgejsv\fP,ZGEJSV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgesvj\fP   \fBLAPACK_GLOBAL\fP(\fBsgesvj\fP,SGESVJ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgesvj\fP   \fBLAPACK_GLOBAL\fP(\fBdgesvj\fP,DGESVJ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgesvj\fP   \fBLAPACK_GLOBAL\fP(\fBcgesvj\fP,CGESVJ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgesvj\fP   \fBLAPACK_GLOBAL\fP(\fBzgesvj\fP,ZGESVJ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggsvd\fP   \fBLAPACK_GLOBAL\fP(sggsvd,SGGSVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggsvd\fP   \fBLAPACK_GLOBAL\fP(dggsvd,DGGSVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggsvd\fP   \fBLAPACK_GLOBAL\fP(cggsvd,CGGSVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggsvd\fP   \fBLAPACK_GLOBAL\fP(zggsvd,ZGGSVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssygv\fP   \fBLAPACK_GLOBAL\fP(\fBssygv\fP,SSYGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsygv\fP   \fBLAPACK_GLOBAL\fP(\fBdsygv\fP,DSYGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chegv\fP   \fBLAPACK_GLOBAL\fP(\fBchegv\fP,CHEGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhegv\fP   \fBLAPACK_GLOBAL\fP(\fBzhegv\fP,ZHEGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssygv_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssygv_2stage\fP,SSYGV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsygv_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsygv_2stage\fP,DSYGV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chegv_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchegv_2stage\fP,CHEGV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhegv_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhegv_2stage\fP,ZHEGV_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssygvd\fP   \fBLAPACK_GLOBAL\fP(\fBssygvd\fP,SSYGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsygvd\fP   \fBLAPACK_GLOBAL\fP(\fBdsygvd\fP,DSYGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chegvd\fP   \fBLAPACK_GLOBAL\fP(\fBchegvd\fP,CHEGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhegvd\fP   \fBLAPACK_GLOBAL\fP(\fBzhegvd\fP,ZHEGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssygvx\fP   \fBLAPACK_GLOBAL\fP(\fBssygvx\fP,SSYGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsygvx\fP   \fBLAPACK_GLOBAL\fP(\fBdsygvx\fP,DSYGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chegvx\fP   \fBLAPACK_GLOBAL\fP(\fBchegvx\fP,CHEGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhegvx\fP   \fBLAPACK_GLOBAL\fP(\fBzhegvx\fP,ZHEGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspgv\fP   \fBLAPACK_GLOBAL\fP(\fBsspgv\fP,SSPGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspgv\fP   \fBLAPACK_GLOBAL\fP(\fBdspgv\fP,DSPGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpgv\fP   \fBLAPACK_GLOBAL\fP(\fBchpgv\fP,CHPGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpgv\fP   \fBLAPACK_GLOBAL\fP(\fBzhpgv\fP,ZHPGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspgvd\fP   \fBLAPACK_GLOBAL\fP(\fBsspgvd\fP,SSPGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspgvd\fP   \fBLAPACK_GLOBAL\fP(\fBdspgvd\fP,DSPGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpgvd\fP   \fBLAPACK_GLOBAL\fP(\fBchpgvd\fP,CHPGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpgvd\fP   \fBLAPACK_GLOBAL\fP(\fBzhpgvd\fP,ZHPGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sspgvx\fP   \fBLAPACK_GLOBAL\fP(\fBsspgvx\fP,SSPGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dspgvx\fP   \fBLAPACK_GLOBAL\fP(\fBdspgvx\fP,DSPGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chpgvx\fP   \fBLAPACK_GLOBAL\fP(\fBchpgvx\fP,CHPGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhpgvx\fP   \fBLAPACK_GLOBAL\fP(\fBzhpgvx\fP,ZHPGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbgv\fP   \fBLAPACK_GLOBAL\fP(\fBssbgv\fP,SSBGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbgv\fP   \fBLAPACK_GLOBAL\fP(\fBdsbgv\fP,DSBGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbgv\fP   \fBLAPACK_GLOBAL\fP(\fBchbgv\fP,CHBGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbgv\fP   \fBLAPACK_GLOBAL\fP(\fBzhbgv\fP,ZHBGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbgvd\fP   \fBLAPACK_GLOBAL\fP(\fBssbgvd\fP,SSBGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbgvd\fP   \fBLAPACK_GLOBAL\fP(\fBdsbgvd\fP,DSBGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbgvd\fP   \fBLAPACK_GLOBAL\fP(\fBchbgvd\fP,CHBGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbgvd\fP   \fBLAPACK_GLOBAL\fP(\fBzhbgvd\fP,ZHBGVD)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssbgvx\fP   \fBLAPACK_GLOBAL\fP(\fBssbgvx\fP,SSBGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsbgvx\fP   \fBLAPACK_GLOBAL\fP(\fBdsbgvx\fP,DSBGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_chbgvx\fP   \fBLAPACK_GLOBAL\fP(\fBchbgvx\fP,CHBGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhbgvx\fP   \fBLAPACK_GLOBAL\fP(\fBzhbgvx\fP,ZHBGVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgges\fP   \fBLAPACK_GLOBAL\fP(\fBsgges\fP,SGGES)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgges\fP   \fBLAPACK_GLOBAL\fP(\fBdgges\fP,DGGES)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgges\fP   \fBLAPACK_GLOBAL\fP(\fBcgges\fP,CGGES)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgges\fP   \fBLAPACK_GLOBAL\fP(\fBzgges\fP,ZGGES)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgges3\fP   \fBLAPACK_GLOBAL\fP(\fBsgges3\fP,SGGES3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgges3\fP   \fBLAPACK_GLOBAL\fP(\fBdgges3\fP,DGGES3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgges3\fP   \fBLAPACK_GLOBAL\fP(\fBcgges3\fP,CGGES3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgges3\fP   \fBLAPACK_GLOBAL\fP(\fBzgges3\fP,ZGGES3)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggesx\fP   \fBLAPACK_GLOBAL\fP(\fBsggesx\fP,SGGESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggesx\fP   \fBLAPACK_GLOBAL\fP(\fBdggesx\fP,DGGESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggesx\fP   \fBLAPACK_GLOBAL\fP(\fBcggesx\fP,CGGESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggesx\fP   \fBLAPACK_GLOBAL\fP(\fBzggesx\fP,ZGGESX)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggev\fP   \fBLAPACK_GLOBAL\fP(\fBsggev\fP,SGGEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggev\fP   \fBLAPACK_GLOBAL\fP(\fBdggev\fP,DGGEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggev\fP   \fBLAPACK_GLOBAL\fP(\fBcggev\fP,CGGEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggev\fP   \fBLAPACK_GLOBAL\fP(\fBzggev\fP,ZGGEV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggev3\fP   \fBLAPACK_GLOBAL\fP(\fBsggev3\fP,SGGEV3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggev3\fP   \fBLAPACK_GLOBAL\fP(\fBdggev3\fP,DGGEV3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggev3\fP   \fBLAPACK_GLOBAL\fP(\fBcggev3\fP,CGGEV3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggev3\fP   \fBLAPACK_GLOBAL\fP(\fBzggev3\fP,ZGGEV3)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggevx\fP   \fBLAPACK_GLOBAL\fP(\fBsggevx\fP,SGGEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggevx\fP   \fBLAPACK_GLOBAL\fP(\fBdggevx\fP,DGGEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggevx\fP   \fBLAPACK_GLOBAL\fP(\fBcggevx\fP,CGGEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggevx\fP   \fBLAPACK_GLOBAL\fP(\fBzggevx\fP,ZGGEVX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsfrk\fP   \fBLAPACK_GLOBAL\fP(\fBdsfrk\fP,DSFRK)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssfrk\fP   \fBLAPACK_GLOBAL\fP(\fBssfrk\fP,SSFRK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhfrk\fP   \fBLAPACK_GLOBAL\fP(\fBzhfrk\fP,ZHFRK)"
.br
.ti -1c
.RI "#define \fBLAPACK_chfrk\fP   \fBLAPACK_GLOBAL\fP(\fBchfrk\fP,CHFRK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtfsm\fP   \fBLAPACK_GLOBAL\fP(\fBdtfsm\fP,DTFSM)"
.br
.ti -1c
.RI "#define \fBLAPACK_stfsm\fP   \fBLAPACK_GLOBAL\fP(\fBstfsm\fP,STFSM)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztfsm\fP   \fBLAPACK_GLOBAL\fP(\fBztfsm\fP,ZTFSM)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctfsm\fP   \fBLAPACK_GLOBAL\fP(\fBctfsm\fP,CTFSM)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtfttp\fP   \fBLAPACK_GLOBAL\fP(\fBdtfttp\fP,DTFTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_stfttp\fP   \fBLAPACK_GLOBAL\fP(\fBstfttp\fP,STFTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztfttp\fP   \fBLAPACK_GLOBAL\fP(\fBztfttp\fP,ZTFTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctfttp\fP   \fBLAPACK_GLOBAL\fP(\fBctfttp\fP,CTFTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtfttr\fP   \fBLAPACK_GLOBAL\fP(\fBdtfttr\fP,DTFTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_stfttr\fP   \fBLAPACK_GLOBAL\fP(\fBstfttr\fP,STFTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztfttr\fP   \fBLAPACK_GLOBAL\fP(\fBztfttr\fP,ZTFTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctfttr\fP   \fBLAPACK_GLOBAL\fP(\fBctfttr\fP,CTFTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpttf\fP   \fBLAPACK_GLOBAL\fP(\fBdtpttf\fP,DTPTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpttf\fP   \fBLAPACK_GLOBAL\fP(\fBstpttf\fP,STPTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpttf\fP   \fBLAPACK_GLOBAL\fP(\fBztpttf\fP,ZTPTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpttf\fP   \fBLAPACK_GLOBAL\fP(\fBctpttf\fP,CTPTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpttr\fP   \fBLAPACK_GLOBAL\fP(\fBdtpttr\fP,DTPTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpttr\fP   \fBLAPACK_GLOBAL\fP(\fBstpttr\fP,STPTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpttr\fP   \fBLAPACK_GLOBAL\fP(\fBztpttr\fP,ZTPTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpttr\fP   \fBLAPACK_GLOBAL\fP(\fBctpttr\fP,CTPTTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrttf\fP   \fBLAPACK_GLOBAL\fP(\fBdtrttf\fP,DTRTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_strttf\fP   \fBLAPACK_GLOBAL\fP(\fBstrttf\fP,STRTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrttf\fP   \fBLAPACK_GLOBAL\fP(\fBztrttf\fP,ZTRTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrttf\fP   \fBLAPACK_GLOBAL\fP(\fBctrttf\fP,CTRTTF)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtrttp\fP   \fBLAPACK_GLOBAL\fP(\fBdtrttp\fP,DTRTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_strttp\fP   \fBLAPACK_GLOBAL\fP(\fBstrttp\fP,STRTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztrttp\fP   \fBLAPACK_GLOBAL\fP(\fBztrttp\fP,ZTRTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctrttp\fP   \fBLAPACK_GLOBAL\fP(\fBctrttp\fP,CTRTTP)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqrfp\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqrfp\fP,SGEQRFP)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqrfp\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqrfp\fP,DGEQRFP)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqrfp\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqrfp\fP,CGEQRFP)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqrfp\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqrfp\fP,ZGEQRFP)"
.br
.ti -1c
.RI "#define \fBLAPACK_clacgv\fP   \fBLAPACK_GLOBAL\fP(\fBclacgv\fP,CLACGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlacgv\fP   \fBLAPACK_GLOBAL\fP(\fBzlacgv\fP,ZLACGV)"
.br
.ti -1c
.RI "#define \fBLAPACK_slarnv\fP   \fBLAPACK_GLOBAL\fP(\fBslarnv\fP,SLARNV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlarnv\fP   \fBLAPACK_GLOBAL\fP(\fBdlarnv\fP,DLARNV)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarnv\fP   \fBLAPACK_GLOBAL\fP(\fBclarnv\fP,CLARNV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarnv\fP   \fBLAPACK_GLOBAL\fP(\fBzlarnv\fP,ZLARNV)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqr2\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqr2\fP,SGEQR2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqr2\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqr2\fP,DGEQR2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqr2\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqr2\fP,CGEQR2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqr2\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqr2\fP,ZGEQR2)"
.br
.ti -1c
.RI "#define \fBLAPACK_slacn2\fP   \fBLAPACK_GLOBAL\fP(\fBslacn2\fP,SLACN2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlacn2\fP   \fBLAPACK_GLOBAL\fP(\fBdlacn2\fP,DLACN2)"
.br
.ti -1c
.RI "#define \fBLAPACK_clacn2\fP   \fBLAPACK_GLOBAL\fP(\fBclacn2\fP,CLACN2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlacn2\fP   \fBLAPACK_GLOBAL\fP(\fBzlacn2\fP,ZLACN2)"
.br
.ti -1c
.RI "#define \fBLAPACK_slacpy\fP   \fBLAPACK_GLOBAL\fP(\fBslacpy\fP,SLACPY)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlacpy\fP   \fBLAPACK_GLOBAL\fP(\fBdlacpy\fP,DLACPY)"
.br
.ti -1c
.RI "#define \fBLAPACK_clacpy\fP   \fBLAPACK_GLOBAL\fP(\fBclacpy\fP,CLACPY)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlacpy\fP   \fBLAPACK_GLOBAL\fP(\fBzlacpy\fP,ZLACPY)"
.br
.ti -1c
.RI "#define \fBLAPACK_clacp2\fP   \fBLAPACK_GLOBAL\fP(\fBclacp2\fP,CLACP2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlacp2\fP   \fBLAPACK_GLOBAL\fP(\fBzlacp2\fP,ZLACP2)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetf2\fP   \fBLAPACK_GLOBAL\fP(\fBsgetf2\fP,SGETF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetf2\fP   \fBLAPACK_GLOBAL\fP(\fBdgetf2\fP,DGETF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetf2\fP   \fBLAPACK_GLOBAL\fP(\fBcgetf2\fP,CGETF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetf2\fP   \fBLAPACK_GLOBAL\fP(\fBzgetf2\fP,ZGETF2)"
.br
.ti -1c
.RI "#define \fBLAPACK_slaswp\fP   \fBLAPACK_GLOBAL\fP(\fBslaswp\fP,SLASWP)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlaswp\fP   \fBLAPACK_GLOBAL\fP(\fBdlaswp\fP,DLASWP)"
.br
.ti -1c
.RI "#define \fBLAPACK_claswp\fP   \fBLAPACK_GLOBAL\fP(\fBclaswp\fP,CLASWP)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlaswp\fP   \fBLAPACK_GLOBAL\fP(\fBzlaswp\fP,ZLASWP)"
.br
.ti -1c
.RI "#define \fBLAPACK_slange\fP   \fBLAPACK_GLOBAL\fP(\fBslange\fP,SLANGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlange\fP   \fBLAPACK_GLOBAL\fP(\fBdlange\fP,DLANGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_clange\fP   \fBLAPACK_GLOBAL\fP(\fBclange\fP,CLANGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlange\fP   \fBLAPACK_GLOBAL\fP(\fBzlange\fP,ZLANGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_clanhe\fP   \fBLAPACK_GLOBAL\fP(\fBclanhe\fP,CLANHE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlanhe\fP   \fBLAPACK_GLOBAL\fP(\fBzlanhe\fP,ZLANHE)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarcm\fP   \fBLAPACK_GLOBAL\fP(\fBclarcm\fP,CLARCM)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarcm\fP   \fBLAPACK_GLOBAL\fP(\fBzlarcm\fP,ZLARCM)"
.br
.ti -1c
.RI "#define \fBLAPACK_clacrm\fP   \fBLAPACK_GLOBAL\fP(\fBclacrm\fP,CLACRM)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlacrm\fP   \fBLAPACK_GLOBAL\fP(\fBzlacrm\fP,ZLACRM)"
.br
.ti -1c
.RI "#define \fBLAPACK_slansy\fP   \fBLAPACK_GLOBAL\fP(\fBslansy\fP,SLANSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlansy\fP   \fBLAPACK_GLOBAL\fP(\fBdlansy\fP,DLANSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_clansy\fP   \fBLAPACK_GLOBAL\fP(\fBclansy\fP,CLANSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlansy\fP   \fBLAPACK_GLOBAL\fP(\fBzlansy\fP,ZLANSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_slantr\fP   \fBLAPACK_GLOBAL\fP(\fBslantr\fP,SLANTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlantr\fP   \fBLAPACK_GLOBAL\fP(\fBdlantr\fP,DLANTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_clantr\fP   \fBLAPACK_GLOBAL\fP(\fBclantr\fP,CLANTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlantr\fP   \fBLAPACK_GLOBAL\fP(\fBzlantr\fP,ZLANTR)"
.br
.ti -1c
.RI "#define \fBLAPACK_slamch\fP   \fBLAPACK_GLOBAL\fP(slamch,SLAMCH)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlamch\fP   \fBLAPACK_GLOBAL\fP(dlamch,DLAMCH)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelq2\fP   \fBLAPACK_GLOBAL\fP(\fBsgelq2\fP,SGELQ2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelq2\fP   \fBLAPACK_GLOBAL\fP(\fBdgelq2\fP,DGELQ2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelq2\fP   \fBLAPACK_GLOBAL\fP(\fBcgelq2\fP,CGELQ2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelq2\fP   \fBLAPACK_GLOBAL\fP(\fBzgelq2\fP,ZGELQ2)"
.br
.ti -1c
.RI "#define \fBLAPACK_slarfb\fP   \fBLAPACK_GLOBAL\fP(\fBslarfb\fP,SLARFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlarfb\fP   \fBLAPACK_GLOBAL\fP(\fBdlarfb\fP,DLARFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarfb\fP   \fBLAPACK_GLOBAL\fP(\fBclarfb\fP,CLARFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarfb\fP   \fBLAPACK_GLOBAL\fP(\fBzlarfb\fP,ZLARFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_slarfg\fP   \fBLAPACK_GLOBAL\fP(\fBslarfg\fP,SLARFG)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlarfg\fP   \fBLAPACK_GLOBAL\fP(\fBdlarfg\fP,DLARFG)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarfg\fP   \fBLAPACK_GLOBAL\fP(\fBclarfg\fP,CLARFG)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarfg\fP   \fBLAPACK_GLOBAL\fP(\fBzlarfg\fP,ZLARFG)"
.br
.ti -1c
.RI "#define \fBLAPACK_slassq\fP   \fBLAPACK_GLOBAL\fP(\fBslassq\fP,SLASSQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlassq\fP   \fBLAPACK_GLOBAL\fP(\fBdlassq\fP,DLASSQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_classq\fP   \fBLAPACK_GLOBAL\fP(\fBclassq\fP,CLASSQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlassq\fP   \fBLAPACK_GLOBAL\fP(\fBzlassq\fP,ZLASSQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_slarft\fP   \fBLAPACK_GLOBAL\fP(\fBslarft\fP,SLARFT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlarft\fP   \fBLAPACK_GLOBAL\fP(\fBdlarft\fP,DLARFT)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarft\fP   \fBLAPACK_GLOBAL\fP(\fBclarft\fP,CLARFT)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarft\fP   \fBLAPACK_GLOBAL\fP(\fBzlarft\fP,ZLARFT)"
.br
.ti -1c
.RI "#define \fBLAPACK_slarfx\fP   \fBLAPACK_GLOBAL\fP(\fBslarfx\fP,SLARFX)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlarfx\fP   \fBLAPACK_GLOBAL\fP(\fBdlarfx\fP,DLARFX)"
.br
.ti -1c
.RI "#define \fBLAPACK_clarfx\fP   \fBLAPACK_GLOBAL\fP(\fBclarfx\fP,CLARFX)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlarfx\fP   \fBLAPACK_GLOBAL\fP(\fBzlarfx\fP,ZLARFX)"
.br
.ti -1c
.RI "#define \fBLAPACK_slatms\fP   \fBLAPACK_GLOBAL\fP(slatms,SLATMS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlatms\fP   \fBLAPACK_GLOBAL\fP(dlatms,DLATMS)"
.br
.ti -1c
.RI "#define \fBLAPACK_clatms\fP   \fBLAPACK_GLOBAL\fP(clatms,CLATMS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlatms\fP   \fBLAPACK_GLOBAL\fP(zlatms,ZLATMS)"
.br
.ti -1c
.RI "#define \fBLAPACK_slag2d\fP   \fBLAPACK_GLOBAL\fP(\fBslag2d\fP,SLAG2D)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlag2s\fP   \fBLAPACK_GLOBAL\fP(\fBdlag2s\fP,DLAG2S)"
.br
.ti -1c
.RI "#define \fBLAPACK_clag2z\fP   \fBLAPACK_GLOBAL\fP(\fBclag2z\fP,CLAG2Z)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlag2c\fP   \fBLAPACK_GLOBAL\fP(\fBzlag2c\fP,ZLAG2C)"
.br
.ti -1c
.RI "#define \fBLAPACK_slauum\fP   \fBLAPACK_GLOBAL\fP(\fBslauum\fP,SLAUUM)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlauum\fP   \fBLAPACK_GLOBAL\fP(\fBdlauum\fP,DLAUUM)"
.br
.ti -1c
.RI "#define \fBLAPACK_clauum\fP   \fBLAPACK_GLOBAL\fP(\fBclauum\fP,CLAUUM)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlauum\fP   \fBLAPACK_GLOBAL\fP(\fBzlauum\fP,ZLAUUM)"
.br
.ti -1c
.RI "#define \fBLAPACK_slagge\fP   \fBLAPACK_GLOBAL\fP(slagge,SLAGGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlagge\fP   \fBLAPACK_GLOBAL\fP(dlagge,DLAGGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_clagge\fP   \fBLAPACK_GLOBAL\fP(clagge,CLAGGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlagge\fP   \fBLAPACK_GLOBAL\fP(zlagge,ZLAGGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_slascl\fP   \fBLAPACK_GLOBAL\fP(\fBslascl\fP,SLASCL)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlascl\fP   \fBLAPACK_GLOBAL\fP(\fBdlascl\fP,DLASCL)"
.br
.ti -1c
.RI "#define \fBLAPACK_clascl\fP   \fBLAPACK_GLOBAL\fP(\fBclascl\fP,CLASCL)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlascl\fP   \fBLAPACK_GLOBAL\fP(\fBzlascl\fP,ZLASCL)"
.br
.ti -1c
.RI "#define \fBLAPACK_slaset\fP   \fBLAPACK_GLOBAL\fP(\fBslaset\fP,SLASET)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlaset\fP   \fBLAPACK_GLOBAL\fP(\fBdlaset\fP,DLASET)"
.br
.ti -1c
.RI "#define \fBLAPACK_claset\fP   \fBLAPACK_GLOBAL\fP(\fBclaset\fP,CLASET)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlaset\fP   \fBLAPACK_GLOBAL\fP(\fBzlaset\fP,ZLASET)"
.br
.ti -1c
.RI "#define \fBLAPACK_slasrt\fP   \fBLAPACK_GLOBAL\fP(\fBslasrt\fP,SLASRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlasrt\fP   \fBLAPACK_GLOBAL\fP(\fBdlasrt\fP,DLASRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_slagsy\fP   \fBLAPACK_GLOBAL\fP(slagsy,SLAGSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlagsy\fP   \fBLAPACK_GLOBAL\fP(dlagsy,DLAGSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_clagsy\fP   \fBLAPACK_GLOBAL\fP(clagsy,CLAGSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlagsy\fP   \fBLAPACK_GLOBAL\fP(zlagsy,ZLAGSY)"
.br
.ti -1c
.RI "#define \fBLAPACK_claghe\fP   \fBLAPACK_GLOBAL\fP(claghe,CLAGHE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlaghe\fP   \fBLAPACK_GLOBAL\fP(zlaghe,ZLAGHE)"
.br
.ti -1c
.RI "#define \fBLAPACK_slapmr\fP   \fBLAPACK_GLOBAL\fP(\fBslapmr\fP,SLAPMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlapmr\fP   \fBLAPACK_GLOBAL\fP(\fBdlapmr\fP,DLAPMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_clapmr\fP   \fBLAPACK_GLOBAL\fP(\fBclapmr\fP,CLAPMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlapmr\fP   \fBLAPACK_GLOBAL\fP(\fBzlapmr\fP,ZLAPMR)"
.br
.ti -1c
.RI "#define \fBLAPACK_slapmt\fP   \fBLAPACK_GLOBAL\fP(\fBslapmt\fP,SLAPMT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlapmt\fP   \fBLAPACK_GLOBAL\fP(\fBdlapmt\fP,DLAPMT)"
.br
.ti -1c
.RI "#define \fBLAPACK_clapmt\fP   \fBLAPACK_GLOBAL\fP(\fBclapmt\fP,CLAPMT)"
.br
.ti -1c
.RI "#define \fBLAPACK_zlapmt\fP   \fBLAPACK_GLOBAL\fP(\fBzlapmt\fP,ZLAPMT)"
.br
.ti -1c
.RI "#define \fBLAPACK_slapy2\fP   \fBLAPACK_GLOBAL\fP(\fBslapy2\fP,SLAPY2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlapy2\fP   \fBLAPACK_GLOBAL\fP(\fBdlapy2\fP,DLAPY2)"
.br
.ti -1c
.RI "#define \fBLAPACK_slapy3\fP   \fBLAPACK_GLOBAL\fP(\fBslapy3\fP,SLAPY3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlapy3\fP   \fBLAPACK_GLOBAL\fP(\fBdlapy3\fP,DLAPY3)"
.br
.ti -1c
.RI "#define \fBLAPACK_slartgp\fP   \fBLAPACK_GLOBAL\fP(\fBslartgp\fP,SLARTGP)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlartgp\fP   \fBLAPACK_GLOBAL\fP(\fBdlartgp\fP,DLARTGP)"
.br
.ti -1c
.RI "#define \fBLAPACK_slartgs\fP   \fBLAPACK_GLOBAL\fP(\fBslartgs\fP,SLARTGS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dlartgs\fP   \fBLAPACK_GLOBAL\fP(\fBdlartgs\fP,DLARTGS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cbbcsd\fP   \fBLAPACK_GLOBAL\fP(\fBcbbcsd\fP,CBBCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cheswapr\fP   \fBLAPACK_GLOBAL\fP(\fBcheswapr\fP,CHESWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetri2\fP   \fBLAPACK_GLOBAL\fP(\fBchetri2\fP,CHETRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetri2x\fP   \fBLAPACK_GLOBAL\fP(\fBchetri2x\fP,CHETRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs2\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs2\fP,CHETRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyconv\fP   \fBLAPACK_GLOBAL\fP(\fBcsyconv\fP,CSYCONV)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyswapr\fP   \fBLAPACK_GLOBAL\fP(\fBcsyswapr\fP,CSYSWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytri2\fP   \fBLAPACK_GLOBAL\fP(\fBcsytri2\fP,CSYTRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytri2x\fP   \fBLAPACK_GLOBAL\fP(\fBcsytri2x\fP,CSYTRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs2\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs2\fP,CSYTRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cunbdb\fP   \fBLAPACK_GLOBAL\fP(\fBcunbdb\fP,CUNBDB)"
.br
.ti -1c
.RI "#define \fBLAPACK_cuncsd\fP   \fBLAPACK_GLOBAL\fP(\fBcuncsd\fP,CUNCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_cuncsd2by1\fP   \fBLAPACK_GLOBAL\fP(\fBcuncsd2by1\fP,CUNCSD2BY1)"
.br
.ti -1c
.RI "#define \fBLAPACK_dbbcsd\fP   \fBLAPACK_GLOBAL\fP(\fBdbbcsd\fP,DBBCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorbdb\fP   \fBLAPACK_GLOBAL\fP(\fBdorbdb\fP,DORBDB)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorcsd\fP   \fBLAPACK_GLOBAL\fP(\fBdorcsd\fP,DORCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_dorcsd2by1\fP   \fBLAPACK_GLOBAL\fP(\fBdorcsd2by1\fP,DORCSD2BY1)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyconv\fP   \fBLAPACK_GLOBAL\fP(\fBdsyconv\fP,DSYCONV)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsyswapr\fP   \fBLAPACK_GLOBAL\fP(\fBdsyswapr\fP,DSYSWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytri2\fP   \fBLAPACK_GLOBAL\fP(\fBdsytri2\fP,DSYTRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytri2x\fP   \fBLAPACK_GLOBAL\fP(\fBdsytri2x\fP,DSYTRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs2\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs2\fP,DSYTRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_sbbcsd\fP   \fBLAPACK_GLOBAL\fP(\fBsbbcsd\fP,SBBCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorbdb\fP   \fBLAPACK_GLOBAL\fP(\fBsorbdb\fP,SORBDB)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorcsd\fP   \fBLAPACK_GLOBAL\fP(\fBsorcsd\fP,SORCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_sorcsd2by1\fP   \fBLAPACK_GLOBAL\fP(\fBsorcsd2by1\fP,SORCSD2BY1)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyconv\fP   \fBLAPACK_GLOBAL\fP(\fBssyconv\fP,SSYCONV)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssyswapr\fP   \fBLAPACK_GLOBAL\fP(\fBssyswapr\fP,SSYSWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytri2\fP   \fBLAPACK_GLOBAL\fP(\fBssytri2\fP,SSYTRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytri2x\fP   \fBLAPACK_GLOBAL\fP(\fBssytri2x\fP,SSYTRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs2\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs2\fP,SSYTRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zbbcsd\fP   \fBLAPACK_GLOBAL\fP(\fBzbbcsd\fP,ZBBCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zheswapr\fP   \fBLAPACK_GLOBAL\fP(\fBzheswapr\fP,ZHESWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetri2\fP   \fBLAPACK_GLOBAL\fP(\fBzhetri2\fP,ZHETRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetri2x\fP   \fBLAPACK_GLOBAL\fP(\fBzhetri2x\fP,ZHETRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs2\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs2\fP,ZHETRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyconv\fP   \fBLAPACK_GLOBAL\fP(\fBzsyconv\fP,ZSYCONV)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyswapr\fP   \fBLAPACK_GLOBAL\fP(\fBzsyswapr\fP,ZSYSWAPR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytri2\fP   \fBLAPACK_GLOBAL\fP(\fBzsytri2\fP,ZSYTRI2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytri2x\fP   \fBLAPACK_GLOBAL\fP(\fBzsytri2x\fP,ZSYTRI2X)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs2\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs2\fP,ZSYTRS2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zunbdb\fP   \fBLAPACK_GLOBAL\fP(\fBzunbdb\fP,ZUNBDB)"
.br
.ti -1c
.RI "#define \fBLAPACK_zuncsd\fP   \fBLAPACK_GLOBAL\fP(\fBzuncsd\fP,ZUNCSD)"
.br
.ti -1c
.RI "#define \fBLAPACK_zuncsd2by1\fP   \fBLAPACK_GLOBAL\fP(\fBzuncsd2by1\fP,ZUNCSD2BY1)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgemqrt\fP   \fBLAPACK_GLOBAL\fP(\fBsgemqrt\fP,SGEMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgemqrt\fP   \fBLAPACK_GLOBAL\fP(\fBdgemqrt\fP,DGEMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgemqrt\fP   \fBLAPACK_GLOBAL\fP(\fBcgemqrt\fP,CGEMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgemqrt\fP   \fBLAPACK_GLOBAL\fP(\fBzgemqrt\fP,ZGEMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqrt\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqrt\fP,SGEQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqrt\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqrt\fP,DGEQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqrt\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqrt\fP,CGEQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqrt\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqrt\fP,ZGEQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqrt2\fP,SGEQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqrt2\fP,DGEQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqrt2\fP,CGEQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqrt2\fP,ZGEQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqrt3\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqrt3\fP,SGEQRT3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqrt3\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqrt3\fP,DGEQRT3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqrt3\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqrt3\fP,CGEQRT3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqrt3\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqrt3\fP,ZGEQRT3)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpmqrt\fP   \fBLAPACK_GLOBAL\fP(\fBstpmqrt\fP,STPMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpmqrt\fP   \fBLAPACK_GLOBAL\fP(\fBdtpmqrt\fP,DTPMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpmqrt\fP   \fBLAPACK_GLOBAL\fP(\fBctpmqrt\fP,CTPMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpmqrt\fP   \fBLAPACK_GLOBAL\fP(\fBztpmqrt\fP,ZTPMQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpqrt\fP   \fBLAPACK_GLOBAL\fP(\fBstpqrt\fP,STPQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpqrt\fP   \fBLAPACK_GLOBAL\fP(\fBdtpqrt\fP,DTPQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpqrt\fP   \fBLAPACK_GLOBAL\fP(\fBctpqrt\fP,CTPQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpqrt\fP   \fBLAPACK_GLOBAL\fP(\fBztpqrt\fP,ZTPQRT)"
.br
.ti -1c
.RI "#define \fBLAPACK_stpqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBstpqrt2\fP,STPQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtpqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBdtpqrt2\fP,DTPQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctpqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBctpqrt2\fP,CTPQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztpqrt2\fP   \fBLAPACK_GLOBAL\fP(\fBztpqrt2\fP,ZTPQRT2)"
.br
.ti -1c
.RI "#define \fBLAPACK_stprfb\fP   \fBLAPACK_GLOBAL\fP(\fBstprfb\fP,STPRFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_dtprfb\fP   \fBLAPACK_GLOBAL\fP(\fBdtprfb\fP,DTPRFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_ctprfb\fP   \fBLAPACK_GLOBAL\fP(\fBctprfb\fP,CTPRFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_ztprfb\fP   \fBLAPACK_GLOBAL\fP(\fBztprfb\fP,ZTPRFB)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysv_rook\fP   \fBLAPACK_GLOBAL\fP(\fBssysv_rook\fP,SSYSV_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysv_rook\fP   \fBLAPACK_GLOBAL\fP(\fBdsysv_rook\fP,DSYSV_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysv_rook\fP   \fBLAPACK_GLOBAL\fP(\fBcsysv_rook\fP,CSYSV_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysv_rook\fP   \fBLAPACK_GLOBAL\fP(\fBzsysv_rook\fP,ZSYSV_ROOK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csyr\fP   \fBLAPACK_GLOBAL\fP(\fBcsyr\fP,CSYR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsyr\fP   \fBLAPACK_GLOBAL\fP(\fBzsyr\fP,ZSYR)"
.br
.ti -1c
.RI "#define \fBLAPACK_ilaver\fP   \fBLAPACK_GLOBAL\fP(ilaver,ILAVER)"
.br
.ti -1c
.RI "#define \fBLAPACK_sggsvd3\fP   \fBLAPACK_GLOBAL\fP(\fBsggsvd3\fP,SGGSVD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dggsvd3\fP   \fBLAPACK_GLOBAL\fP(\fBdggsvd3\fP,DGGSVD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_cggsvd3\fP   \fBLAPACK_GLOBAL\fP(\fBcggsvd3\fP,CGGSVD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zggsvd3\fP   \fBLAPACK_GLOBAL\fP(\fBzggsvd3\fP,ZGGSVD3)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBssysv_aa\fP,SSYSV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBdsysv_aa\fP,DSYSV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBchesv_aa\fP,CHESV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzsysv_aa\fP,ZSYSV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBcsysv_aa\fP,CSYSV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesv_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzhesv_aa\fP,ZHESV_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs_aa\fP,SSYTRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs_aa\fP,DSYTRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs_aa\fP,CSYTRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs_aa\fP,ZSYTRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs_aa\fP,CHETRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs_aa\fP,ZHETRS_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBssytrf_aa\fP,SSYTRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrf_aa\fP,DSYTRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrf_aa\fP,CSYTRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrf_aa\fP,ZSYTRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBchetrf_aa\fP,CHETRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrf_aa\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrf_aa\fP,ZHETRF_AA)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBssysv_rk\fP,SSYSV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBdsysv_rk\fP,DSYSV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBchesv_rk\fP,CHESV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBzsysv_rk\fP,ZSYSV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBcsysv_rk\fP,CSYSV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesv_rk\fP   \fBLAPACK_GLOBAL\fP(\fBzhesv_rk\fP,ZHESV_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBssytrf_rk\fP,SSYTRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrf_rk\fP,DSYTRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrf_rk\fP,CSYTRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrf_rk\fP,ZSYTRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBchetrf_rk\fP,CHETRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrf_rk\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrf_rk\fP,ZHETRF_RK)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs_3\fP,SSYTRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs_3\fP,DSYTRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs_3\fP,CSYTRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs_3\fP,ZSYTRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs_3\fP,CHETRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs_3\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs_3\fP,ZHETRS_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytri_3\fP   \fBLAPACK_GLOBAL\fP(\fBssytri_3\fP,SSYTRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytri_3\fP   \fBLAPACK_GLOBAL\fP(\fBdsytri_3\fP,DSYTRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytri_3\fP   \fBLAPACK_GLOBAL\fP(\fBcsytri_3\fP,CSYTRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytri_3\fP   \fBLAPACK_GLOBAL\fP(\fBzsytri_3\fP,ZSYTRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetri_3\fP   \fBLAPACK_GLOBAL\fP(\fBchetri_3\fP,CHETRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetri_3\fP   \fBLAPACK_GLOBAL\fP(\fBzhetri_3\fP,ZHETRI_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssycon_3\fP   \fBLAPACK_GLOBAL\fP(\fBssycon_3\fP,SSYCON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsycon_3\fP   \fBLAPACK_GLOBAL\fP(\fBdsycon_3\fP,DSYCON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_csycon_3\fP   \fBLAPACK_GLOBAL\fP(\fBcsycon_3\fP,CSYCON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsycon_3\fP   \fBLAPACK_GLOBAL\fP(\fBzsycon_3\fP,ZSYCON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_checon_3\fP   \fBLAPACK_GLOBAL\fP(\fBchecon_3\fP,CHECON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhecon_3\fP   \fBLAPACK_GLOBAL\fP(\fBzhecon_3\fP,ZHECON_3)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgelq\fP   \fBLAPACK_GLOBAL\fP(\fBsgelq\fP,SGELQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgelq\fP   \fBLAPACK_GLOBAL\fP(\fBdgelq\fP,DGELQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgelq\fP   \fBLAPACK_GLOBAL\fP(\fBcgelq\fP,CGELQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgelq\fP   \fBLAPACK_GLOBAL\fP(\fBzgelq\fP,ZGELQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgemlq\fP   \fBLAPACK_GLOBAL\fP(\fBsgemlq\fP,SGEMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgemlq\fP   \fBLAPACK_GLOBAL\fP(\fBdgemlq\fP,DGEMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgemlq\fP   \fBLAPACK_GLOBAL\fP(\fBcgemlq\fP,CGEMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgemlq\fP   \fBLAPACK_GLOBAL\fP(\fBzgemlq\fP,ZGEMLQ)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgeqr\fP   \fBLAPACK_GLOBAL\fP(\fBsgeqr\fP,SGEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgeqr\fP   \fBLAPACK_GLOBAL\fP(\fBdgeqr\fP,DGEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgeqr\fP   \fBLAPACK_GLOBAL\fP(\fBcgeqr\fP,CGEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgeqr\fP   \fBLAPACK_GLOBAL\fP(\fBzgeqr\fP,ZGEQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgemqr\fP   \fBLAPACK_GLOBAL\fP(\fBsgemqr\fP,SGEMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgemqr\fP   \fBLAPACK_GLOBAL\fP(\fBdgemqr\fP,DGEMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgemqr\fP   \fBLAPACK_GLOBAL\fP(\fBcgemqr\fP,CGEMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgemqr\fP   \fBLAPACK_GLOBAL\fP(\fBzgemqr\fP,ZGEMQR)"
.br
.ti -1c
.RI "#define \fBLAPACK_sgetsls\fP   \fBLAPACK_GLOBAL\fP(\fBsgetsls\fP,SGETSLS)"
.br
.ti -1c
.RI "#define \fBLAPACK_dgetsls\fP   \fBLAPACK_GLOBAL\fP(\fBdgetsls\fP,DGETSLS)"
.br
.ti -1c
.RI "#define \fBLAPACK_cgetsls\fP   \fBLAPACK_GLOBAL\fP(\fBcgetsls\fP,CGETSLS)"
.br
.ti -1c
.RI "#define \fBLAPACK_zgetsls\fP   \fBLAPACK_GLOBAL\fP(\fBzgetsls\fP,ZGETSLS)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssysv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssysv_aa_2stage\fP,SSYSV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsysv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsysv_aa_2stage\fP,DSYSV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chesv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchesv_aa_2stage\fP,CHESV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsysv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzsysv_aa_2stage\fP,ZSYSV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_csysv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcsysv_aa_2stage\fP,CSYSV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhesv_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhesv_aa_2stage\fP,ZHESV_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssytrs_aa_2stage\fP,SSYTRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrs_aa_2stage\fP,DSYTRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrs_aa_2stage\fP,CSYTRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrs_aa_2stage\fP,ZSYTRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchetrs_aa_2stage\fP,CHETRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrs_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrs_aa_2stage\fP,ZHETRS_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_ssytrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBssytrf_aa_2stage\fP,SSYTRF_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_dsytrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBdsytrf_aa_2stage\fP,DSYTRF_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_csytrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBcsytrf_aa_2stage\fP,CSYTRF_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zsytrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzsytrf_aa_2stage\fP,ZSYTRF_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_chetrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBchetrf_aa_2stage\fP,CHETRF_AA_2STAGE)"
.br
.ti -1c
.RI "#define \fBLAPACK_zhetrf_aa_2stage\fP   \fBLAPACK_GLOBAL\fP(\fBzhetrf_aa_2stage\fP,ZHETRF_AA_2STAGE)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_S_SELECT2\fP) (const float *, const float *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_S_SELECT3\fP) (const float *, const float *, const float *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_D_SELECT2\fP) (const double *, const double *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_D_SELECT3\fP) (const double *, const double *, const double *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_C_SELECT1\fP) (const \fBlapack_complex_float\fP *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_C_SELECT2\fP) (const \fBlapack_complex_float\fP *, const \fBlapack_complex_float\fP *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_Z_SELECT1\fP) (const \fBlapack_complex_double\fP *)"
.br
.ti -1c
.RI "typedef \fBlapack_logical\fP(* \fBLAPACK_Z_SELECT2\fP) (const \fBlapack_complex_double\fP *, const \fBlapack_complex_double\fP *)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBlapack_complex_float\fP \fBlapack_make_complex_float\fP (float re, float im)"
.br
.ti -1c
.RI "\fBlapack_complex_double\fP \fBlapack_make_complex_double\fP (double re, double im)"
.br
.ti -1c
.RI "\fBlapack_logical\fP \fBLAPACK_lsame\fP (char *ca, char *cb, \fBlapack_int\fP lca, \fBlapack_int\fP lcb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsdc\fP (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, float *d, float *e, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *q, \fBlapack_int\fP *iq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsdc\fP (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, double *d, double *e, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *q, \fBlapack_int\fP *iq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsqr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float *d, float *e, float *vt, \fBlapack_int\fP ldvt, float *u, \fBlapack_int\fP ldu, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsqr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double *d, double *e, double *vt, \fBlapack_int\fP ldvt, double *u, \fBlapack_int\fP ldu, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cbdsqr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float *d, float *e, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zbdsqr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double *d, double *e, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsvdx\fP (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsvdx\fP (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sdisna\fP (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *d, float *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ddisna\fP (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *d, double *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbbrd\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float *ab, \fBlapack_int\fP ldab, float *d, float *e, float *q, \fBlapack_int\fP ldq, float *pt, \fBlapack_int\fP ldpt, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbbrd\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double *ab, \fBlapack_int\fP ldab, double *d, double *e, double *q, \fBlapack_int\fP ldq, double *pt, \fBlapack_int\fP ldpt, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbbrd\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *pt, \fBlapack_int\fP ldpt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbbrd\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *pt, \fBlapack_int\fP ldpt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbcon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbcon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbcon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbcon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbrfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbrfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbrfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbrfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbtrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbtrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbtrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbtrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbtrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbtrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbtrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbtrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *scale, \fBlapack_int\fP m, float *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *scale, \fBlapack_int\fP m, double *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *scale, \fBlapack_int\fP m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *scale, \fBlapack_int\fP m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebal\fP (int matrix_layout, char job, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebal\fP (int matrix_layout, char job, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebal\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebal\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebrd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *d, float *e, float *tauq, float *taup)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebrd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *d, double *e, double *tauq, double *taup)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebrd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *d, float *e, \fBlapack_complex_float\fP *tauq, \fBlapack_complex_float\fP *taup)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebrd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *d, double *e, \fBlapack_complex_double\fP *tauq, \fBlapack_complex_double\fP *taup)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgecon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgecon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgecon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgecon\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeequ\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeequb\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgees\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP ldvs)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgees\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP ldvs)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgees\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP ldvs)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgees\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP ldvs)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeesx\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP ldvs, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeesx\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP ldvs, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeesx\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP ldvs, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeesx\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP ldvs, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *wr, float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *wr, double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *wr, float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *wr, double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgehrd\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgehrd\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgehrd\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgehrd\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgejsv\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *sva, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *stat, \fBlapack_int\fP *istat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgejsv\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *sva, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *stat, \fBlapack_int\fP *istat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgejsv\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *sva, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, float *stat, \fBlapack_int\fP *istat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgejsv\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *sva, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, double *stat, \fBlapack_int\fP *istat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelq2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelq2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelq2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelq2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgels\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgels\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgels\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgels\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelsd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelsd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelsd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelsd\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelss\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelss\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelss\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelss\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelsy\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelsy\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelsy\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, float rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelsy\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, double rcond, \fBlapack_int\fP *rank)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqlf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqlf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqlf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqlf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqp3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqp3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqp3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqp3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqpf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqpf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqpf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqpf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqr2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqr2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqr2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqr2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrfp\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrfp\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrfp\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrfp\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerfsx\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesdd\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesdd\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesdd\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesdd\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zcgesv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvd\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvd\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvd\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, float *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvd\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, double *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvdx\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvdx\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvdx\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvdx\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP *superb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvj\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *sva, \fBlapack_int\fP mv, float *v, \fBlapack_int\fP ldv, float *stat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvj\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *sva, \fBlapack_int\fP mv, double *v, \fBlapack_int\fP ldv, double *stat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvj\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *sva, \fBlapack_int\fP mv, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, float *stat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvj\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *sva, \fBlapack_int\fP mv, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, double *stat)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *rpivot)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvxx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrf2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetri\fP (int matrix_layout, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetri\fP (int matrix_layout, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetri\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetri\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggbak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *lscale, const float *rscale, \fBlapack_int\fP m, float *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggbak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *lscale, const double *rscale, \fBlapack_int\fP m, double *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggbak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *lscale, const float *rscale, \fBlapack_int\fP m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggbak\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *lscale, const double *rscale, \fBlapack_int\fP m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggbal\fP (int matrix_layout, char job, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggbal\fP (int matrix_layout, char job, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggbal\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggbal\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgges\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgges\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgges\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgges\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgges3\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgges3\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgges3\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgges3\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggesx\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggesx\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggesx\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggesx\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggev\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggev3\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggev3\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggev3\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggev3\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggevx\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggglm\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *d, float *x, float *y)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggglm\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *d, double *x, double *y)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggglm\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x, \fBlapack_complex_float\fP *y)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggglm\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x, \fBlapack_complex_double\fP *y)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgghrd\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgghrd\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgghrd\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgghrd\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgghd3\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgghd3\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgghd3\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgghd3\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgglse\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *c, float *d, float *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgglse\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *c, double *d, double *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgglse\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgglse\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggqrf\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *taua, float *b, \fBlapack_int\fP ldb, float *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggqrf\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *taua, double *b, \fBlapack_int\fP ldb, double *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggqrf\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggqrf\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggrqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *taua, float *b, \fBlapack_int\fP ldb, float *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggrqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *taua, double *b, \fBlapack_int\fP ldb, double *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggrqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggrqf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *taub)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvd\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvd\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvd\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvd\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvd3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvd3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvd3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvd3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvp\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvp\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvp\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvp\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvp3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvp3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvp3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvp3\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtcon\fP (char norm, \fBlapack_int\fP n, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtcon\fP (char norm, \fBlapack_int\fP n, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtcon\fP (char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtcon\fP (char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, const float *dlf, const float *df, const float *duf, const float *du2, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, const double *dlf, const double *df, const double *duf, const double *du2, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *dlf, const \fBlapack_complex_float\fP *df, const \fBlapack_complex_float\fP *duf, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtrfs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *dlf, const \fBlapack_complex_double\fP *df, const \fBlapack_complex_double\fP *duf, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *dl, float *d, float *du, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *dl, double *d, double *du, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, float *dlf, float *df, float *duf, float *du2, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, double *dlf, double *df, double *duf, double *du2, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *dlf, \fBlapack_complex_float\fP *df, \fBlapack_complex_float\fP *duf, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtsvx\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *dlf, \fBlapack_complex_double\fP *df, \fBlapack_complex_double\fP *duf, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgttrf\fP (\fBlapack_int\fP n, float *dl, float *d, float *du, float *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgttrf\fP (\fBlapack_int\fP n, double *dl, double *d, double *du, double *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgttrf\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgttrf\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgttrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgttrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgttrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgttrs\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgst\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgst\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgv\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgv\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgvd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgvd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgvx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgvx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbtrd\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbtrd\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_checon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhecon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevr\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevr\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cherfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zherfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cherfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zherfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *d, float *e, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *d, double *e, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chfrk\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float beta, \fBlapack_complex_float\fP *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhfrk\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double beta, \fBlapack_complex_double\fP *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shgeqz\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *h, \fBlapack_int\fP ldh, float *t, \fBlapack_int\fP ldt, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhgeqz\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *h, \fBlapack_int\fP ldh, double *t, \fBlapack_int\fP ldt, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chgeqz\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhgeqz\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *d, float *e, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *d, double *e, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shsein\fP (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *h, \fBlapack_int\fP ldh, float *wr, const float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhsein\fP (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *h, \fBlapack_int\fP ldh, double *wr, const double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chsein\fP (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhsein\fP (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shseqr\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *h, \fBlapack_int\fP ldh, float *wr, float *wi, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhseqr\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *h, \fBlapack_int\fP ldh, double *wr, double *wi, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chseqr\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhseqr\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacgv\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacgv\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slacn2\fP (\fBlapack_int\fP n, float *v, float *x, \fBlapack_int\fP *isgn, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlacn2\fP (\fBlapack_int\fP n, double *v, double *x, \fBlapack_int\fP *isgn, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacn2\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP *x, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacn2\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP *x, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slacpy\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlacpy\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacpy\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacpy\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacp2\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacp2\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlag2c\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *sa, \fBlapack_int\fP ldsa)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slag2d\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *sa, \fBlapack_int\fP ldsa, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlag2s\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, float *sa, \fBlapack_int\fP ldsa)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clag2z\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *sa, \fBlapack_int\fP ldsa, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slagge\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *d, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlagge\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *d, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clagge\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlagge\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "float \fBLAPACKE_slamch\fP (char cmach)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlamch\fP (char cmach)"
.br
.ti -1c
.RI "float \fBLAPACKE_slange\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlange\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "float \fBLAPACKE_clange\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlange\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "float \fBLAPACKE_clanhe\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlanhe\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacrm\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacrm\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarcm\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarcm\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "float \fBLAPACKE_slansy\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlansy\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "float \fBLAPACKE_clansy\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlansy\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "float \fBLAPACKE_slantr\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlantr\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "float \fBLAPACKE_clantr\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlantr\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfg\fP (\fBlapack_int\fP n, float *alpha, float *x, \fBlapack_int\fP incx, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfg\fP (\fBlapack_int\fP n, double *alpha, double *x, \fBlapack_int\fP incx, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfg\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfg\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarft\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *v, \fBlapack_int\fP ldv, const float *tau, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarft\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *v, \fBlapack_int\fP ldv, const double *tau, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarft\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarft\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfx\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *v, float tau, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfx\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *v, double tau, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfx\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfx\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarnv\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, float *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarnv\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, double *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarnv\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarnv\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slascl\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlascl\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clascl\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlascl\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slaset\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, float beta, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlaset\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, double beta, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claset\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, \fBlapack_complex_float\fP beta, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaset\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, \fBlapack_complex_double\fP beta, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slasrt\fP (char id, \fBlapack_int\fP n, float *d)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlasrt\fP (char id, \fBlapack_int\fP n, double *d)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slassq\fP (\fBlapack_int\fP n, float *x, \fBlapack_int\fP incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlassq\fP (\fBlapack_int\fP n, double *x, \fBlapack_int\fP incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_classq\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlassq\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slaswp\fP (int matrix_layout, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlaswp\fP (int matrix_layout, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claswp\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaswp\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slatms\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, float *d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlatms\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, double *d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clatms\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, float *d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlatms\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, double *d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slauum\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlauum\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clauum\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlauum\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sopgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, const float *tau, float *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dopgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, const double *tau, double *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sopmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *ap, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dopmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *ap, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgbr\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgbr\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorghr\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorghr\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorglq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorglq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgql\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgql\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgrq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgrq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormbr\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormbr\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormhr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormhr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormql\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormql\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormrq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormrq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormrz\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormrz\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbstf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, float *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbstf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, double *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbstf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbstf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbtrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbtrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbtrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbtrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbtrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbtrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbtrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbtrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftrf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftrf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftrf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftrf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftri\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftri\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftri\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftri\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftrs\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftrs\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftrs\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftrs\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spocon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpocon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpocon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpocon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spoequ\fP (int matrix_layout, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpoequ\fP (int matrix_layout, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpoequ\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpoequ\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spoequb\fP (int matrix_layout, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpoequb\fP (int matrix_layout, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpoequb\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpoequb\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sporfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dporfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cporfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zporfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sporfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const float *s, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dporfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const double *s, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cporfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zporfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zcposv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrf2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrf2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrf2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrf2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppequ\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *afp, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *afp, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, float *afp, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, double *afp, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spstrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float tol)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpstrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double tol)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpstrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float tol)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpstrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double tol)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptcon\fP (\fBlapack_int\fP n, const float *d, const float *e, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptcon\fP (\fBlapack_int\fP n, const double *d, const double *e, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptcon\fP (\fBlapack_int\fP n, const float *d, const \fBlapack_complex_float\fP *e, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptcon\fP (\fBlapack_int\fP n, const double *d, const \fBlapack_complex_double\fP *e, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptrfs\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, const float *df, const float *ef, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptrfs\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, const double *df, const double *ef, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, const float *df, const \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, const double *df, const \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *d, float *e, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *d, double *e, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *d, \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptsv\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *d, \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptsvx\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, float *df, float *ef, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptsvx\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, double *df, double *ef, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptsvx\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, float *df, \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptsvx\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, double *df, \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spttrf\fP (\fBlapack_int\fP n, float *d, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpttrf\fP (\fBlapack_int\fP n, double *d, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpttrf\fP (\fBlapack_int\fP n, float *d, \fBlapack_complex_float\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpttrf\fP (\fBlapack_int\fP n, double *d, \fBlapack_complex_double\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spttrs\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpttrs\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpttrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpttrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgst\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, const float *bb, \fBlapack_int\fP ldbb, float *x, \fBlapack_int\fP ldx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgst\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, const double *bb, \fBlapack_int\fP ldbb, double *x, \fBlapack_int\fP ldx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgv\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgv\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgvd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgvd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgvx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgvx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbtrd\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *d, float *e, float *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbtrd\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *d, double *e, double *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssfrk\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const float *a, \fBlapack_int\fP lda, float beta, float *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsfrk\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const double *a, \fBlapack_int\fP lda, double beta, double *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspcon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float *ap, const float *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double *ap, const double *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *afp, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *afp, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsprfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspsv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *afp, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *afp, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspsvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, float *d, float *e, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, double *d, double *e, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstebz\fP (char range, char order, \fBlapack_int\fP n, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, const float *d, const float *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, float *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstebz\fP (char range, char order, \fBlapack_int\fP n, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, const double *d, const double *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, double *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstedc\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstedc\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstedc\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstedc\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstegr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstegr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstegr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstegr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstein\fP (int matrix_layout, \fBlapack_int\fP n, const float *d, const float *e, \fBlapack_int\fP m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstein\fP (int matrix_layout, \fBlapack_int\fP n, const double *d, const double *e, \fBlapack_int\fP m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstein\fP (int matrix_layout, \fBlapack_int\fP n, const float *d, const float *e, \fBlapack_int\fP m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstein\fP (int matrix_layout, \fBlapack_int\fP n, const double *d, const double *e, \fBlapack_int\fP m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstemr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstemr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstemr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstemr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsteqr\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssterf\fP (\fBlapack_int\fP n, float *d, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsterf\fP (\fBlapack_int\fP n, double *d, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstev\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstev\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevd\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevd\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevr\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevx\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevx\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssycon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsycon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csycon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsycon\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyequb\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyev\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevd\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevr\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevr\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevx\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygst\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygv\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygvd\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygvx\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyrfs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyrfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyrfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyrfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyrfsx\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysvx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysvxx\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *d, float *e, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrd\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *d, double *e, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfsm\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, const float *a, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfsm\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, const double *a, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfsm\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfsm\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stftri\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtftri\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctftri\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztftri\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfttp\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *arf, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfttp\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *arf, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfttp\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfttp\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfttr\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *arf, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfttr\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *arf, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfttr\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfttr\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *s, \fBlapack_int\fP lds, const float *p, \fBlapack_int\fP ldp, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *s, \fBlapack_int\fP lds, const double *p, \fBlapack_int\fP ldp, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *s, \fBlapack_int\fP lds, const \fBlapack_complex_float\fP *p, \fBlapack_int\fP ldp, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *s, \fBlapack_int\fP lds, const \fBlapack_complex_double\fP *p, \fBlapack_int\fP ldp, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgexc\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgexc\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgexc\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgexc\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsen\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsen\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsen\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsen\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsja\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsja\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsja\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsja\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, const float *vl, \fBlapack_int\fP ldvl, const float *vr, \fBlapack_int\fP ldvr, float *s, float *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, const double *vl, \fBlapack_int\fP ldvl, const double *vr, \fBlapack_int\fP ldvr, double *s, double *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, float *s, float *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, double *s, double *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsyl\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, float *c, \fBlapack_int\fP ldc, const float *d, \fBlapack_int\fP ldd, const float *e, \fBlapack_int\fP lde, float *f, \fBlapack_int\fP ldf, float *scale, float *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsyl\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, double *c, \fBlapack_int\fP ldc, const double *d, \fBlapack_int\fP ldd, const double *e, \fBlapack_int\fP lde, double *f, \fBlapack_int\fP ldf, double *scale, double *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsyl\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, const \fBlapack_complex_float\fP *d, \fBlapack_int\fP ldd, const \fBlapack_complex_float\fP *e, \fBlapack_int\fP lde, \fBlapack_complex_float\fP *f, \fBlapack_int\fP ldf, float *scale, float *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsyl\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, const \fBlapack_complex_double\fP *d, \fBlapack_int\fP ldd, const \fBlapack_complex_double\fP *e, \fBlapack_int\fP lde, \fBlapack_complex_double\fP *f, \fBlapack_int\fP ldf, double *scale, double *dif)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float *ap, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double *ap, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stprfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtprfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctprfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztprfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stptri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtptri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctptri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztptri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stptrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtptrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctptrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztptrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *ap, float *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *ap, double *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpttr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpttr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpttr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpttr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrcon\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strevc\fP (int matrix_layout, char side, char howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *t, \fBlapack_int\fP ldt, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrevc\fP (int matrix_layout, char side, char howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *t, \fBlapack_int\fP ldt, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrevc\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strexc\fP (int matrix_layout, char compq, \fBlapack_int\fP n, float *t, \fBlapack_int\fP ldt, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrexc\fP (int matrix_layout, char compq, \fBlapack_int\fP n, double *t, \fBlapack_int\fP ldt, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrexc\fP (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrexc\fP (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrrfs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsen\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, float *t, \fBlapack_int\fP ldt, float *q, \fBlapack_int\fP ldq, float *wr, float *wi, \fBlapack_int\fP *m, float *s, float *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsen\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, double *t, \fBlapack_int\fP ldt, double *q, \fBlapack_int\fP ldq, double *wr, double *wi, \fBlapack_int\fP *m, double *s, double *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsen\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *w, \fBlapack_int\fP *m, float *s, float *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsen\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *w, \fBlapack_int\fP *m, double *s, double *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *t, \fBlapack_int\fP ldt, const float *vl, \fBlapack_int\fP ldvl, const float *vr, \fBlapack_int\fP ldvr, float *s, float *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *t, \fBlapack_int\fP ldt, const double *vl, \fBlapack_int\fP ldvl, const double *vr, \fBlapack_int\fP ldvr, double *s, double *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, float *s, float *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsna\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, double *s, double *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsyl\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, float *c, \fBlapack_int\fP ldc, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsyl\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, double *c, \fBlapack_int\fP ldc, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsyl\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsyl\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strtri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrtri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrtri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrtri\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrtrs\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrttf\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strttp\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrttp\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrttp\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrttp\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stzrzf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtzrzf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctzrzf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztzrzf\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungbr\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungbr\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunghr\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunghr\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunglq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunglq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungql\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungql\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungrq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungrq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmbr\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmbr\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmhr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmhr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmql\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmql\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmrq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmrq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmrz\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmrz\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cupgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zupgtr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cupmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zupmtr\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsdc_work\fP (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, float *d, float *e, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *q, \fBlapack_int\fP *iq, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsdc_work\fP (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, double *d, double *e, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *q, \fBlapack_int\fP *iq, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsvdx_work\fP (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsvdx_work\fP (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbdsqr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float *d, float *e, float *vt, \fBlapack_int\fP ldvt, float *u, \fBlapack_int\fP ldu, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbdsqr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double *d, double *e, double *vt, \fBlapack_int\fP ldvt, double *u, \fBlapack_int\fP ldu, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cbdsqr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float *d, float *e, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zbdsqr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double *d, double *e, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sdisna_work\fP (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *d, float *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ddisna_work\fP (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *d, double *sep)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbbrd_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float *ab, \fBlapack_int\fP ldab, float *d, float *e, float *q, \fBlapack_int\fP ldq, float *pt, \fBlapack_int\fP ldpt, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbbrd_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double *ab, \fBlapack_int\fP ldab, double *d, double *e, double *q, \fBlapack_int\fP ldq, double *pt, \fBlapack_int\fP ldpt, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbbrd_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *pt, \fBlapack_int\fP ldpt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbbrd_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *pt, \fBlapack_int\fP ldpt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbcon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbcon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbcon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbcon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbrfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbrfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbrfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbrfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbsvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbsvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbsvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbsvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbtrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbtrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbtrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbtrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgbtrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgbtrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgbtrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgbtrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *scale, \fBlapack_int\fP m, float *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *scale, \fBlapack_int\fP m, double *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *scale, \fBlapack_int\fP m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *scale, \fBlapack_int\fP m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgebrd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *d, float *e, float *tauq, float *taup, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgebrd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *d, double *e, double *tauq, double *taup, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgebrd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *d, float *e, \fBlapack_complex_float\fP *tauq, \fBlapack_complex_float\fP *taup, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgebrd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *d, double *e, \fBlapack_complex_double\fP *tauq, \fBlapack_complex_double\fP *taup, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgecon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgecon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgecon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgecon_work\fP (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeequ_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeequb_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgees_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP ldvs, float *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgees_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP ldvs, double *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgees_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP ldvs, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgees_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP ldvs, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeesx_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP ldvs, float *rconde, float *rcondv, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeesx_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP ldvs, double *rconde, double *rcondv, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeesx_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP ldvs, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeesx_work\fP (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP ldvs, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *wr, float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *wr, double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *wr, float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *wr, double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgehrd_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgehrd_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgehrd_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgehrd_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgejsv_work\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *sva, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgejsv_work\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *sva, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgejsv_work\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *sva, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *cwork, \fBlapack_int\fP lwork, float *work, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgejsv_work\fP (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *sva, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *cwork, \fBlapack_int\fP lwork, double *work, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelq2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelq2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelq2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelq2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgels_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgels_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgels_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgels_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelsd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelsd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelsd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelsd_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelss_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelss_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelss_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *s, float rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelss_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *s, double rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelsy_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, float rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelsy_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, double rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelsy_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, float rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelsy_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *jpvt, double rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqlf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqlf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqlf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqlf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqp3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqp3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqp3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqp3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqpf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, float *tau, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqpf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, double *tau, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqpf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqpf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqr2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqr2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqr2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqr2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrfp_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrfp_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrfp_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrfp_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerfsx_work\fP (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgerqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgerqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgerqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgerqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesdd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesdd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesdd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesdd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *work, float *swork, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zcgesv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP *work, \fBlapack_complex_float\fP *swork, double *rwork, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvd_work\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvd_work\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvd_work\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvd_work\fP (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvdx_work\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, float *u, \fBlapack_int\fP ldu, float *vt, \fBlapack_int\fP ldvt, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvdx_work\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, double *u, \fBlapack_int\fP ldu, double *vt, \fBlapack_int\fP ldvt, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvdx_work\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvdx_work\fP (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *ns, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvj_work\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *sva, \fBlapack_int\fP mv, float *v, \fBlapack_int\fP ldv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvj_work\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *sva, \fBlapack_int\fP mv, double *v, \fBlapack_int\fP ldv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvj_work\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *sva, \fBlapack_int\fP mv, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *cwork, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvj_work\fP (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *sva, \fBlapack_int\fP mv, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *cwork, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgesvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgesvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgesvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgesvxx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrf2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetri_work\fP (int matrix_layout, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetri_work\fP (int matrix_layout, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetri_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetri_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggbak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *lscale, const float *rscale, \fBlapack_int\fP m, float *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggbak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *lscale, const double *rscale, \fBlapack_int\fP m, double *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggbak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *lscale, const float *rscale, \fBlapack_int\fP m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggbak_work\fP (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *lscale, const double *rscale, \fBlapack_int\fP m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggbal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggbal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggbal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggbal_work\fP (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgges_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr, float *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgges_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr, double *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgges_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgges_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgges3_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr, float *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgges3_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr, double *work, \fBlapack_int\fP lwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgges3_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgges3_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggesx_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP ldvsl, float *vsr, \fBlapack_int\fP ldvsr, float *rconde, float *rcondv, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggesx_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP ldvsl, double *vsr, \fBlapack_int\fP ldvsr, double *rconde, double *rcondv, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggesx_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP ldvsr, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggesx_work\fP (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP ldvsr, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggev_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggev3_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggev3_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggev3_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggev3_work\fP (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggevx_work\fP (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggglm_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *d, float *x, float *y, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggglm_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *d, double *x, double *y, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggglm_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x, \fBlapack_complex_float\fP *y, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggglm_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x, \fBlapack_complex_double\fP *y, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgghrd_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgghrd_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgghrd_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgghrd_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgghd3_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgghd3_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgghd3_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgghd3_work\fP (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgglse_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *c, float *d, float *x, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgglse_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *c, double *d, double *x, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgglse_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgglse_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggqrf_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float *a, \fBlapack_int\fP lda, float *taua, float *b, \fBlapack_int\fP ldb, float *taub, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggqrf_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double *a, \fBlapack_int\fP lda, double *taua, double *b, \fBlapack_int\fP ldb, double *taub, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggqrf_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *taub, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggqrf_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *taub, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggrqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *taua, float *b, \fBlapack_int\fP ldb, float *taub, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggrqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *taua, double *b, \fBlapack_int\fP ldb, double *taub, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggrqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *taub, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggrqf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *taub, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvd_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvd_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvd_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvd_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvd3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvd3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvd3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvd3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvp_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, float *tau, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvp_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, double *tau, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvp_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, float *rwork, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvp_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, double *rwork, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sggsvp3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dggsvp3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cggsvp3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, float *rwork, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zggsvp3_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *iwork, double *rwork, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtcon_work\fP (char norm, \fBlapack_int\fP n, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtcon_work\fP (char norm, \fBlapack_int\fP n, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtcon_work\fP (char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtcon_work\fP (char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, const float *dlf, const float *df, const float *duf, const float *du2, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, const double *dlf, const double *df, const double *duf, const double *du2, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *dlf, const \fBlapack_complex_float\fP *df, const \fBlapack_complex_float\fP *duf, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtrfs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *dlf, const \fBlapack_complex_double\fP *df, const \fBlapack_complex_double\fP *duf, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *dl, float *d, float *du, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *dl, double *d, double *du, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgtsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, float *dlf, float *df, float *duf, float *du2, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgtsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, double *dlf, double *df, double *duf, double *du2, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgtsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *dlf, \fBlapack_complex_float\fP *df, \fBlapack_complex_float\fP *duf, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgtsvx_work\fP (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *dlf, \fBlapack_complex_double\fP *df, \fBlapack_complex_double\fP *duf, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgttrf_work\fP (\fBlapack_int\fP n, float *dl, float *d, float *du, float *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgttrf_work\fP (\fBlapack_int\fP n, double *dl, double *d, double *du, double *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgttrf_work\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgttrf_work\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgttrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgttrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgttrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgttrs_work\fP (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgst_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgst_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgv_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgv_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgvd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgvd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbgvx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbgvx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbtrd_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbtrd_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_checon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhecon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevr_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevr_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cherfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zherfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cherfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zherfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *d, float *e, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *d, double *e, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chfrk_work\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float beta, \fBlapack_complex_float\fP *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhfrk_work\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double beta, \fBlapack_complex_double\fP *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shgeqz_work\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *h, \fBlapack_int\fP ldh, float *t, \fBlapack_int\fP ldt, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhgeqz_work\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *h, \fBlapack_int\fP ldh, double *t, \fBlapack_int\fP ldt, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chgeqz_work\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhgeqz_work\fP (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpgvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpgvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chpsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhpsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, float *d, float *e, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, double *d, double *e, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shsein_work\fP (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *h, \fBlapack_int\fP ldh, float *wr, const float *wi, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhsein_work\fP (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *h, \fBlapack_int\fP ldh, double *wr, const double *wi, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chsein_work\fP (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhsein_work\fP (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_shseqr_work\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *h, \fBlapack_int\fP ldh, float *wr, float *wi, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dhseqr_work\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *h, \fBlapack_int\fP ldh, double *wr, double *wi, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chseqr_work\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhseqr_work\fP (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacgv_work\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacgv_work\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slacn2_work\fP (\fBlapack_int\fP n, float *v, float *x, \fBlapack_int\fP *isgn, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlacn2_work\fP (\fBlapack_int\fP n, double *v, double *x, \fBlapack_int\fP *isgn, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacn2_work\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP *x, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacn2_work\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP *x, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slacpy_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlacpy_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacpy_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacpy_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacp2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacp2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlag2c_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *sa, \fBlapack_int\fP ldsa)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slag2d_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *sa, \fBlapack_int\fP ldsa, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlag2s_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, float *sa, \fBlapack_int\fP ldsa)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clag2z_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *sa, \fBlapack_int\fP ldsa, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slagge_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *d, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlagge_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *d, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clagge_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlagge_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claghe_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaghe_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slagsy_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlagsy_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clagsy_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlagsy_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slapmr_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlapmr_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clapmr_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlapmr_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slapmt_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlapmt_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clapmt_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlapmt_work\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slartgp_work\fP (float f, float g, float *cs, float *sn, float *r)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlartgp_work\fP (double f, double g, double *cs, double *sn, double *r)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slartgs_work\fP (float x, float y, float sigma, float *cs, float *sn)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlartgs_work\fP (double x, double y, double sigma, double *cs, double *sn)"
.br
.ti -1c
.RI "float \fBLAPACKE_slapy2_work\fP (float x, float y)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlapy2_work\fP (double x, double y)"
.br
.ti -1c
.RI "float \fBLAPACKE_slapy3_work\fP (float x, float y, float z)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlapy3_work\fP (double x, double y, double z)"
.br
.ti -1c
.RI "float \fBLAPACKE_slamch_work\fP (char cmach)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlamch_work\fP (char cmach)"
.br
.ti -1c
.RI "float \fBLAPACKE_slange_work\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlange_work\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_clange_work\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlange_work\fP (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_clanhe_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlanhe_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clacrm_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlacrm_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarcm_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarcm_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_slansy_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlansy_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_clansy_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlansy_work\fP (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_slantr_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlantr_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACKE_clantr_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACKE_zlantr_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfg_work\fP (\fBlapack_int\fP n, float *alpha, float *x, \fBlapack_int\fP incx, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfg_work\fP (\fBlapack_int\fP n, double *alpha, double *x, \fBlapack_int\fP incx, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfg_work\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfg_work\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarft_work\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *v, \fBlapack_int\fP ldv, const float *tau, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarft_work\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *v, \fBlapack_int\fP ldv, const double *tau, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarft_work\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarft_work\fP (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarfx_work\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *v, float tau, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarfx_work\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *v, double tau, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarfx_work\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarfx_work\fP (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slarnv_work\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, float *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlarnv_work\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, double *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clarnv_work\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlarnv_work\fP (\fBlapack_int\fP idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slascl_work\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlascl_work\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clascl_work\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlascl_work\fP (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slaset_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, float beta, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlaset_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, double beta, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claset_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, \fBlapack_complex_float\fP beta, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaset_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, \fBlapack_complex_double\fP beta, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slasrt_work\fP (char id, \fBlapack_int\fP n, float *d)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlasrt_work\fP (char id, \fBlapack_int\fP n, double *d)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slassq_work\fP (\fBlapack_int\fP n, float *x, \fBlapack_int\fP incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlassq_work\fP (\fBlapack_int\fP n, double *x, \fBlapack_int\fP incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_classq_work\fP (\fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlassq_work\fP (\fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slaswp_work\fP (int matrix_layout, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlaswp_work\fP (int matrix_layout, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claswp_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaswp_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP incx)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slatms_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, float *d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, float *a, \fBlapack_int\fP lda, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlatms_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, double *d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, double *a, \fBlapack_int\fP lda, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clatms_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, float *d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlatms_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP *iseed, char sym, double *d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slauum_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlauum_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clauum_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlauum_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sopgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, const float *tau, float *q, \fBlapack_int\fP ldq, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dopgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, const double *tau, double *q, \fBlapack_int\fP ldq, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sopmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *ap, const float *tau, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dopmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *ap, const double *tau, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgbr_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgbr_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorghr_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorghr_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorglq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorglq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgql_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgql_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgrq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgrq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormbr_work\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormbr_work\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormhr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormhr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormql_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormql_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormrq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormrq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormrz_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormrz_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sormtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *tau, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dormtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *tau, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *afb, \fBlapack_int\fP ldafb, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *afb, \fBlapack_int\fP ldafb, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbstf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, float *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbstf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, double *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbstf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbstf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP ldbb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float *ab, \fBlapack_int\fP ldab, float *afb, \fBlapack_int\fP ldafb, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double *ab, \fBlapack_int\fP ldab, double *afb, \fBlapack_int\fP ldafb, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP ldafb, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP ldafb, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbtrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbtrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbtrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbtrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spbtrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpbtrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpbtrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpbtrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftrf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftrf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftrf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftrf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftri_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftri_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftri_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftri_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spftrs_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpftrs_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpftrs_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpftrs_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spocon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpocon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpocon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpocon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spoequ_work\fP (int matrix_layout, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpoequ_work\fP (int matrix_layout, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpoequ_work\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpoequ_work\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spoequb_work\fP (int matrix_layout, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpoequb_work\fP (int matrix_layout, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpoequb_work\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpoequb_work\fP (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sporfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dporfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cporfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zporfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sporfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const float *s, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dporfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const double *s, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cporfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zporfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *work, float *swork, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zcposv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP *work, \fBlapack_complex_float\fP *swork, double *rwork, \fBlapack_int\fP *iter)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sposvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dposvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cposvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zposvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrf2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrf2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrf2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrf2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spotrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpotrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpotrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpotrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float *s, float *scond, float *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppequ_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double *s, double *scond, double *amax)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *afp, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *afp, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sppsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, float *afp, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dppsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, double *afp, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cppsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zppsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spstrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float tol, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpstrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double tol, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpstrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float tol, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpstrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double tol, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptcon_work\fP (\fBlapack_int\fP n, const float *d, const float *e, float anorm, float *rcond, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptcon_work\fP (\fBlapack_int\fP n, const double *d, const double *e, double anorm, double *rcond, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptcon_work\fP (\fBlapack_int\fP n, const float *d, const \fBlapack_complex_float\fP *e, float anorm, float *rcond, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptcon_work\fP (\fBlapack_int\fP n, const double *d, const \fBlapack_complex_double\fP *e, double anorm, double *rcond, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptrfs_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, const float *df, const float *ef, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptrfs_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, const double *df, const double *ef, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, const float *df, const \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, const double *df, const \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *d, float *e, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *d, double *e, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *d, \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptsv_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *d, \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sptsvx_work\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, float *df, float *ef, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dptsvx_work\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, double *df, double *ef, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cptsvx_work\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, float *df, \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zptsvx_work\fP (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, double *df, \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spttrf_work\fP (\fBlapack_int\fP n, float *d, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpttrf_work\fP (\fBlapack_int\fP n, double *d, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpttrf_work\fP (\fBlapack_int\fP n, float *d, \fBlapack_complex_float\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpttrf_work\fP (\fBlapack_int\fP n, double *d, \fBlapack_complex_double\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_spttrs_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const float *e, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dpttrs_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const double *e, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cpttrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *d, const \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zpttrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *d, const \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgst_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, const float *bb, \fBlapack_int\fP ldbb, float *x, \fBlapack_int\fP ldx, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgst_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, const double *bb, \fBlapack_int\fP ldbb, double *x, \fBlapack_int\fP ldx, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgv_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *w, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgv_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *w, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgvd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgvd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbgvx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float *ab, \fBlapack_int\fP ldab, float *bb, \fBlapack_int\fP ldbb, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbgvx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double *ab, \fBlapack_int\fP ldab, double *bb, \fBlapack_int\fP ldbb, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbtrd_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *d, float *e, float *q, \fBlapack_int\fP ldq, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbtrd_work\fP (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *d, double *e, double *q, \fBlapack_int\fP ldq, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssfrk_work\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const float *a, \fBlapack_int\fP lda, float beta, float *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsfrk_work\fP (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const double *a, \fBlapack_int\fP lda, double beta, double *c)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspcon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *w, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *w, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float *ap, const float *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double *ap, const double *bp)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspgvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float *ap, float *bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspgvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double *ap, double *bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *afp, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *afp, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsprfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *ap, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *ap, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspsv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sspsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *afp, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dspsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *afp, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cspsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zspsvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, float *d, float *e, float *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, double *d, double *e, double *tau)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *ap, const \fBlapack_int\fP *ipiv, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *ap, const \fBlapack_int\fP *ipiv, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsptrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstebz_work\fP (char range, char order, \fBlapack_int\fP n, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, const float *d, const float *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, float *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstebz_work\fP (char range, char order, \fBlapack_int\fP n, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, const double *d, const double *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, double *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstedc_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstedc_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstedc_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstedc_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstegr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstegr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstegr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstegr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstein_work\fP (int matrix_layout, \fBlapack_int\fP n, const float *d, const float *e, \fBlapack_int\fP m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstein_work\fP (int matrix_layout, \fBlapack_int\fP n, const double *d, const double *e, \fBlapack_int\fP m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstein_work\fP (int matrix_layout, \fBlapack_int\fP n, const float *d, const float *e, \fBlapack_int\fP m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstein_work\fP (int matrix_layout, \fBlapack_int\fP n, const double *d, const double *e, \fBlapack_int\fP m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstemr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstemr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cstemr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zstemr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsteqr_work\fP (int matrix_layout, char compz, \fBlapack_int\fP n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssterf_work\fP (\fBlapack_int\fP n, float *d, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsterf_work\fP (\fBlapack_int\fP n, double *d, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstev_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstev_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, float *d, float *e, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevd_work\fP (int matrix_layout, char jobz, \fBlapack_int\fP n, double *d, double *e, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevr_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sstevx_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float *d, float *e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dstevx_work\fP (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double *d, double *e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssycon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsycon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csycon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsycon_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *s, float *scond, float *amax, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyequb_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *s, double *scond, double *amax, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyev_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevd_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevr_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevr_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevx_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygst_work\fP (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygv_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygvd_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygvx_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyrfs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyrfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyrfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyrfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyrfsx_work\fP (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysvx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, float *b, \fBlapack_int\fP ldb, float *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, double *b, \fBlapack_int\fP ldb, double *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysvxx_work\fP (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *d, float *e, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrd_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *d, double *e, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float *ab, \fBlapack_int\fP ldab, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double *ab, \fBlapack_int\fP ldab, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stbtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float *ab, \fBlapack_int\fP ldab, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtbtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double *ab, \fBlapack_int\fP ldab, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctbtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztbtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfsm_work\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, const float *a, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfsm_work\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, const double *a, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfsm_work\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfsm_work\fP (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stftri_work\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, float *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtftri_work\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, double *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctftri_work\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztftri_work\fP (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfttp_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *arf, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfttp_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *arf, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfttp_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfttp_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stfttr_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *arf, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtfttr_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *arf, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctfttr_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztfttr_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *s, \fBlapack_int\fP lds, const float *p, \fBlapack_int\fP ldp, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *s, \fBlapack_int\fP lds, const double *p, \fBlapack_int\fP ldp, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *s, \fBlapack_int\fP lds, const \fBlapack_complex_float\fP *p, \fBlapack_int\fP ldp, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *s, \fBlapack_int\fP lds, const \fBlapack_complex_double\fP *p, \fBlapack_int\fP ldp, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgexc_work\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgexc_work\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgexc_work\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgexc_work\fP (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsen_work\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP ldq, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsen_work\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP ldq, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsen_work\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsen_work\fP (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsja_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float tola, float tolb, float *alpha, float *beta, float *u, \fBlapack_int\fP ldu, float *v, \fBlapack_int\fP ldv, float *q, \fBlapack_int\fP ldq, float *work, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsja_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double tola, double tolb, double *alpha, double *beta, double *u, \fBlapack_int\fP ldu, double *v, \fBlapack_int\fP ldv, double *q, \fBlapack_int\fP ldq, double *work, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsja_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float tola, float tolb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsja_work\fP (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double tola, double tolb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *ncycle)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, const float *vl, \fBlapack_int\fP ldvl, const float *vr, \fBlapack_int\fP ldvr, float *s, float *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, const double *vl, \fBlapack_int\fP ldvl, const double *vr, \fBlapack_int\fP ldvr, double *s, double *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, float *s, float *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, double *s, double *dif, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stgsyl_work\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, float *c, \fBlapack_int\fP ldc, const float *d, \fBlapack_int\fP ldd, const float *e, \fBlapack_int\fP lde, float *f, \fBlapack_int\fP ldf, float *scale, float *dif, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtgsyl_work\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, double *c, \fBlapack_int\fP ldc, const double *d, \fBlapack_int\fP ldd, const double *e, \fBlapack_int\fP lde, double *f, \fBlapack_int\fP ldf, double *scale, double *dif, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctgsyl_work\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, const \fBlapack_complex_float\fP *d, \fBlapack_int\fP ldd, const \fBlapack_complex_float\fP *e, \fBlapack_int\fP lde, \fBlapack_complex_float\fP *f, \fBlapack_int\fP ldf, float *scale, float *dif, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztgsyl_work\fP (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, const \fBlapack_complex_double\fP *d, \fBlapack_int\fP ldd, const \fBlapack_complex_double\fP *e, \fBlapack_int\fP lde, \fBlapack_complex_double\fP *f, \fBlapack_int\fP ldf, double *scale, double *dif, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float *ap, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double *ap, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stprfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtprfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctprfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztprfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stptri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtptri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctptri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztptri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stptrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *ap, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtptrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *ap, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctptrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztptrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *ap, float *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *ap, double *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpttr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *ap, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpttr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *ap, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpttr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpttr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *rcond, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrcon_work\fP (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *rcond, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strevc_work\fP (int matrix_layout, char side, char howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *t, \fBlapack_int\fP ldt, float *vl, \fBlapack_int\fP ldvl, float *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrevc_work\fP (int matrix_layout, char side, char howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *t, \fBlapack_int\fP ldt, double *vl, \fBlapack_int\fP ldvl, double *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrevc_work\fP (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strexc_work\fP (int matrix_layout, char compq, \fBlapack_int\fP n, float *t, \fBlapack_int\fP ldt, float *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrexc_work\fP (int matrix_layout, char compq, \fBlapack_int\fP n, double *t, \fBlapack_int\fP ldt, double *q, \fBlapack_int\fP ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrexc_work\fP (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrexc_work\fP (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, const float *x, \fBlapack_int\fP ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, const double *x, \fBlapack_int\fP ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrrfs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsen_work\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, float *t, \fBlapack_int\fP ldt, float *q, \fBlapack_int\fP ldq, float *wr, float *wi, \fBlapack_int\fP *m, float *s, float *sep, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsen_work\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, double *t, \fBlapack_int\fP ldt, double *q, \fBlapack_int\fP ldq, double *wr, double *wi, \fBlapack_int\fP *m, double *s, double *sep, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsen_work\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *w, \fBlapack_int\fP *m, float *s, float *sep, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsen_work\fP (int matrix_layout, char job, char compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *w, \fBlapack_int\fP *m, double *s, double *sep, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const float *t, \fBlapack_int\fP ldt, const float *vl, \fBlapack_int\fP ldvl, const float *vr, \fBlapack_int\fP ldvr, float *s, float *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP ldwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const double *t, \fBlapack_int\fP ldt, const double *vl, \fBlapack_int\fP ldvl, const double *vr, \fBlapack_int\fP ldvr, double *s, double *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP ldwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP ldvr, float *s, float *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, \fBlapack_int\fP ldwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsna_work\fP (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP ldvr, double *s, double *sep, \fBlapack_int\fP mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, \fBlapack_int\fP ldwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strsyl_work\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *b, \fBlapack_int\fP ldb, float *c, \fBlapack_int\fP ldc, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrsyl_work\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *b, \fBlapack_int\fP ldb, double *c, \fBlapack_int\fP ldc, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrsyl_work\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, float *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrsyl_work\fP (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, double *scale)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strtri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrtri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrtri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrtri_work\fP (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrtrs_work\fP (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrttf_work\fP (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *arf)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_strttp_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, float *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtrttp_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, double *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctrttp_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztrttp_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *ap)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stzrzf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tau, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtzrzf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tau, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctzrzf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztzrzf_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungbr_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungbr_work\fP (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunghr_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunghr_work\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunglq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunglq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungql_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungql_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungrq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungrq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cungtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zungtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmbr_work\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmbr_work\fP (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmhr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmhr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmql_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmql_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmrq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmrq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmrz_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmrz_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cupgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zupgtr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cupmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zupmtr_work\fP (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_claghe\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlaghe\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slagsy\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlagsy\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clagsy\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlagsy\fP (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *iseed)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slapmr\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlapmr\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clapmr\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlapmr\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slapmt\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlapmt\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_clapmt\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zlapmt\fP (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "float \fBLAPACKE_slapy2\fP (float x, float y)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlapy2\fP (double x, double y)"
.br
.ti -1c
.RI "float \fBLAPACKE_slapy3\fP (float x, float y, float z)"
.br
.ti -1c
.RI "double \fBLAPACKE_dlapy3\fP (double x, double y, double z)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slartgp\fP (float f, float g, float *cs, float *sn, float *r)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlartgp\fP (double f, double g, double *cs, double *sn, double *r)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_slartgs\fP (float x, float y, float sigma, float *cs, float *sn)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dlartgs\fP (double x, double y, double sigma, double *cs, double *sn)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cbbcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *theta, float *phi, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cbbcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *theta, float *phi, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e, float *rwork, \fBlapack_int\fP lrwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyconv\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyconv_work\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunbdb\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP ldx22, float *theta, float *phi, \fBlapack_complex_float\fP *taup1, \fBlapack_complex_float\fP *taup2, \fBlapack_complex_float\fP *tauq1, \fBlapack_complex_float\fP *tauq2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cunbdb_work\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP ldx22, float *theta, float *phi, \fBlapack_complex_float\fP *taup1, \fBlapack_complex_float\fP *taup2, \fBlapack_complex_float\fP *tauq1, \fBlapack_complex_float\fP *tauq2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cuncsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP ldx22, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP ldv2t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cuncsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP ldx22, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP ldv2t, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cuncsd2by1\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cuncsd2by1_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP ldx21, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbbcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *theta, double *phi, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t, double *v2t, \fBlapack_int\fP ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dbbcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *theta, double *phi, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t, double *v2t, \fBlapack_int\fP ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorbdb\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x12, \fBlapack_int\fP ldx12, double *x21, \fBlapack_int\fP ldx21, double *x22, \fBlapack_int\fP ldx22, double *theta, double *phi, double *taup1, double *taup2, double *tauq1, double *tauq2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorbdb_work\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x12, \fBlapack_int\fP ldx12, double *x21, \fBlapack_int\fP ldx21, double *x22, \fBlapack_int\fP ldx22, double *theta, double *phi, double *taup1, double *taup2, double *tauq1, double *tauq2, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x12, \fBlapack_int\fP ldx12, double *x21, \fBlapack_int\fP ldx21, double *x22, \fBlapack_int\fP ldx22, double *theta, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t, double *v2t, \fBlapack_int\fP ldv2t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x12, \fBlapack_int\fP ldx12, double *x21, \fBlapack_int\fP ldx21, double *x22, \fBlapack_int\fP ldx22, double *theta, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t, double *v2t, \fBlapack_int\fP ldv2t, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorcsd2by1\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x21, \fBlapack_int\fP ldx21, double *theta, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dorcsd2by1_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *x11, \fBlapack_int\fP ldx11, double *x21, \fBlapack_int\fP ldx21, double *theta, double *u1, \fBlapack_int\fP ldu1, double *u2, \fBlapack_int\fP ldu2, double *v1t, \fBlapack_int\fP ldv1t, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyconv\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyconv_work\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbbcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *theta, float *phi, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t, float *v2t, \fBlapack_int\fP ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sbbcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *theta, float *phi, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t, float *v2t, \fBlapack_int\fP ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorbdb\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x12, \fBlapack_int\fP ldx12, float *x21, \fBlapack_int\fP ldx21, float *x22, \fBlapack_int\fP ldx22, float *theta, float *phi, float *taup1, float *taup2, float *tauq1, float *tauq2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorbdb_work\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x12, \fBlapack_int\fP ldx12, float *x21, \fBlapack_int\fP ldx21, float *x22, \fBlapack_int\fP ldx22, float *theta, float *phi, float *taup1, float *taup2, float *tauq1, float *tauq2, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x12, \fBlapack_int\fP ldx12, float *x21, \fBlapack_int\fP ldx21, float *x22, \fBlapack_int\fP ldx22, float *theta, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t, float *v2t, \fBlapack_int\fP ldv2t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x12, \fBlapack_int\fP ldx12, float *x21, \fBlapack_int\fP ldx21, float *x22, \fBlapack_int\fP ldx22, float *theta, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t, float *v2t, \fBlapack_int\fP ldv2t, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorcsd2by1\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x21, \fBlapack_int\fP ldx21, float *theta, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sorcsd2by1_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float *x11, \fBlapack_int\fP ldx11, float *x21, \fBlapack_int\fP ldx21, float *theta, float *u1, \fBlapack_int\fP ldu1, float *u2, \fBlapack_int\fP ldu2, float *v1t, \fBlapack_int\fP ldv1t, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyconv\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyconv_work\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zbbcsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *theta, double *phi, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zbbcsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double *theta, double *phi, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e, double *rwork, \fBlapack_int\fP lrwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyconv\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyconv_work\fP (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *e)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyswapr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyswapr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri2x\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri2x_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP nb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs2\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs2_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunbdb\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP ldx22, double *theta, double *phi, \fBlapack_complex_double\fP *taup1, \fBlapack_complex_double\fP *taup2, \fBlapack_complex_double\fP *tauq1, \fBlapack_complex_double\fP *tauq2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zunbdb_work\fP (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP ldx22, double *theta, double *phi, \fBlapack_complex_double\fP *taup1, \fBlapack_complex_double\fP *taup2, \fBlapack_complex_double\fP *tauq1, \fBlapack_complex_double\fP *tauq2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zuncsd\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP ldx22, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP ldv2t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zuncsd_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP ldx22, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP ldv2t, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zuncsd2by1\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zuncsd2by1_work\fP (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP ldx21, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt3\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpmqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpmqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpmqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpmqrt\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpqrt\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpqrt2\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stprfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtprfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctprfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztprfb\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *c, \fBlapack_int\fP ldc, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *c, \fBlapack_int\fP ldc, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqrt3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqrt3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqrt3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqrt3_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpmqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpmqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpmqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpmqrt_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *t, \fBlapack_int\fP ldt, float *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *t, \fBlapack_int\fP ldt, double *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpqrt_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stpqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtpqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctpqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztpqrt2_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_stprfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float *v, \fBlapack_int\fP ldv, const float *t, \fBlapack_int\fP ldt, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dtprfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double *v, \fBlapack_int\fP ldv, const double *t, \fBlapack_int\fP ldt, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ctprfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ztprfb_work\fP (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP ldwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_rook\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyr\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_rook_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csyr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsyr_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda)"
.br
.ti -1c
.RI "void \fBLAPACKE_ilaver\fP (\fBlapack_int\fP *vers_major, \fBlapack_int\fP *vers_minor, \fBlapack_int\fP *vers_patch)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_aa\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_aa_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *e, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *e, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *e, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *e, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_rk\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *e, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *e, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_rk_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetri_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssycon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsycon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csycon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsycon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_checon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhecon_3\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssycon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const float *a, \fBlapack_int\fP lda, const float *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, float *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsycon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const double *a, \fBlapack_int\fP lda, const double *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, double *work, \fBlapack_int\fP *iwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csycon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsycon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_checon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float anorm, float *rcond, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhecon_3_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double anorm, double *rcond, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelq\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgelq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP tsize, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgelq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP tsize, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgelq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgelq_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *t, \fBlapack_int\fP tsize, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *t, \fBlapack_int\fP tsize, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemlq\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *t, \fBlapack_int\fP tsize, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *t, \fBlapack_int\fP tsize, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemlq_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqr\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgeqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *t, \fBlapack_int\fP tsize, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgeqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *t, \fBlapack_int\fP tsize, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgeqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgeqr_work\fP (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *t, \fBlapack_int\fP tsize, float *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *t, \fBlapack_int\fP tsize, double *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemqr\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgemqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float *a, \fBlapack_int\fP lda, const float *t, \fBlapack_int\fP tsize, float *c, \fBlapack_int\fP ldc, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgemqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double *a, \fBlapack_int\fP lda, const double *t, \fBlapack_int\fP tsize, double *c, \fBlapack_int\fP ldc, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgemqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgemqr_work\fP (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetsls\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetsls\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetsls\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetsls\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_sgetsls_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dgetsls_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cgetsls_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zgetsls_work\fP (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevr_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevr_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *w, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *w, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevr_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevr_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssyevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsyevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevr_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevr_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevr_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevr_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_cheevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zheevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssbevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float *ab, \fBlapack_int\fP ldab, float *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP ldz, float *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsbevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double *ab, \fBlapack_int\fP ldab, double *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP ldz, double *work, \fBlapack_int\fP lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbev_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevd_2stage\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevx_2stage\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbev_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevd_2stage_work\fP (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP liwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chbevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhbevx_2stage_work\fP (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygv_2stage\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygv_2stage\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssygv_2stage_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *b, \fBlapack_int\fP ldb, float *w, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsygv_2stage_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *b, \fBlapack_int\fP ldb, double *w, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegv_2stage\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegv_2stage\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chegv_2stage_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork, float *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhegv_2stage_work\fP (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork, double *rwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssysv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP ldb, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsysv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP ldb, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csysv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsysv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chesv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhesv_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrf_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP lwork)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_ssytrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float *a, \fBlapack_int\fP lda, float *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_dsytrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double *a, \fBlapack_int\fP lda, double *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_csytrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zsytrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_chetrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_aa_2stage\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "\fBlapack_int\fP \fBLAPACKE_zhetrs_aa_2stage_work\fP (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetrf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetrf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetrf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetrf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbtrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, float *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbtrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, double *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbtrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbtrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgttrf\fP (\fBlapack_int\fP *n, float *dl, float *d, float *du, float *du2, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgttrf\fP (\fBlapack_int\fP *n, double *dl, double *d, double *du, double *du2, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgttrf\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgttrf\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spotrf2\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpotrf2\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpotrf2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpotrf2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spotrf\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpotrf\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpotrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpotrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpstrf\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double *tol, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spstrf\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float *tol, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpstrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, double *tol, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpstrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *piv, \fBlapack_int\fP *rank, float *tol, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpftrf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spftrf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpftrf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpftrf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spptrf\fP (char *uplo, \fBlapack_int\fP *n, float *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpptrf\fP (char *uplo, \fBlapack_int\fP *n, double *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbtrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbtrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbtrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbtrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spttrf\fP (\fBlapack_int\fP *n, float *d, float *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpttrf\fP (\fBlapack_int\fP *n, double *d, double *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpttrf\fP (\fBlapack_int\fP *n, float *d, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpttrf\fP (\fBlapack_int\fP *n, double *d, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrf\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrf\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssptrf\fP (char *uplo, \fBlapack_int\fP *n, float *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsptrf\fP (char *uplo, \fBlapack_int\fP *n, double *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhptrf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbtrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbtrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbtrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbtrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgttrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgttrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgttrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgttrs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spotrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpotrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpotrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpotrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpftrs\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spftrs\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpftrs\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpftrs\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbtrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbtrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbtrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbtrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spttrs\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const float *e, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpttrs\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const double *e, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpttrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpttrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhptrs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stptrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtptrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctptrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztptrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stbtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtbtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctbtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztbtrs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgecon\fP (char *norm, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgecon\fP (char *norm, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgecon\fP (char *norm, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgecon\fP (char *norm, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbcon\fP (char *norm, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const float *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbcon\fP (char *norm, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const double *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbcon\fP (char *norm, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbcon\fP (char *norm, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgtcon\fP (char *norm, \fBlapack_int\fP *n, const float *dl, const float *d, const float *du, const float *du2, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgtcon\fP (char *norm, \fBlapack_int\fP *n, const double *dl, const double *d, const double *du, const double *du2, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgtcon\fP (char *norm, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgtcon\fP (char *norm, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spocon\fP (char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpocon\fP (char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpocon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpocon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sppcon\fP (char *uplo, \fBlapack_int\fP *n, const float *ap, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dppcon\fP (char *uplo, \fBlapack_int\fP *n, const double *ap, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cppcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zppcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbcon\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const float *ab, \fBlapack_int\fP *ldab, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbcon\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const double *ab, \fBlapack_int\fP *ldab, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbcon\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbcon\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sptcon\fP (\fBlapack_int\fP *n, const float *d, const float *e, float *anorm, float *rcond, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dptcon\fP (\fBlapack_int\fP *n, const double *d, const double *e, double *anorm, double *rcond, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cptcon\fP (\fBlapack_int\fP *n, const float *d, const \fBlapack_complex_float\fP *e, float *anorm, float *rcond, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zptcon\fP (\fBlapack_int\fP *n, const double *d, const \fBlapack_complex_double\fP *e, double *anorm, double *rcond, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssycon\fP (char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsycon\fP (char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csycon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsycon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_checon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhecon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspcon\fP (char *uplo, \fBlapack_int\fP *n, const float *ap, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspcon\fP (char *uplo, \fBlapack_int\fP *n, const double *ap, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cspcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zspcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpcon\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const float *ap, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const double *ap, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stbcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const float *ab, \fBlapack_int\fP *ldab, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtbcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const double *ab, \fBlapack_int\fP *ldab, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctbcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *rcond, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztbcon\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *rcond, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgerfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgerfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgerfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgerfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgerfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgerfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgerfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgerfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, const float *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, const double *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbrfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, const double *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbrfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, const float *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbrfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const double *r, const double *c, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbrfsx\fP (char *trans, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_int\fP *ipiv, const float *r, const float *c, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgtrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *dl, const float *d, const float *du, const float *dlf, const float *df, const float *duf, const float *du2, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgtrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *dl, const double *d, const double *du, const double *dlf, const double *df, const double *duf, const double *du2, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgtrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, const \fBlapack_complex_float\fP *dlf, const \fBlapack_complex_float\fP *df, const \fBlapack_complex_float\fP *duf, const \fBlapack_complex_float\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgtrfs\fP (char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, const \fBlapack_complex_double\fP *dlf, const \fBlapack_complex_double\fP *df, const \fBlapack_complex_double\fP *duf, const \fBlapack_complex_double\fP *du2, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sporfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dporfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cporfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zporfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dporfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const double *s, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sporfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const float *s, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zporfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cporfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, const float *afp, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, const double *afp, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, const float *afb, \fBlapack_int\fP *ldafb, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, const double *afb, \fBlapack_int\fP *ldafb, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sptrfs\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const float *e, const float *df, const float *ef, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dptrfs\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const double *e, const double *df, const double *ef, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cptrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const \fBlapack_complex_float\fP *e, const float *df, const \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zptrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const \fBlapack_complex_double\fP *e, const double *df, const \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyrfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyrfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *s, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyrfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *s, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyrfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyrfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cherfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zherfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zherfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const double *s, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cherfsx\fP (char *uplo, char *equed, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, const \fBlapack_int\fP *ipiv, const float *s, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, const float *afp, const \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, const double *afp, const \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhprfs\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *afp, const \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, const float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, const double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stprfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, const float *b, \fBlapack_int\fP *ldb, const float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtprfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, const double *b, \fBlapack_int\fP *ldb, const double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctprfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztprfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stbrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const float *ab, \fBlapack_int\fP *ldab, const float *b, \fBlapack_int\fP *ldb, const float *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtbrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const double *ab, \fBlapack_int\fP *ldab, const double *b, \fBlapack_int\fP *ldb, const double *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctbrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztbrfs\fP (char *uplo, char *trans, char *diag, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetri\fP (\fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetri\fP (\fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetri\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetri\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spotri\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpotri\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpotri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpotri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpftri\fP (char *transr, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spftri\fP (char *transr, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpftri\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpftri\fP (char *transr, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spptri\fP (char *uplo, \fBlapack_int\fP *n, float *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpptri\fP (char *uplo, \fBlapack_int\fP *n, double *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytri\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytri\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssptri\fP (char *uplo, \fBlapack_int\fP *n, float *ap, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsptri\fP (char *uplo, \fBlapack_int\fP *n, double *ap, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhptri\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strtri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrtri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrtri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrtri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtftri\fP (char *transr, char *uplo, char *diag, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stftri\fP (char *transr, char *uplo, char *diag, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztftri\fP (char *transr, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctftri\fP (char *transr, char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stptri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, float *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtptri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, double *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctptri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztptri\fP (char *uplo, char *diag, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const float *ab, \fBlapack_int\fP *ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const double *ab, \fBlapack_int\fP *ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbequ\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const double *ab, \fBlapack_int\fP *ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const float *ab, \fBlapack_int\fP *ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *r, double *c, double *rowcnd, double *colcnd, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbequb\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *r, float *c, float *rowcnd, float *colcnd, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spoequ\fP (\fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpoequ\fP (\fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpoequ\fP (\fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpoequ\fP (\fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpoequb\fP (\fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spoequb\fP (\fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpoequb\fP (\fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpoequb\fP (\fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sppequ\fP (char *uplo, \fBlapack_int\fP *n, const float *ap, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dppequ\fP (char *uplo, \fBlapack_int\fP *n, const double *ap, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cppequ\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zppequ\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbequ\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const float *ab, \fBlapack_int\fP *ldab, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbequ\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const double *ab, \fBlapack_int\fP *ldab, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbequ\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *s, float *scond, float *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbequ\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, const \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *s, double *scond, double *amax, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyequb\fP (char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyequb\fP (char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyequb\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyequb\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheequb\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, double *scond, double *amax, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheequb\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, float *scond, float *amax, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *work, float *swork, \fBlapack_int\fP *iter, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zcgesv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, \fBlapack_complex_double\fP *work, \fBlapack_complex_float\fP *swork, double *rwork, \fBlapack_int\fP *iter, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, float *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, double *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, float *ab, \fBlapack_int\fP *ldab, float *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, double *ab, \fBlapack_int\fP *ldab, double *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbsvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, double *ab, \fBlapack_int\fP *ldab, double *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbsvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, float *ab, \fBlapack_int\fP *ldab, float *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbsvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, double *r, double *c, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbsvxx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, \fBlapack_int\fP *ipiv, char *equed, float *r, float *c, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgtsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *dl, float *d, float *du, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgtsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *dl, double *d, double *du, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgtsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *dl, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgtsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *dl, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgtsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *dl, const float *d, const float *du, float *dlf, float *df, float *duf, float *du2, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgtsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *dl, const double *d, const double *du, double *dlf, double *df, double *duf, double *du2, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgtsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *dl, const \fBlapack_complex_float\fP *d, const \fBlapack_complex_float\fP *du, \fBlapack_complex_float\fP *dlf, \fBlapack_complex_float\fP *df, \fBlapack_complex_float\fP *duf, \fBlapack_complex_float\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgtsvx\fP (char *fact, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *dl, const \fBlapack_complex_double\fP *d, const \fBlapack_complex_double\fP *du, \fBlapack_complex_double\fP *dlf, \fBlapack_complex_double\fP *df, \fBlapack_complex_double\fP *duf, \fBlapack_complex_double\fP *du2, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *work, float *swork, \fBlapack_int\fP *iter, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zcposv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, \fBlapack_complex_double\fP *work, \fBlapack_complex_float\fP *swork, double *rwork, \fBlapack_int\fP *iter, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sposvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, char *equed, float *s, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dposvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, char *equed, double *s, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cposvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zposvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dposvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, char *equed, double *s, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sposvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, char *equed, float *s, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zposvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cposvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sppsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *ap, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dppsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *ap, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cppsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zppsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sppsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *ap, float *afp, char *equed, float *s, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dppsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *ap, double *afp, char *equed, double *s, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cppsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zppsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, float *ab, \fBlapack_int\fP *ldab, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, double *ab, \fBlapack_int\fP *ldab, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, float *ab, \fBlapack_int\fP *ldab, float *afb, \fBlapack_int\fP *ldafb, char *equed, float *s, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, double *ab, \fBlapack_int\fP *ldab, double *afb, \fBlapack_int\fP *ldafb, char *equed, double *s, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *afb, \fBlapack_int\fP *ldafb, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *afb, \fBlapack_int\fP *ldafb, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sptsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *d, float *e, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dptsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *d, double *e, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cptsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *d, \fBlapack_complex_float\fP *e, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zptsv\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *d, \fBlapack_complex_double\fP *e, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sptsvx\fP (char *fact, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const float *e, float *df, float *ef, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dptsvx\fP (char *fact, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const double *e, double *df, double *ef, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cptsvx\fP (char *fact, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *d, const \fBlapack_complex_float\fP *e, float *df, \fBlapack_complex_float\fP *ef, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zptsvx\fP (char *fact, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *d, const \fBlapack_complex_double\fP *e, double *df, \fBlapack_complex_double\fP *ef, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, double *s, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *rpvgrw, double *berr, \fBlapack_int\fP *n_err_bnds, double *err_bnds_norm, double *err_bnds_comp, \fBlapack_int\fP *nparams, double *params, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesvxx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *af, \fBlapack_int\fP *ldaf, \fBlapack_int\fP *ipiv, char *equed, float *s, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *rpvgrw, float *berr, \fBlapack_int\fP *n_err_bnds, float *err_bnds_norm, float *err_bnds_comp, \fBlapack_int\fP *nparams, float *params, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *ap, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *ap, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cspsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zspsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *ap, float *afp, \fBlapack_int\fP *ipiv, const float *b, \fBlapack_int\fP *ldb, float *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *ap, double *afp, \fBlapack_int\fP *ipiv, const double *b, \fBlapack_int\fP *ldb, double *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cspsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zspsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpsv\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, float *rcond, float *ferr, float *berr, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpsvx\fP (char *fact, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *afp, \fBlapack_int\fP *ipiv, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, double *rcond, double *ferr, double *berr, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqrf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqpf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, float *tau, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqpf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, double *tau, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqpf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqpf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqp3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqp3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqp3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqp3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *jpvt, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorgqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorgqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cungqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zungqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorglq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorglq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunglq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunglq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqlf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqlf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqlf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqlf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorgql\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorgql\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cungql\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zungql\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormql\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormql\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmql\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmql\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgerqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgerqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgerqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgerqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorgrq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorgrq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cungrq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zungrq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormrq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormrq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmrq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmrq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stzrzf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtzrzf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctzrzf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztzrzf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormrz\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormrz\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmrz\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmrz\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggqrf\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, float *a, \fBlapack_int\fP *lda, float *taua, float *b, \fBlapack_int\fP *ldb, float *taub, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggqrf\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, double *a, \fBlapack_int\fP *lda, double *taua, double *b, \fBlapack_int\fP *ldb, double *taub, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggqrf\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *taub, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggqrf\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *taub, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggrqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *taua, float *b, \fBlapack_int\fP *ldb, float *taub, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggrqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *taua, double *b, \fBlapack_int\fP *ldb, double *taub, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggrqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *taua, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *taub, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggrqf\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *taua, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *taub, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgebrd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *d, float *e, float *tauq, float *taup, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgebrd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *d, double *e, double *tauq, double *taup, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgebrd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *d, float *e, \fBlapack_complex_float\fP *tauq, \fBlapack_complex_float\fP *taup, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgebrd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *d, double *e, \fBlapack_complex_double\fP *tauq, \fBlapack_complex_double\fP *taup, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgbbrd\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ncc, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, float *ab, \fBlapack_int\fP *ldab, float *d, float *e, float *q, \fBlapack_int\fP *ldq, float *pt, \fBlapack_int\fP *ldpt, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgbbrd\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ncc, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, double *ab, \fBlapack_int\fP *ldab, double *d, double *e, double *q, \fBlapack_int\fP *ldq, double *pt, \fBlapack_int\fP *ldpt, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgbbrd\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ncc, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *pt, \fBlapack_int\fP *ldpt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgbbrd\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ncc, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *pt, \fBlapack_int\fP *ldpt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorgbr\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorgbr\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormbr\fP (char *vect, char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormbr\fP (char *vect, char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cungbr\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zungbr\fP (char *vect, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmbr\fP (char *vect, char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmbr\fP (char *vect, char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sbdsqr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ncvt, \fBlapack_int\fP *nru, \fBlapack_int\fP *ncc, float *d, float *e, float *vt, \fBlapack_int\fP *ldvt, float *u, \fBlapack_int\fP *ldu, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dbdsqr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ncvt, \fBlapack_int\fP *nru, \fBlapack_int\fP *ncc, double *d, double *e, double *vt, \fBlapack_int\fP *ldvt, double *u, \fBlapack_int\fP *ldu, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cbdsqr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ncvt, \fBlapack_int\fP *nru, \fBlapack_int\fP *ncc, float *d, float *e, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zbdsqr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ncvt, \fBlapack_int\fP *nru, \fBlapack_int\fP *ncc, double *d, double *e, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sbdsdc\fP (char *uplo, char *compq, \fBlapack_int\fP *n, float *d, float *e, float *u, \fBlapack_int\fP *ldu, float *vt, \fBlapack_int\fP *ldvt, float *q, \fBlapack_int\fP *iq, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dbdsdc\fP (char *uplo, char *compq, \fBlapack_int\fP *n, double *d, double *e, double *u, \fBlapack_int\fP *ldu, double *vt, \fBlapack_int\fP *ldvt, double *q, \fBlapack_int\fP *iq, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sbdsvdx\fP (char *uplo, char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, float *s, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dbdsvdx\fP (char *uplo, char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, double *s, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrd\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *d, float *e, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrd\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *d, double *e, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorgtr\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorgtr\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrd\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *d, float *e, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrd\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *d, double *e, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cungtr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zungtr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssptrd\fP (char *uplo, \fBlapack_int\fP *n, float *ap, float *d, float *e, float *tau, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsptrd\fP (char *uplo, \fBlapack_int\fP *n, double *ap, double *d, double *e, double *tau, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sopgtr\fP (char *uplo, \fBlapack_int\fP *n, const float *ap, const float *tau, float *q, \fBlapack_int\fP *ldq, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dopgtr\fP (char *uplo, \fBlapack_int\fP *n, const double *ap, const double *tau, double *q, \fBlapack_int\fP *ldq, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sopmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *ap, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dopmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *ap, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chptrd\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, float *d, float *e, \fBlapack_complex_float\fP *tau, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhptrd\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, double *d, double *e, \fBlapack_complex_double\fP *tau, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cupgtr\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zupgtr\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cupmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zupmtr\fP (char *side, char *uplo, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbtrd\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *d, float *e, float *q, \fBlapack_int\fP *ldq, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbtrd\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *d, double *e, double *q, \fBlapack_int\fP *ldq, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbtrd\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *d, float *e, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbtrd\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *d, double *e, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssterf\fP (\fBlapack_int\fP *n, float *d, float *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsterf\fP (\fBlapack_int\fP *n, double *d, double *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssteqr\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsteqr\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csteqr\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsteqr\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstemr\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstemr\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cstemr\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zstemr\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *nzc, \fBlapack_int\fP *isuppz, \fBlapack_logical\fP *tryrac, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstedc\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstedc\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cstedc\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zstedc\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstegr\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstegr\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cstegr\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zstegr\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spteqr\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpteqr\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpteqr\fP (char *compz, \fBlapack_int\fP *n, float *d, float *e, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpteqr\fP (char *compz, \fBlapack_int\fP *n, double *d, double *e, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstebz\fP (char *range, char *order, \fBlapack_int\fP *n, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, const float *d, const float *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, float *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstebz\fP (char *range, char *order, \fBlapack_int\fP *n, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, const double *d, const double *e, \fBlapack_int\fP *m, \fBlapack_int\fP *nsplit, double *w, \fBlapack_int\fP *iblock, \fBlapack_int\fP *isplit, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstein\fP (\fBlapack_int\fP *n, const float *d, const float *e, \fBlapack_int\fP *m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstein\fP (\fBlapack_int\fP *n, const double *d, const double *e, \fBlapack_int\fP *m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cstein\fP (\fBlapack_int\fP *n, const float *d, const float *e, \fBlapack_int\fP *m, const float *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zstein\fP (\fBlapack_int\fP *n, const double *d, const double *e, \fBlapack_int\fP *m, const double *w, const \fBlapack_int\fP *iblock, const \fBlapack_int\fP *isplit, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifailv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sdisna\fP (char *job, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *d, float *sep, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ddisna\fP (char *job, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *d, double *sep, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssygst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsygst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chegst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhegst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspgst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, float *ap, const float *bp, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspgst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, double *ap, const double *bp, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpgst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, const \fBlapack_complex_float\fP *bp, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpgst\fP (\fBlapack_int\fP *itype, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, const \fBlapack_complex_double\fP *bp, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbgst\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, float *ab, \fBlapack_int\fP *ldab, const float *bb, \fBlapack_int\fP *ldbb, float *x, \fBlapack_int\fP *ldx, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbgst\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, double *ab, \fBlapack_int\fP *ldab, const double *bb, \fBlapack_int\fP *ldbb, double *x, \fBlapack_int\fP *ldx, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbgst\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_float\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbgst\fP (char *vect, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, const \fBlapack_complex_double\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_spbstf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kb, float *bb, \fBlapack_int\fP *ldbb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dpbstf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kb, double *bb, \fBlapack_int\fP *ldbb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cpbstf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kb, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zpbstf\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kb, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgehrd\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgehrd\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgehrd\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgehrd\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorghr\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *a, \fBlapack_int\fP *lda, const float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorghr\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *a, \fBlapack_int\fP *lda, const double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sormhr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const float *a, \fBlapack_int\fP *lda, const float *tau, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dormhr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const double *a, \fBlapack_int\fP *lda, const double *tau, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunghr\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunghr\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunmhr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunmhr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgebal\fP (char *job, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgebal\fP (char *job, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgebal\fP (char *job, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgebal\fP (char *job, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgebak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const float *scale, \fBlapack_int\fP *m, float *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgebak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const double *scale, \fBlapack_int\fP *m, double *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgebak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const float *scale, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgebak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const double *scale, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_shseqr\fP (char *job, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *h, \fBlapack_int\fP *ldh, float *wr, float *wi, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dhseqr\fP (char *job, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *h, \fBlapack_int\fP *ldh, double *wr, double *wi, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chseqr\fP (char *job, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhseqr\fP (char *job, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_shsein\fP (char *job, char *eigsrc, char *initv, \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const float *h, \fBlapack_int\fP *ldh, float *wr, const float *wi, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dhsein\fP (char *job, char *eigsrc, char *initv, \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const double *h, \fBlapack_int\fP *ldh, double *wr, const double *wi, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chsein\fP (char *job, char *eigsrc, char *initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhsein\fP (char *job, char *eigsrc, char *initv, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *ifaill, \fBlapack_int\fP *ifailr, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strevc\fP (char *side, char *howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const float *t, \fBlapack_int\fP *ldt, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrevc\fP (char *side, char *howmny, \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const double *t, \fBlapack_int\fP *ldt, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const float *t, \fBlapack_int\fP *ldt, const float *vl, \fBlapack_int\fP *ldvl, const float *vr, \fBlapack_int\fP *ldvr, float *s, float *sep, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *ldwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const double *t, \fBlapack_int\fP *ldt, const double *vl, \fBlapack_int\fP *ldvl, const double *vr, \fBlapack_int\fP *ldvr, double *s, double *sep, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *ldwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, float *s, float *sep, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *ldwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, double *s, double *sep, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *ldwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strexc\fP (char *compq, \fBlapack_int\fP *n, float *t, \fBlapack_int\fP *ldt, float *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrexc\fP (char *compq, \fBlapack_int\fP *n, double *t, \fBlapack_int\fP *ldt, double *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrexc\fP (char *compq, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrexc\fP (char *compq, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strsen\fP (char *job, char *compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, float *t, \fBlapack_int\fP *ldt, float *q, \fBlapack_int\fP *ldq, float *wr, float *wi, \fBlapack_int\fP *m, float *s, float *sep, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrsen\fP (char *job, char *compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, double *t, \fBlapack_int\fP *ldt, double *q, \fBlapack_int\fP *ldq, double *wr, double *wi, \fBlapack_int\fP *m, double *s, double *sep, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrsen\fP (char *job, char *compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *w, \fBlapack_int\fP *m, float *s, float *sep, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrsen\fP (char *job, char *compq, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *w, \fBlapack_int\fP *m, double *s, double *sep, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strsyl\fP (char *trana, char *tranb, \fBlapack_int\fP *isgn, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, float *c, \fBlapack_int\fP *ldc, float *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrsyl\fP (char *trana, char *tranb, \fBlapack_int\fP *isgn, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, double *c, \fBlapack_int\fP *ldc, double *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrsyl\fP (char *trana, char *tranb, \fBlapack_int\fP *isgn, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, float *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrsyl\fP (char *trana, char *tranb, \fBlapack_int\fP *isgn, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, double *scale, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgghrd\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *q, \fBlapack_int\fP *ldq, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgghrd\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *q, \fBlapack_int\fP *ldq, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgghrd\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgghrd\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgghd3\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *q, \fBlapack_int\fP *ldq, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgghd3\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *q, \fBlapack_int\fP *ldq, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgghd3\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgghd3\fP (char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggbal\fP (char *job, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggbal\fP (char *job, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggbal\fP (char *job, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggbal\fP (char *job, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggbak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const float *lscale, const float *rscale, \fBlapack_int\fP *m, float *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggbak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const double *lscale, const double *rscale, \fBlapack_int\fP *m, double *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggbak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const float *lscale, const float *rscale, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggbak\fP (char *job, char *side, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, const double *lscale, const double *rscale, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_shgeqz\fP (char *job, char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *h, \fBlapack_int\fP *ldh, float *t, \fBlapack_int\fP *ldt, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP *ldq, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dhgeqz\fP (char *job, char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *h, \fBlapack_int\fP *ldh, double *t, \fBlapack_int\fP *ldt, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP *ldq, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chgeqz\fP (char *job, char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_float\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhgeqz\fP (char *job, char *compq, char *compz, \fBlapack_int\fP *n, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, \fBlapack_complex_double\fP *h, \fBlapack_int\fP *ldh, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const float *s, \fBlapack_int\fP *lds, const float *p, \fBlapack_int\fP *ldp, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const double *s, \fBlapack_int\fP *lds, const double *p, \fBlapack_int\fP *ldp, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *s, \fBlapack_int\fP *lds, const \fBlapack_complex_float\fP *p, \fBlapack_int\fP *ldp, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgevc\fP (char *side, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *s, \fBlapack_int\fP *lds, const \fBlapack_complex_double\fP *p, \fBlapack_int\fP *ldp, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgexc\fP (\fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *q, \fBlapack_int\fP *ldq, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgexc\fP (\fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *q, \fBlapack_int\fP *ldq, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgexc\fP (\fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgexc\fP (\fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *ifst, \fBlapack_int\fP *ilst, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgsen\fP (\fBlapack_int\fP *ijob, \fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alphar, float *alphai, float *beta, float *q, \fBlapack_int\fP *ldq, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgsen\fP (\fBlapack_int\fP *ijob, \fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alphar, double *alphai, double *beta, double *q, \fBlapack_int\fP *ldq, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgsen\fP (\fBlapack_int\fP *ijob, \fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *m, float *pl, float *pr, float *dif, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgsen\fP (\fBlapack_int\fP *ijob, \fBlapack_logical\fP *wantq, \fBlapack_logical\fP *wantz, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *m, double *pl, double *pr, double *dif, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgsyl\fP (char *trans, \fBlapack_int\fP *ijob, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, float *c, \fBlapack_int\fP *ldc, const float *d, \fBlapack_int\fP *ldd, const float *e, \fBlapack_int\fP *lde, float *f, \fBlapack_int\fP *ldf, float *scale, float *dif, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgsyl\fP (char *trans, \fBlapack_int\fP *ijob, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, double *c, \fBlapack_int\fP *ldc, const double *d, \fBlapack_int\fP *ldd, const double *e, \fBlapack_int\fP *lde, double *f, \fBlapack_int\fP *ldf, double *scale, double *dif, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgsyl\fP (char *trans, \fBlapack_int\fP *ijob, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, const \fBlapack_complex_float\fP *d, \fBlapack_int\fP *ldd, const \fBlapack_complex_float\fP *e, \fBlapack_int\fP *lde, \fBlapack_complex_float\fP *f, \fBlapack_int\fP *ldf, float *scale, float *dif, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgsyl\fP (char *trans, \fBlapack_int\fP *ijob, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, const \fBlapack_complex_double\fP *d, \fBlapack_int\fP *ldd, const \fBlapack_complex_double\fP *e, \fBlapack_int\fP *lde, \fBlapack_complex_double\fP *f, \fBlapack_int\fP *ldf, double *scale, double *dif, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, const float *vl, \fBlapack_int\fP *ldvl, const float *vr, \fBlapack_int\fP *ldvr, float *s, float *dif, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, const double *vl, \fBlapack_int\fP *ldvl, const double *vr, \fBlapack_int\fP *ldvr, double *s, double *dif, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, const \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, float *s, float *dif, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgsna\fP (char *job, char *howmny, const \fBlapack_logical\fP *select, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, const \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, const \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, double *s, double *dif, \fBlapack_int\fP *mm, \fBlapack_int\fP *m, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggsvp\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, float *tau, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggsvp\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, double *tau, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggsvp\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, float *rwork, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggsvp\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, double *rwork, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggsvp3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggsvp3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggsvp3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, float *rwork, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggsvp3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_int\fP *iwork, double *rwork, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stgsja\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, float *alpha, float *beta, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *q, \fBlapack_int\fP *ldq, float *work, \fBlapack_int\fP *ncycle, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtgsja\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, double *alpha, double *beta, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *q, \fBlapack_int\fP *ldq, double *work, \fBlapack_int\fP *ncycle, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctgsja\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *tola, float *tolb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *ncycle, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztgsja\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *tola, double *tolb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *ncycle, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgels\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgels\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgels\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgels\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelsy\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *jpvt, float *rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelsy\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *jpvt, double *rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelsy\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *jpvt, float *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelsy\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *jpvt, double *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelss\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *s, float *rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelss\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *s, double *rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelss\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *s, float *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelss\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *s, double *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelsd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *s, float *rcond, \fBlapack_int\fP *rank, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelsd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *s, double *rcond, \fBlapack_int\fP *rank, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelsd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *s, float *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelsd\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *s, double *rcond, \fBlapack_int\fP *rank, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgglse\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *c, float *d, float *x, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgglse\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *c, double *d, double *x, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgglse\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *c, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgglse\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *c, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggglm\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *d, float *x, float *y, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggglm\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *d, double *x, double *y, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggglm\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *d, \fBlapack_complex_float\fP *x, \fBlapack_complex_float\fP *y, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggglm\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *d, \fBlapack_complex_double\fP *x, \fBlapack_complex_double\fP *y, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevr\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevr\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevr\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevr\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *ap, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *ap, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *ap, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *ap, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *ap, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *ap, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbev\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbevd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbevx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstev\fP (char *jobz, \fBlapack_int\fP *n, float *d, float *e, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstev\fP (char *jobz, \fBlapack_int\fP *n, double *d, double *e, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstevd\fP (char *jobz, \fBlapack_int\fP *n, float *d, float *e, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstevd\fP (char *jobz, \fBlapack_int\fP *n, double *d, double *e, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstevx\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstevx\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sstevr\fP (char *jobz, char *range, \fBlapack_int\fP *n, float *d, float *e, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dstevr\fP (char *jobz, char *range, \fBlapack_int\fP *n, double *d, double *e, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgees\fP (char *jobvs, char *sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP *ldvs, float *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgees\fP (char *jobvs, char *sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP *ldvs, double *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgees\fP (char *jobvs, char *sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP *ldvs, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgees\fP (char *jobvs, char *sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP *ldvs, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeesx\fP (char *jobvs, char *sort, \fBLAPACK_S_SELECT2\fP select, char *sense, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, float *wr, float *wi, float *vs, \fBlapack_int\fP *ldvs, float *rconde, float *rcondv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeesx\fP (char *jobvs, char *sort, \fBLAPACK_D_SELECT2\fP select, char *sense, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, double *wr, double *wi, double *vs, \fBlapack_int\fP *ldvs, double *rconde, double *rcondv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeesx\fP (char *jobvs, char *sort, \fBLAPACK_C_SELECT1\fP select, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vs, \fBlapack_int\fP *ldvs, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeesx\fP (char *jobvs, char *sort, \fBLAPACK_Z_SELECT1\fP select, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vs, \fBlapack_int\fP *ldvs, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *wr, float *wi, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *wr, double *wi, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *wr, float *wi, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *wr, double *wi, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *w, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *scale, float *abnrm, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *w, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *scale, double *abnrm, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesvd\fP (char *jobu, char *jobvt, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *s, float *u, \fBlapack_int\fP *ldu, float *vt, \fBlapack_int\fP *ldvt, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesvd\fP (char *jobu, char *jobvt, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *s, double *u, \fBlapack_int\fP *ldu, double *vt, \fBlapack_int\fP *ldvt, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesvd\fP (char *jobu, char *jobvt, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesvd\fP (char *jobu, char *jobvt, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesvdx\fP (char *jobu, char *jobvt, char *range, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, float *s, float *u, \fBlapack_int\fP *ldu, float *vt, \fBlapack_int\fP *ldvt, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesvdx\fP (char *jobu, char *jobvt, char *range, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, double *s, double *u, \fBlapack_int\fP *ldu, double *vt, \fBlapack_int\fP *ldvt, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesvdx\fP (char *jobu, char *jobvt, char *range, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesvdx\fP (char *jobu, char *jobvt, char *range, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, \fBlapack_int\fP *ns, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesdd\fP (char *jobz, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *s, float *u, \fBlapack_int\fP *ldu, float *vt, \fBlapack_int\fP *ldvt, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesdd\fP (char *jobz, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *s, double *u, \fBlapack_int\fP *ldu, double *vt, \fBlapack_int\fP *ldvt, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesdd\fP (char *jobz, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *s, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesdd\fP (char *jobz, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *s, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *vt, \fBlapack_int\fP *ldvt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgejsv\fP (char *joba, char *jobu, char *jobv, char *jobr, char *jobt, char *jobp, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *sva, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgejsv\fP (char *joba, char *jobu, char *jobv, char *jobr, char *jobt, char *jobp, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *sva, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgejsv\fP (char *joba, char *jobu, char *jobv, char *jobr, char *jobt, char *jobp, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *sva, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *cwork, \fBlapack_int\fP *lwork, float *work, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgejsv\fP (char *joba, char *jobu, char *jobv, char *jobr, char *jobt, char *jobp, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *sva, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *cwork, \fBlapack_int\fP *lwork, double *work, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgesvj\fP (char *joba, char *jobu, char *jobv, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *sva, \fBlapack_int\fP *mv, double *v, \fBlapack_int\fP *ldv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgesvj\fP (char *joba, char *jobu, char *jobv, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *sva, \fBlapack_int\fP *mv, float *v, \fBlapack_int\fP *ldv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgesvj\fP (char *joba, char *jobu, char *jobv, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *sva, \fBlapack_int\fP *mv, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *cwork, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgesvj\fP (char *joba, char *jobu, char *jobv, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *sva, \fBlapack_int\fP *mv, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *cwork, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggsvd\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *q, \fBlapack_int\fP *ldq, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggsvd\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *q, \fBlapack_int\fP *ldq, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggsvd\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggsvd\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggsvd3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alpha, float *beta, float *u, \fBlapack_int\fP *ldu, float *v, \fBlapack_int\fP *ldv, float *q, \fBlapack_int\fP *ldq, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggsvd3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alpha, double *beta, double *u, \fBlapack_int\fP *ldu, double *v, \fBlapack_int\fP *ldv, double *q, \fBlapack_int\fP *ldq, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggsvd3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *alpha, float *beta, \fBlapack_complex_float\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggsvd3\fP (char *jobu, char *jobv, char *jobq, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *p, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *alpha, double *beta, \fBlapack_complex_double\fP *u, \fBlapack_int\fP *ldu, \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssygv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsygv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chegv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhegv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssygvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsygvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chegvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhegvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssygvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsygvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chegvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhegvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspgv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspgv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpgv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpgv\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspgvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, float *ap, float *bp, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspgvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, double *ap, double *bp, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpgvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpgvd\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sspgvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *ap, float *bp, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dspgvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *ap, double *bp, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chpgvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *bp, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhpgvx\fP (\fBlapack_int\fP *itype, char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *bp, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbgv\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, float *ab, \fBlapack_int\fP *ldab, float *bb, \fBlapack_int\fP *ldbb, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbgv\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, double *ab, \fBlapack_int\fP *ldab, double *bb, \fBlapack_int\fP *ldbb, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbgv\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP *ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbgv\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP *ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbgvd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, float *ab, \fBlapack_int\fP *ldab, float *bb, \fBlapack_int\fP *ldbb, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbgvd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, double *ab, \fBlapack_int\fP *ldab, double *bb, \fBlapack_int\fP *ldbb, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbgvd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP *ldbb, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbgvd\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP *ldbb, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbgvx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, float *ab, \fBlapack_int\fP *ldab, float *bb, \fBlapack_int\fP *ldbb, float *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbgvx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, double *ab, \fBlapack_int\fP *ldab, double *bb, \fBlapack_int\fP *ldbb, double *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbgvx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbgvx\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *ka, \fBlapack_int\fP *kb, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *bb, \fBlapack_int\fP *ldbb, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgges\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP *ldvsl, float *vsr, \fBlapack_int\fP *ldvsr, float *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgges\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP *ldvsl, double *vsr, \fBlapack_int\fP *ldvsr, double *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgges\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP *ldvsr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgges\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP *ldvsr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgges3\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP *ldvsl, float *vsr, \fBlapack_int\fP *ldvsr, float *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgges3\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP *ldvsl, double *vsr, \fBlapack_int\fP *ldvsr, double *work, \fBlapack_int\fP *lwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgges3\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP *ldvsr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgges3\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP *ldvsr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggesx\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_S_SELECT3\fP selctg, char *sense, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, float *alphar, float *alphai, float *beta, float *vsl, \fBlapack_int\fP *ldvsl, float *vsr, \fBlapack_int\fP *ldvsr, float *rconde, float *rcondv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggesx\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_D_SELECT3\fP selctg, char *sense, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, double *alphar, double *alphai, double *beta, double *vsl, \fBlapack_int\fP *ldvsl, double *vsr, \fBlapack_int\fP *ldvsr, double *rconde, double *rcondv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggesx\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_C_SELECT2\fP selctg, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_float\fP *vsr, \fBlapack_int\fP *ldvsr, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggesx\fP (char *jobvsl, char *jobvsr, char *sort, \fBLAPACK_Z_SELECT2\fP selctg, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *sdim, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vsl, \fBlapack_int\fP *ldvsl, \fBlapack_complex_double\fP *vsr, \fBlapack_int\fP *ldvsr, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggev\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggev3\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggev3\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggev3\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggev3\fP (char *jobvl, char *jobvr, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sggevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *alphar, float *alphai, float *beta, float *vl, \fBlapack_int\fP *ldvl, float *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dggevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *alphar, double *alphai, double *beta, double *vl, \fBlapack_int\fP *ldvl, double *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cggevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_float\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zggevx\fP (char *balanc, char *jobvl, char *jobvr, char *sense, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *vl, \fBlapack_int\fP *ldvl, \fBlapack_complex_double\fP *vr, \fBlapack_int\fP *ldvr, \fBlapack_int\fP *ilo, \fBlapack_int\fP *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_logical\fP *bwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsfrk\fP (char *transr, char *uplo, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *alpha, const double *a, \fBlapack_int\fP *lda, double *beta, double *c)"
.br
.ti -1c
.RI "void \fBLAPACK_ssfrk\fP (char *transr, char *uplo, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *alpha, const float *a, \fBlapack_int\fP *lda, float *beta, float *c)"
.br
.ti -1c
.RI "void \fBLAPACK_zhfrk\fP (char *transr, char *uplo, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *k, double *alpha, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *beta, \fBlapack_complex_double\fP *c)"
.br
.ti -1c
.RI "void \fBLAPACK_chfrk\fP (char *transr, char *uplo, char *trans, \fBlapack_int\fP *n, \fBlapack_int\fP *k, float *alpha, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *beta, \fBlapack_complex_float\fP *c)"
.br
.ti -1c
.RI "void \fBLAPACK_dtfsm\fP (char *transr, char *side, char *uplo, char *trans, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *alpha, const double *a, double *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_stfsm\fP (char *transr, char *side, char *uplo, char *trans, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *alpha, const float *a, float *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_ztfsm\fP (char *transr, char *side, char *uplo, char *trans, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *alpha, const \fBlapack_complex_double\fP *a, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_ctfsm\fP (char *transr, char *side, char *uplo, char *trans, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *alpha, const \fBlapack_complex_float\fP *a, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_dtfttp\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const double *arf, double *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stfttp\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const float *arf, float *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztfttp\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctfttp\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtfttr\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const double *arf, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stfttr\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const float *arf, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztfttr\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *arf, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctfttr\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *arf, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const double *ap, double *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const float *ap, float *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpttr\fP (char *uplo, \fBlapack_int\fP *n, const double *ap, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpttr\fP (char *uplo, \fBlapack_int\fP *n, const float *ap, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpttr\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *ap, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpttr\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *ap, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrttf\fP (char *transr, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *arf, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtrttp\fP (char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_strttp\fP (char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztrttp\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctrttp\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *ap, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqrfp\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqrfp\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqrfp\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqrfp\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clacgv\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "void \fBLAPACK_zlacgv\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "void \fBLAPACK_slarnv\fP (\fBlapack_int\fP *idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP *n, float *x)"
.br
.ti -1c
.RI "void \fBLAPACK_dlarnv\fP (\fBlapack_int\fP *idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP *n, double *x)"
.br
.ti -1c
.RI "void \fBLAPACK_clarnv\fP (\fBlapack_int\fP *idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *x)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarnv\fP (\fBlapack_int\fP *idist, \fBlapack_int\fP *iseed, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *x)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqr2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqr2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqr2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqr2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slacn2\fP (\fBlapack_int\fP *n, float *v, float *x, \fBlapack_int\fP *isgn, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "void \fBLAPACK_dlacn2\fP (\fBlapack_int\fP *n, double *v, double *x, \fBlapack_int\fP *isgn, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "void \fBLAPACK_clacn2\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP *x, float *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "void \fBLAPACK_zlacn2\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP *x, double *est, \fBlapack_int\fP *kase, \fBlapack_int\fP *isave)"
.br
.ti -1c
.RI "void \fBLAPACK_slacpy\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_dlacpy\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_clacpy\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_zlacpy\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_clacp2\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_zlacp2\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetf2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slaswp\fP (\fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *k1, \fBlapack_int\fP *k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "void \fBLAPACK_dlaswp\fP (\fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *k1, \fBlapack_int\fP *k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "void \fBLAPACK_claswp\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *k1, \fBlapack_int\fP *k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "void \fBLAPACK_zlaswp\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *k1, \fBlapack_int\fP *k2, const \fBlapack_int\fP *ipiv, \fBlapack_int\fP *incx)"
.br
.ti -1c
.RI "float \fBLAPACK_slange\fP (char *norm, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_dlange\fP (char *norm, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_clange\fP (char *norm, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_zlange\fP (char *norm, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_clanhe\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_zlanhe\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "void \fBLAPACK_clarcm\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, float *work)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarcm\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, double *work)"
.br
.ti -1c
.RI "void \fBLAPACK_clacrm\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const float *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, float *work)"
.br
.ti -1c
.RI "void \fBLAPACK_zlacrm\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const double *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_slansy\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_dlansy\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_clansy\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_zlansy\fP (char *norm, char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_slantr\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_dlantr\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_clantr\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *work)"
.br
.ti -1c
.RI "double \fBLAPACK_zlantr\fP (char *norm, char *uplo, char *diag, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *work)"
.br
.ti -1c
.RI "float \fBLAPACK_slamch\fP (char *cmach)"
.br
.ti -1c
.RI "double \fBLAPACK_dlamch\fP (char *cmach)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelq2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tau, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelq2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tau, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelq2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelq2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slarfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *v, \fBlapack_int\fP *ldv, const float *t, \fBlapack_int\fP *ldt, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_dlarfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *v, \fBlapack_int\fP *ldv, const double *t, \fBlapack_int\fP *ldt, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_clarfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_slarfg\fP (\fBlapack_int\fP *n, float *alpha, float *x, \fBlapack_int\fP *incx, float *tau)"
.br
.ti -1c
.RI "void \fBLAPACK_dlarfg\fP (\fBlapack_int\fP *n, double *alpha, double *x, \fBlapack_int\fP *incx, double *tau)"
.br
.ti -1c
.RI "void \fBLAPACK_clarfg\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *incx, \fBlapack_complex_float\fP *tau)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarfg\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *incx, \fBlapack_complex_double\fP *tau)"
.br
.ti -1c
.RI "void \fBLAPACK_slassq\fP (\fBlapack_int\fP *n, float *x, \fBlapack_int\fP *incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "void \fBLAPACK_dlassq\fP (\fBlapack_int\fP *n, double *x, \fBlapack_int\fP *incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "void \fBLAPACK_classq\fP (\fBlapack_int\fP *n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *incx, float *scale, float *sumsq)"
.br
.ti -1c
.RI "void \fBLAPACK_zlassq\fP (\fBlapack_int\fP *n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *incx, double *scale, double *sumsq)"
.br
.ti -1c
.RI "void \fBLAPACK_slarft\fP (char *direct, char *storev, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *v, \fBlapack_int\fP *ldv, const float *tau, float *t, \fBlapack_int\fP *ldt)"
.br
.ti -1c
.RI "void \fBLAPACK_dlarft\fP (char *direct, char *storev, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *v, \fBlapack_int\fP *ldv, const double *tau, double *t, \fBlapack_int\fP *ldt)"
.br
.ti -1c
.RI "void \fBLAPACK_clarft\fP (char *direct, char *storev, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarft\fP (char *direct, char *storev, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt)"
.br
.ti -1c
.RI "void \fBLAPACK_slarfx\fP (char *side, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *v, float *tau, float *c, \fBlapack_int\fP *ldc, float *work)"
.br
.ti -1c
.RI "void \fBLAPACK_dlarfx\fP (char *side, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *v, double *tau, double *c, \fBlapack_int\fP *ldc, double *work)"
.br
.ti -1c
.RI "void \fBLAPACK_clarfx\fP (char *side, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *v, \fBlapack_complex_float\fP *tau, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work)"
.br
.ti -1c
.RI "void \fBLAPACK_zlarfx\fP (char *side, \fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *v, \fBlapack_complex_double\fP *tau, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work)"
.br
.ti -1c
.RI "void \fBLAPACK_slatms\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, char *dist, \fBlapack_int\fP *iseed, char *sym, float *d, \fBlapack_int\fP *mode, float *cond, float *dmax, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, char *pack, float *a, \fBlapack_int\fP *lda, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlatms\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, char *dist, \fBlapack_int\fP *iseed, char *sym, double *d, \fBlapack_int\fP *mode, double *cond, double *dmax, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, char *pack, double *a, \fBlapack_int\fP *lda, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clatms\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, char *dist, \fBlapack_int\fP *iseed, char *sym, float *d, \fBlapack_int\fP *mode, float *cond, float *dmax, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, char *pack, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlatms\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, char *dist, \fBlapack_int\fP *iseed, char *sym, double *d, \fBlapack_int\fP *mode, double *cond, double *dmax, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, char *pack, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slag2d\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const float *sa, \fBlapack_int\fP *ldsa, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlag2s\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, float *sa, \fBlapack_int\fP *ldsa, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clag2z\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *sa, \fBlapack_int\fP *ldsa, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlag2c\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *sa, \fBlapack_int\fP *ldsa, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slauum\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlauum\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clauum\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlauum\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slagge\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const float *d, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlagge\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const double *d, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clagge\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlagge\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slascl\fP (char *type, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, float *cfrom, float *cto, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlascl\fP (char *type, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, double *cfrom, double *cto, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clascl\fP (char *type, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, float *cfrom, float *cto, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlascl\fP (char *type, \fBlapack_int\fP *kl, \fBlapack_int\fP *ku, double *cfrom, double *cto, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slaset\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *alpha, float *beta, float *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_dlaset\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *alpha, double *beta, double *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_claset\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *alpha, \fBlapack_complex_float\fP *beta, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_zlaset\fP (char *uplo, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *alpha, \fBlapack_complex_double\fP *beta, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_slasrt\fP (char *id, \fBlapack_int\fP *n, float *d, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlasrt\fP (char *id, \fBlapack_int\fP *n, double *d, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_claghe\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlaghe\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slagsy\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *d, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dlagsy\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *d, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_clagsy\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *d, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zlagsy\fP (\fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *d, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *iseed, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_slapmr\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_dlapmr\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_clapmr\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_zlapmr\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_slapmt\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, float *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_dlapmt\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, double *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_clapmt\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "void \fBLAPACK_zlapmt\fP (\fBlapack_logical\fP *forwrd, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *x, \fBlapack_int\fP *ldx, \fBlapack_int\fP *k)"
.br
.ti -1c
.RI "float \fBLAPACK_slapy2\fP (float *x, float *y)"
.br
.ti -1c
.RI "double \fBLAPACK_dlapy2\fP (double *x, double *y)"
.br
.ti -1c
.RI "float \fBLAPACK_slapy3\fP (float *x, float *y, float *z)"
.br
.ti -1c
.RI "double \fBLAPACK_dlapy3\fP (double *x, double *y, double *z)"
.br
.ti -1c
.RI "void \fBLAPACK_slartgp\fP (float *f, float *g, float *cs, float *sn, float *r)"
.br
.ti -1c
.RI "void \fBLAPACK_dlartgp\fP (double *f, double *g, double *cs, double *sn, double *r)"
.br
.ti -1c
.RI "void \fBLAPACK_slartgs\fP (float *x, float *y, float *sigma, float *cs, float *sn)"
.br
.ti -1c
.RI "void \fBLAPACK_dlartgs\fP (double *x, double *y, double *sigma, double *cs, double *sn)"
.br
.ti -1c
.RI "void \fBLAPACK_cbbcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, float *theta, float *phi, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP *ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheswapr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_chetri2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetri2x\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyconv\fP (char *uplo, char *way, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyswapr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_csytri2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytri2x\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cunbdb\fP (char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP *ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP *ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP *ldx22, float *theta, float *phi, \fBlapack_complex_float\fP *taup1, \fBlapack_complex_float\fP *taup2, \fBlapack_complex_float\fP *tauq1, \fBlapack_complex_float\fP *tauq2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cuncsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_float\fP *x12, \fBlapack_int\fP *ldx12, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP *ldx21, \fBlapack_complex_float\fP *x22, \fBlapack_int\fP *ldx22, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_float\fP *v2t, \fBlapack_int\fP *ldv2t, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cuncsd2by1\fP (char *jobu1, char *jobu2, char *jobv1t, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_float\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_float\fP *x21, \fBlapack_int\fP *ldx21, float *theta, \fBlapack_complex_float\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_float\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_float\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dbbcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, double *theta, double *phi, double *u1, \fBlapack_int\fP *ldu1, double *u2, \fBlapack_int\fP *ldu2, double *v1t, \fBlapack_int\fP *ldv1t, double *v2t, \fBlapack_int\fP *ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorbdb\fP (char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, double *x11, \fBlapack_int\fP *ldx11, double *x12, \fBlapack_int\fP *ldx12, double *x21, \fBlapack_int\fP *ldx21, double *x22, \fBlapack_int\fP *ldx22, double *theta, double *phi, double *taup1, double *taup2, double *tauq1, double *tauq2, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, double *x11, \fBlapack_int\fP *ldx11, double *x12, \fBlapack_int\fP *ldx12, double *x21, \fBlapack_int\fP *ldx21, double *x22, \fBlapack_int\fP *ldx22, double *theta, double *u1, \fBlapack_int\fP *ldu1, double *u2, \fBlapack_int\fP *ldu2, double *v1t, \fBlapack_int\fP *ldv1t, double *v2t, \fBlapack_int\fP *ldv2t, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dorcsd2by1\fP (char *jobu1, char *jobu2, char *jobv1t, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, double *x11, \fBlapack_int\fP *ldx11, double *x21, \fBlapack_int\fP *ldx21, double *theta, double *u1, \fBlapack_int\fP *ldu1, double *u2, \fBlapack_int\fP *ldu2, double *v1t, \fBlapack_int\fP *ldv1t, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyconv\fP (char *uplo, char *way, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyswapr\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytri2\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytri2x\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sbbcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, float *theta, float *phi, float *u1, \fBlapack_int\fP *ldu1, float *u2, \fBlapack_int\fP *ldu2, float *v1t, \fBlapack_int\fP *ldv1t, float *v2t, \fBlapack_int\fP *ldv2t, float *b11d, float *b11e, float *b12d, float *b12e, float *b21d, float *b21e, float *b22d, float *b22e, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorbdb\fP (char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, float *x11, \fBlapack_int\fP *ldx11, float *x12, \fBlapack_int\fP *ldx12, float *x21, \fBlapack_int\fP *ldx21, float *x22, \fBlapack_int\fP *ldx22, float *theta, float *phi, float *taup1, float *taup2, float *tauq1, float *tauq2, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, float *x11, \fBlapack_int\fP *ldx11, float *x12, \fBlapack_int\fP *ldx12, float *x21, \fBlapack_int\fP *ldx21, float *x22, \fBlapack_int\fP *ldx22, float *theta, float *u1, \fBlapack_int\fP *ldu1, float *u2, \fBlapack_int\fP *ldu2, float *v1t, \fBlapack_int\fP *ldv1t, float *v2t, \fBlapack_int\fP *ldv2t, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sorcsd2by1\fP (char *jobu1, char *jobu2, char *jobv1t, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, float *x11, \fBlapack_int\fP *ldx11, float *x21, \fBlapack_int\fP *ldx21, float *theta, float *u1, \fBlapack_int\fP *ldu1, float *u2, \fBlapack_int\fP *ldu2, float *v1t, \fBlapack_int\fP *ldv1t, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyconv\fP (char *uplo, char *way, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyswapr\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytri2\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytri2x\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zbbcsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, double *theta, double *phi, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP *ldv2t, double *b11d, double *b11e, double *b12d, double *b12e, double *b21d, double *b21e, double *b22d, double *b22e, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheswapr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetri2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetri2x\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyconv\fP (char *uplo, char *way, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyswapr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *i1, \fBlapack_int\fP *i2)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytri2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytri2x\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *nb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs2\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zunbdb\fP (char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP *ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP *ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP *ldx22, double *theta, double *phi, \fBlapack_complex_double\fP *taup1, \fBlapack_complex_double\fP *taup2, \fBlapack_complex_double\fP *tauq1, \fBlapack_complex_double\fP *tauq2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zuncsd\fP (char *jobu1, char *jobu2, char *jobv1t, char *jobv2t, char *trans, char *signs, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_double\fP *x12, \fBlapack_int\fP *ldx12, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP *ldx21, \fBlapack_complex_double\fP *x22, \fBlapack_int\fP *ldx22, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_double\fP *v2t, \fBlapack_int\fP *ldv2t, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zuncsd2by1\fP (char *jobu1, char *jobu2, char *jobv1t, \fBlapack_int\fP *m, \fBlapack_int\fP *p, \fBlapack_int\fP *q, \fBlapack_complex_double\fP *x11, \fBlapack_int\fP *ldx11, \fBlapack_complex_double\fP *x21, \fBlapack_int\fP *ldx21, double *theta, \fBlapack_complex_double\fP *u1, \fBlapack_int\fP *ldu1, \fBlapack_complex_double\fP *u2, \fBlapack_int\fP *ldu2, \fBlapack_complex_double\fP *v1t, \fBlapack_int\fP *ldv1t, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgemqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *nb, const float *v, \fBlapack_int\fP *ldv, const float *t, \fBlapack_int\fP *ldt, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgemqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *nb, const double *v, \fBlapack_int\fP *ldv, const double *t, \fBlapack_int\fP *ldt, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgemqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgemqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nb, float *a, \fBlapack_int\fP *lda, float *t, \fBlapack_int\fP *ldt, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nb, double *a, \fBlapack_int\fP *lda, double *t, \fBlapack_int\fP *ldt, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqrt3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqrt3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqrt3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqrt3\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpmqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, const float *v, \fBlapack_int\fP *ldv, const float *t, \fBlapack_int\fP *ldt, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpmqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, const double *v, \fBlapack_int\fP *ldv, const double *t, \fBlapack_int\fP *ldt, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpmqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpmqrt\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *t, \fBlapack_int\fP *ldt, float *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *t, \fBlapack_int\fP *ldt, double *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpqrt\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_int\fP *nb, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stpqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dtpqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ctpqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ztpqrt2\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *l, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_stprfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const float *v, \fBlapack_int\fP *ldv, const float *t, \fBlapack_int\fP *ldt, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, const float *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_dtprfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const double *v, \fBlapack_int\fP *ldv, const double *t, \fBlapack_int\fP *ldt, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, const double *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_ctprfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const \fBlapack_complex_float\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_ztprfb\fP (char *side, char *trans, char *direct, char *storev, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, \fBlapack_int\fP *l, const \fBlapack_complex_double\fP *v, \fBlapack_int\fP *ldv, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *ldt, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *ldwork)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysv_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrf_rook\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysv_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrf_rook\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysv_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrf_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysv_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrf_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrf_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrf_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs_rook\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csyr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *alpha, const \fBlapack_complex_float\fP *x, \fBlapack_int\fP *incx, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_zsyr\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *alpha, const \fBlapack_complex_double\fP *x, \fBlapack_int\fP *incx, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda)"
.br
.ti -1c
.RI "void \fBLAPACK_ilaver\fP (const \fBlapack_int\fP *vers_major, const \fBlapack_int\fP *vers_minor, const \fBlapack_int\fP *vers_patch)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesv_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrf_aa\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrf_aa\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrf_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrf_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrf_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrf_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs_aa\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *e, \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *e, \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesv_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrf_rk\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *e, \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrf_rk\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *e, \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrf_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrf_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrf_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrf_rk\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *e, \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const float *a, \fBlapack_int\fP *lda, const float *e, const \fBlapack_int\fP *ipiv, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const double *a, \fBlapack_int\fP *lda, const double *e, const \fBlapack_int\fP *ipiv, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytri_3\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, const float *e, const \fBlapack_int\fP *ipiv, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytri_3\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, const double *e, const \fBlapack_int\fP *ipiv, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytri_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytri_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetri_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetri_3\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssycon_3\fP (char *uplo, \fBlapack_int\fP *n, const float *a, \fBlapack_int\fP *lda, const float *e, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, float *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsycon_3\fP (char *uplo, \fBlapack_int\fP *n, const double *a, \fBlapack_int\fP *lda, const double *e, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, double *work, \fBlapack_int\fP *iwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csycon_3\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsycon_3\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_checon_3\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *e, const \fBlapack_int\fP *ipiv, float *anorm, float *rcond, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhecon_3\fP (char *uplo, \fBlapack_int\fP *n, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *e, const \fBlapack_int\fP *ipiv, double *anorm, double *rcond, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgelq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *t, \fBlapack_int\fP *tsize, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgelq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *t, \fBlapack_int\fP *tsize, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgelq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgelq\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgemlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *t, \fBlapack_int\fP *tsize, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgemlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *t, \fBlapack_int\fP *tsize, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgemlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgemlq\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgeqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *t, \fBlapack_int\fP *tsize, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgeqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *t, \fBlapack_int\fP *tsize, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgeqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgeqr\fP (\fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgemqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const float *a, \fBlapack_int\fP *lda, const float *t, \fBlapack_int\fP *tsize, float *c, \fBlapack_int\fP *ldc, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgemqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const double *a, \fBlapack_int\fP *lda, const double *t, \fBlapack_int\fP *tsize, double *c, \fBlapack_int\fP *ldc, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgemqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_float\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_float\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgemqr\fP (char *side, char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *k, const \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, const \fBlapack_complex_double\fP *t, \fBlapack_int\fP *tsize, \fBlapack_complex_double\fP *c, \fBlapack_int\fP *ldc, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_sgetsls\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dgetsls\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cgetsls\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zgetsls\fP (char *trans, \fBlapack_int\fP *m, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssyevr_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsyevr_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_cheevr_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zheevr_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_int\fP *isuppz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbev_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbevd_2stage\fP (char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *lrwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *liwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssbevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, float *ab, \fBlapack_int\fP *ldab, float *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, float *z, \fBlapack_int\fP *ldz, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsbevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, double *ab, \fBlapack_int\fP *ldab, double *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, double *z, \fBlapack_int\fP *ldz, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chbevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_float\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_float\fP *q, \fBlapack_int\fP *ldq, float *vl, float *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, float *abstol, \fBlapack_int\fP *m, float *w, \fBlapack_complex_float\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhbevx_2stage\fP (char *jobz, char *range, char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *kd, \fBlapack_complex_double\fP *ab, \fBlapack_int\fP *ldab, \fBlapack_complex_double\fP *q, \fBlapack_int\fP *ldq, double *vl, double *vu, \fBlapack_int\fP *il, \fBlapack_int\fP *iu, double *abstol, \fBlapack_int\fP *m, double *w, \fBlapack_complex_double\fP *z, \fBlapack_int\fP *ldz, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *iwork, \fBlapack_int\fP *ifail, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssygv_2stage\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *b, \fBlapack_int\fP *ldb, float *w, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsygv_2stage\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *b, \fBlapack_int\fP *ldb, double *w, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chegv_2stage\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, float *w, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, float *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhegv_2stage\fP (\fBlapack_int\fP *itype, char *jobz, char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, double *w, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, double *rwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssysv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP *ldb, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsysv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP *ldb, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csysv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsysv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chesv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhesv_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, float *a, \fBlapack_int\fP *lda, float *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, double *a, \fBlapack_int\fP *lda, double *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrf_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *work, \fBlapack_int\fP *lwork, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_ssytrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, float *a, \fBlapack_int\fP *lda, float *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, float *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_dsytrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, double *a, \fBlapack_int\fP *lda, double *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, double *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_csytrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zsytrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_chetrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_float\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_float\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_float\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACK_zhetrs_aa_2stage\fP (char *uplo, \fBlapack_int\fP *n, \fBlapack_int\fP *nrhs, \fBlapack_complex_double\fP *a, \fBlapack_int\fP *lda, \fBlapack_complex_double\fP *tb, \fBlapack_int\fP *ltb, \fBlapack_int\fP *ipiv, \fBlapack_int\fP *ipiv2, \fBlapack_complex_double\fP *b, \fBlapack_int\fP *ldb, \fBlapack_int\fP *info)"
.br
.ti -1c
.RI "void \fBLAPACKE_set_nancheck\fP (int flag)"
.br
.ti -1c
.RI "int \fBLAPACKE_get_nancheck\fP ()"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define LAPACK_C2INT(x)   (\fBlapack_int\fP)(*((float*)&x ))"

.PP
Definition at line 116 of file lapacke\&.h\&.
.SS "#define LAPACK_cbbcsd   \fBLAPACK_GLOBAL\fP(\fBcbbcsd\fP,CBBCSD)"

.PP
Definition at line 13662 of file lapacke\&.h\&.
.SS "#define LAPACK_cbdsqr   \fBLAPACK_GLOBAL\fP(\fBcbdsqr\fP,CBDSQR)"

.PP
Definition at line 13121 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbbrd   \fBLAPACK_GLOBAL\fP(\fBcgbbrd\fP,CGBBRD)"

.PP
Definition at line 13109 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbcon   \fBLAPACK_GLOBAL\fP(\fBcgbcon\fP,CGBCON)"

.PP
Definition at line 12735 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbequ   \fBLAPACK_GLOBAL\fP(\fBcgbequ\fP,CGBEQU)"

.PP
Definition at line 12901 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbequb   \fBLAPACK_GLOBAL\fP(\fBcgbequb\fP,CGBEQUB)"

.PP
Definition at line 12906 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbrfs   \fBLAPACK_GLOBAL\fP(\fBcgbrfs\fP,CGBRFS)"

.PP
Definition at line 12791 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbrfsx   \fBLAPACK_GLOBAL\fP(\fBcgbrfsx\fP,CGBRFSX)"

.PP
Definition at line 12796 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbsv   \fBLAPACK_GLOBAL\fP(\fBcgbsv\fP,CGBSV)"

.PP
Definition at line 12945 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbsvx   \fBLAPACK_GLOBAL\fP(\fBcgbsvx\fP,CGBSVX)"

.PP
Definition at line 12949 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbsvxx   \fBLAPACK_GLOBAL\fP(\fBcgbsvxx\fP,CGBSVXX)"

.PP
Definition at line 12954 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbtrf   \fBLAPACK_GLOBAL\fP(\fBcgbtrf\fP,CGBTRF)"

.PP
Definition at line 12615 of file lapacke\&.h\&.
.SS "#define LAPACK_cgbtrs   \fBLAPACK_GLOBAL\fP(\fBcgbtrs\fP,CGBTRS)"

.PP
Definition at line 12673 of file lapacke\&.h\&.
.SS "#define LAPACK_cgebak   \fBLAPACK_GLOBAL\fP(\fBcgebak\fP,CGEBAK)"

.PP
Definition at line 13219 of file lapacke\&.h\&.
.SS "#define LAPACK_cgebal   \fBLAPACK_GLOBAL\fP(\fBcgebal\fP,CGEBAL)"

.PP
Definition at line 13215 of file lapacke\&.h\&.
.SS "#define LAPACK_cgebrd   \fBLAPACK_GLOBAL\fP(\fBcgebrd\fP,CGEBRD)"

.PP
Definition at line 13105 of file lapacke\&.h\&.
.SS "#define LAPACK_cgecon   \fBLAPACK_GLOBAL\fP(\fBcgecon\fP,CGECON)"

.PP
Definition at line 12731 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeequ   \fBLAPACK_GLOBAL\fP(\fBcgeequ\fP,CGEEQU)"

.PP
Definition at line 12893 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeequb   \fBLAPACK_GLOBAL\fP(\fBcgeequb\fP,CGEEQUB)"

.PP
Definition at line 12898 of file lapacke\&.h\&.
.SS "#define LAPACK_cgees   \fBLAPACK_GLOBAL\fP(\fBcgees\fP,CGEES)"

.PP
Definition at line 13403 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeesx   \fBLAPACK_GLOBAL\fP(\fBcgeesx\fP,CGEESX)"

.PP
Definition at line 13407 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeev   \fBLAPACK_GLOBAL\fP(\fBcgeev\fP,CGEEV)"

.PP
Definition at line 13411 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeevx   \fBLAPACK_GLOBAL\fP(\fBcgeevx\fP,CGEEVX)"

.PP
Definition at line 13415 of file lapacke\&.h\&.
.SS "#define LAPACK_cgehrd   \fBLAPACK_GLOBAL\fP(\fBcgehrd\fP,CGEHRD)"

.PP
Definition at line 13203 of file lapacke\&.h\&.
.SS "#define LAPACK_cgejsv   \fBLAPACK_GLOBAL\fP(\fBcgejsv\fP,CGEJSV)"

.PP
Definition at line 13431 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelq   \fBLAPACK_GLOBAL\fP(\fBcgelq\fP,CGELQ)"

.PP
Definition at line 13804 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelq2   \fBLAPACK_GLOBAL\fP(\fBcgelq2\fP,CGELQ2)"

.PP
Definition at line 13591 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelqf   \fBLAPACK_GLOBAL\fP(\fBcgelqf\fP,CGELQF)"

.PP
Definition at line 13053 of file lapacke\&.h\&.
.SS "#define LAPACK_cgels   \fBLAPACK_GLOBAL\fP(\fBcgels\fP,CGELS)"

.PP
Definition at line 13303 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelsd   \fBLAPACK_GLOBAL\fP(\fBcgelsd\fP,CGELSD)"

.PP
Definition at line 13315 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelss   \fBLAPACK_GLOBAL\fP(\fBcgelss\fP,CGELSS)"

.PP
Definition at line 13311 of file lapacke\&.h\&.
.SS "#define LAPACK_cgelsy   \fBLAPACK_GLOBAL\fP(\fBcgelsy\fP,CGELSY)"

.PP
Definition at line 13307 of file lapacke\&.h\&.
.SS "#define LAPACK_cgemlq   \fBLAPACK_GLOBAL\fP(\fBcgemlq\fP,CGEMLQ)"

.PP
Definition at line 13808 of file lapacke\&.h\&.
.SS "#define LAPACK_cgemqr   \fBLAPACK_GLOBAL\fP(\fBcgemqr\fP,CGEMQR)"

.PP
Definition at line 13816 of file lapacke\&.h\&.
.SS "#define LAPACK_cgemqrt   \fBLAPACK_GLOBAL\fP(\fBcgemqrt\fP,CGEMQRT)"

.PP
Definition at line 13709 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqlf   \fBLAPACK_GLOBAL\fP(\fBcgeqlf\fP,CGEQLF)"

.PP
Definition at line 13065 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqp3   \fBLAPACK_GLOBAL\fP(\fBcgeqp3\fP,CGEQP3)"

.PP
Definition at line 13041 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqpf   \fBLAPACK_GLOBAL\fP(cgeqpf,CGEQPF)"

.PP
Definition at line 13037 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqr   \fBLAPACK_GLOBAL\fP(\fBcgeqr\fP,CGEQR)"

.PP
Definition at line 13812 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqr2   \fBLAPACK_GLOBAL\fP(\fBcgeqr2\fP,CGEQR2)"

.PP
Definition at line 13549 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqrf   \fBLAPACK_GLOBAL\fP(\fBcgeqrf\fP,CGEQRF)"

.PP
Definition at line 13033 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqrfp   \fBLAPACK_GLOBAL\fP(\fBcgeqrfp\fP,CGEQRFP)"

.PP
Definition at line 13539 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqrt   \fBLAPACK_GLOBAL\fP(\fBcgeqrt\fP,CGEQRT)"

.PP
Definition at line 13713 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqrt2   \fBLAPACK_GLOBAL\fP(\fBcgeqrt2\fP,CGEQRT2)"

.PP
Definition at line 13717 of file lapacke\&.h\&.
.SS "#define LAPACK_cgeqrt3   \fBLAPACK_GLOBAL\fP(\fBcgeqrt3\fP,CGEQRT3)"

.PP
Definition at line 13721 of file lapacke\&.h\&.
.SS "#define LAPACK_cgerfs   \fBLAPACK_GLOBAL\fP(\fBcgerfs\fP,CGERFS)"

.PP
Definition at line 12783 of file lapacke\&.h\&.
.SS "#define LAPACK_cgerfsx   \fBLAPACK_GLOBAL\fP(\fBcgerfsx\fP,CGERFSX)"

.PP
Definition at line 12788 of file lapacke\&.h\&.
.SS "#define LAPACK_cgerqf   \fBLAPACK_GLOBAL\fP(\fBcgerqf\fP,CGERQF)"

.PP
Definition at line 13077 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesdd   \fBLAPACK_GLOBAL\fP(\fBcgesdd\fP,CGESDD)"

.PP
Definition at line 13427 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesv   \fBLAPACK_GLOBAL\fP(\fBcgesv\fP,CGESV)"

.PP
Definition at line 12931 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesvd   \fBLAPACK_GLOBAL\fP(\fBcgesvd\fP,CGESVD)"

.PP
Definition at line 13419 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesvdx   \fBLAPACK_GLOBAL\fP(\fBcgesvdx\fP,CGESVDX)"

.PP
Definition at line 13423 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesvj   \fBLAPACK_GLOBAL\fP(\fBcgesvj\fP,CGESVJ)"

.PP
Definition at line 13435 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesvx   \fBLAPACK_GLOBAL\fP(\fBcgesvx\fP,CGESVX)"

.PP
Definition at line 12937 of file lapacke\&.h\&.
.SS "#define LAPACK_cgesvxx   \fBLAPACK_GLOBAL\fP(\fBcgesvxx\fP,CGESVXX)"

.PP
Definition at line 12942 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetf2   \fBLAPACK_GLOBAL\fP(\fBcgetf2\fP,CGETF2)"

.PP
Definition at line 13563 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetrf   \fBLAPACK_GLOBAL\fP(\fBcgetrf\fP,CGETRF)"

.PP
Definition at line 12607 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetrf2   \fBLAPACK_GLOBAL\fP(\fBcgetrf2\fP,CGETRF2)"

.PP
Definition at line 12611 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetri   \fBLAPACK_GLOBAL\fP(\fBcgetri\fP,CGETRI)"

.PP
Definition at line 12853 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetrs   \fBLAPACK_GLOBAL\fP(\fBcgetrs\fP,CGETRS)"

.PP
Definition at line 12669 of file lapacke\&.h\&.
.SS "#define LAPACK_cgetsls   \fBLAPACK_GLOBAL\fP(\fBcgetsls\fP,CGETSLS)"

.PP
Definition at line 13820 of file lapacke\&.h\&.
.SS "#define LAPACK_cggbak   \fBLAPACK_GLOBAL\fP(\fBcggbak\fP,CGGBAK)"

.PP
Definition at line 13263 of file lapacke\&.h\&.
.SS "#define LAPACK_cggbal   \fBLAPACK_GLOBAL\fP(\fBcggbal\fP,CGGBAL)"

.PP
Definition at line 13259 of file lapacke\&.h\&.
.SS "#define LAPACK_cgges   \fBLAPACK_GLOBAL\fP(\fBcgges\fP,CGGES)"

.PP
Definition at line 13483 of file lapacke\&.h\&.
.SS "#define LAPACK_cgges3   \fBLAPACK_GLOBAL\fP(\fBcgges3\fP,CGGES3)"

.PP
Definition at line 13487 of file lapacke\&.h\&.
.SS "#define LAPACK_cggesx   \fBLAPACK_GLOBAL\fP(\fBcggesx\fP,CGGESX)"

.PP
Definition at line 13491 of file lapacke\&.h\&.
.SS "#define LAPACK_cggev   \fBLAPACK_GLOBAL\fP(\fBcggev\fP,CGGEV)"

.PP
Definition at line 13495 of file lapacke\&.h\&.
.SS "#define LAPACK_cggev3   \fBLAPACK_GLOBAL\fP(\fBcggev3\fP,CGGEV3)"

.PP
Definition at line 13499 of file lapacke\&.h\&.
.SS "#define LAPACK_cggevx   \fBLAPACK_GLOBAL\fP(\fBcggevx\fP,CGGEVX)"

.PP
Definition at line 13503 of file lapacke\&.h\&.
.SS "#define LAPACK_cggglm   \fBLAPACK_GLOBAL\fP(\fBcggglm\fP,CGGGLM)"

.PP
Definition at line 13323 of file lapacke\&.h\&.
.SS "#define LAPACK_cgghd3   \fBLAPACK_GLOBAL\fP(\fBcgghd3\fP,CGGHD3)"

.PP
Definition at line 13255 of file lapacke\&.h\&.
.SS "#define LAPACK_cgghrd   \fBLAPACK_GLOBAL\fP(\fBcgghrd\fP,CGGHRD)"

.PP
Definition at line 13251 of file lapacke\&.h\&.
.SS "#define LAPACK_cgglse   \fBLAPACK_GLOBAL\fP(\fBcgglse\fP,CGGLSE)"

.PP
Definition at line 13319 of file lapacke\&.h\&.
.SS "#define LAPACK_cggqrf   \fBLAPACK_GLOBAL\fP(\fBcggqrf\fP,CGGQRF)"

.PP
Definition at line 13097 of file lapacke\&.h\&.
.SS "#define LAPACK_cggrqf   \fBLAPACK_GLOBAL\fP(\fBcggrqf\fP,CGGRQF)"

.PP
Definition at line 13101 of file lapacke\&.h\&.
.SS "#define LAPACK_cggsvd   \fBLAPACK_GLOBAL\fP(cggsvd,CGGSVD)"

.PP
Definition at line 13439 of file lapacke\&.h\&.
.SS "#define LAPACK_cggsvd3   \fBLAPACK_GLOBAL\fP(\fBcggsvd3\fP,CGGSVD3)"

.PP
Definition at line 13750 of file lapacke\&.h\&.
.SS "#define LAPACK_cggsvp   \fBLAPACK_GLOBAL\fP(cggsvp,CGGSVP)"

.PP
Definition at line 13291 of file lapacke\&.h\&.
.SS "#define LAPACK_cggsvp3   \fBLAPACK_GLOBAL\fP(\fBcggsvp3\fP,CGGSVP3)"

.PP
Definition at line 13295 of file lapacke\&.h\&.
.SS "#define LAPACK_cgtcon   \fBLAPACK_GLOBAL\fP(\fBcgtcon\fP,CGTCON)"

.PP
Definition at line 12739 of file lapacke\&.h\&.
.SS "#define LAPACK_cgtrfs   \fBLAPACK_GLOBAL\fP(\fBcgtrfs\fP,CGTRFS)"

.PP
Definition at line 12799 of file lapacke\&.h\&.
.SS "#define LAPACK_cgtsv   \fBLAPACK_GLOBAL\fP(\fBcgtsv\fP,CGTSV)"

.PP
Definition at line 12957 of file lapacke\&.h\&.
.SS "#define LAPACK_cgtsvx   \fBLAPACK_GLOBAL\fP(\fBcgtsvx\fP,CGTSVX)"

.PP
Definition at line 12961 of file lapacke\&.h\&.
.SS "#define LAPACK_cgttrf   \fBLAPACK_GLOBAL\fP(\fBcgttrf\fP,CGTTRF)"

.PP
Definition at line 12619 of file lapacke\&.h\&.
.SS "#define LAPACK_cgttrs   \fBLAPACK_GLOBAL\fP(\fBcgttrs\fP,CGTTRS)"

.PP
Definition at line 12677 of file lapacke\&.h\&.
.SS "#define LAPACK_chbev   \fBLAPACK_GLOBAL\fP(\fBchbev\fP,CHBEV)"

.PP
Definition at line 13371 of file lapacke\&.h\&.
.SS "#define LAPACK_chbev_2stage   \fBLAPACK_GLOBAL\fP(\fBchbev_2stage\fP,CHBEV_2STAGE)"

.PP
Definition at line 13375 of file lapacke\&.h\&.
.SS "#define LAPACK_chbevd   \fBLAPACK_GLOBAL\fP(\fBchbevd\fP,CHBEVD)"

.PP
Definition at line 13379 of file lapacke\&.h\&.
.SS "#define LAPACK_chbevd_2stage   \fBLAPACK_GLOBAL\fP(\fBchbevd_2stage\fP,CHBEVD_2STAGE)"

.PP
Definition at line 13383 of file lapacke\&.h\&.
.SS "#define LAPACK_chbevx   \fBLAPACK_GLOBAL\fP(\fBchbevx\fP,CHBEVX)"

.PP
Definition at line 13387 of file lapacke\&.h\&.
.SS "#define LAPACK_chbevx_2stage   \fBLAPACK_GLOBAL\fP(\fBchbevx_2stage\fP,CHBEVX_2STAGE)"

.PP
Definition at line 13391 of file lapacke\&.h\&.
.SS "#define LAPACK_chbgst   \fBLAPACK_GLOBAL\fP(\fBchbgst\fP,CHBGST)"

.PP
Definition at line 13195 of file lapacke\&.h\&.
.SS "#define LAPACK_chbgv   \fBLAPACK_GLOBAL\fP(\fBchbgv\fP,CHBGV)"

.PP
Definition at line 13471 of file lapacke\&.h\&.
.SS "#define LAPACK_chbgvd   \fBLAPACK_GLOBAL\fP(\fBchbgvd\fP,CHBGVD)"

.PP
Definition at line 13475 of file lapacke\&.h\&.
.SS "#define LAPACK_chbgvx   \fBLAPACK_GLOBAL\fP(\fBchbgvx\fP,CHBGVX)"

.PP
Definition at line 13479 of file lapacke\&.h\&.
.SS "#define LAPACK_chbtrd   \fBLAPACK_GLOBAL\fP(\fBchbtrd\fP,CHBTRD)"

.PP
Definition at line 13153 of file lapacke\&.h\&.
.SS "#define LAPACK_checon   \fBLAPACK_GLOBAL\fP(\fBchecon\fP,CHECON)"

.PP
Definition at line 12761 of file lapacke\&.h\&.
.SS "#define LAPACK_checon_3   \fBLAPACK_GLOBAL\fP(\fBchecon_3\fP,CHECON_3)"

.PP
Definition at line 13800 of file lapacke\&.h\&.
.SS "#define LAPACK_cheequb   \fBLAPACK_GLOBAL\fP(\fBcheequb\fP,CHEEQUB)"

.PP
Definition at line 12928 of file lapacke\&.h\&.
.SS "#define LAPACK_cheev   \fBLAPACK_GLOBAL\fP(\fBcheev\fP,CHEEV)"

.PP
Definition at line 13327 of file lapacke\&.h\&.
.SS "#define LAPACK_cheev_2stage   \fBLAPACK_GLOBAL\fP(\fBcheev_2stage\fP,CHEEV_2STAGE)"

.PP
Definition at line 13331 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevd   \fBLAPACK_GLOBAL\fP(\fBcheevd\fP,CHEEVD)"

.PP
Definition at line 13335 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevd_2stage   \fBLAPACK_GLOBAL\fP(\fBcheevd_2stage\fP,CHEEVD_2STAGE)"

.PP
Definition at line 13339 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevr   \fBLAPACK_GLOBAL\fP(\fBcheevr\fP,CHEEVR)"

.PP
Definition at line 13351 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevr_2stage   \fBLAPACK_GLOBAL\fP(\fBcheevr_2stage\fP,CHEEVR_2STAGE)"

.PP
Definition at line 13355 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevx   \fBLAPACK_GLOBAL\fP(\fBcheevx\fP,CHEEVX)"

.PP
Definition at line 13343 of file lapacke\&.h\&.
.SS "#define LAPACK_cheevx_2stage   \fBLAPACK_GLOBAL\fP(\fBcheevx_2stage\fP,CHEEVX_2STAGE)"

.PP
Definition at line 13347 of file lapacke\&.h\&.
.SS "#define LAPACK_chegst   \fBLAPACK_GLOBAL\fP(\fBchegst\fP,CHEGST)"

.PP
Definition at line 13187 of file lapacke\&.h\&.
.SS "#define LAPACK_chegv   \fBLAPACK_GLOBAL\fP(\fBchegv\fP,CHEGV)"

.PP
Definition at line 13443 of file lapacke\&.h\&.
.SS "#define LAPACK_chegv_2stage   \fBLAPACK_GLOBAL\fP(\fBchegv_2stage\fP,CHEGV_2STAGE)"

.PP
Definition at line 13447 of file lapacke\&.h\&.
.SS "#define LAPACK_chegvd   \fBLAPACK_GLOBAL\fP(\fBchegvd\fP,CHEGVD)"

.PP
Definition at line 13451 of file lapacke\&.h\&.
.SS "#define LAPACK_chegvx   \fBLAPACK_GLOBAL\fP(\fBchegvx\fP,CHEGVX)"

.PP
Definition at line 13455 of file lapacke\&.h\&.
.SS "#define LAPACK_cherfs   \fBLAPACK_GLOBAL\fP(\fBcherfs\fP,CHERFS)"

.PP
Definition at line 12829 of file lapacke\&.h\&.
.SS "#define LAPACK_cherfsx   \fBLAPACK_GLOBAL\fP(\fBcherfsx\fP,CHERFSX)"

.PP
Definition at line 12832 of file lapacke\&.h\&.
.SS "#define LAPACK_chesv   \fBLAPACK_GLOBAL\fP(\fBchesv\fP,CHESV)"

.PP
Definition at line 13013 of file lapacke\&.h\&.
.SS "#define LAPACK_chesv_aa   \fBLAPACK_GLOBAL\fP(\fBchesv_aa\fP,CHESV_AA)"

.PP
Definition at line 13755 of file lapacke\&.h\&.
.SS "#define LAPACK_chesv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBchesv_aa_2stage\fP,CHESV_AA_2STAGE)"

.PP
Definition at line 13826 of file lapacke\&.h\&.
.SS "#define LAPACK_chesv_rk   \fBLAPACK_GLOBAL\fP(\fBchesv_rk\fP,CHESV_RK)"

.PP
Definition at line 13774 of file lapacke\&.h\&.
.SS "#define LAPACK_chesvx   \fBLAPACK_GLOBAL\fP(\fBchesvx\fP,CHESVX)"

.PP
Definition at line 13015 of file lapacke\&.h\&.
.SS "#define LAPACK_chesvxx   \fBLAPACK_GLOBAL\fP(\fBchesvxx\fP,CHESVXX)"

.PP
Definition at line 13018 of file lapacke\&.h\&.
.SS "#define LAPACK_cheswapr   \fBLAPACK_GLOBAL\fP(\fBcheswapr\fP,CHESWAPR)"

.PP
Definition at line 13663 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrd   \fBLAPACK_GLOBAL\fP(\fBchetrd\fP,CHETRD)"

.PP
Definition at line 13133 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrf   \fBLAPACK_GLOBAL\fP(\fBchetrf\fP,CHETRF)"

.PP
Definition at line 12657 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrf_aa   \fBLAPACK_GLOBAL\fP(\fBchetrf_aa\fP,CHETRF_AA)"

.PP
Definition at line 13769 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBchetrf_aa_2stage\fP,CHETRF_AA_2STAGE)"

.PP
Definition at line 13840 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrf_rk   \fBLAPACK_GLOBAL\fP(\fBchetrf_rk\fP,CHETRF_RK)"

.PP
Definition at line 13782 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrf_rook   \fBLAPACK_GLOBAL\fP(\fBchetrf_rook\fP,CHETRF_ROOK)"

.PP
Definition at line 12658 of file lapacke\&.h\&.
.SS "#define LAPACK_chetri   \fBLAPACK_GLOBAL\fP(\fBchetri\fP,CHETRI)"

.PP
Definition at line 12871 of file lapacke\&.h\&.
.SS "#define LAPACK_chetri2   \fBLAPACK_GLOBAL\fP(\fBchetri2\fP,CHETRI2)"

.PP
Definition at line 13664 of file lapacke\&.h\&.
.SS "#define LAPACK_chetri2x   \fBLAPACK_GLOBAL\fP(\fBchetri2x\fP,CHETRI2X)"

.PP
Definition at line 13665 of file lapacke\&.h\&.
.SS "#define LAPACK_chetri_3   \fBLAPACK_GLOBAL\fP(\fBchetri_3\fP,CHETRI_3)"

.PP
Definition at line 13794 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs   \fBLAPACK_GLOBAL\fP(\fBchetrs\fP,CHETRS)"

.PP
Definition at line 12707 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs2   \fBLAPACK_GLOBAL\fP(\fBchetrs2\fP,CHETRS2)"

.PP
Definition at line 13666 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs_3   \fBLAPACK_GLOBAL\fP(\fBchetrs_3\fP,CHETRS_3)"

.PP
Definition at line 13788 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs_aa   \fBLAPACK_GLOBAL\fP(\fBchetrs_aa\fP,CHETRS_AA)"

.PP
Definition at line 13763 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBchetrs_aa_2stage\fP,CHETRS_AA_2STAGE)"

.PP
Definition at line 13834 of file lapacke\&.h\&.
.SS "#define LAPACK_chetrs_rook   \fBLAPACK_GLOBAL\fP(\fBchetrs_rook\fP,CHETRS_ROOK)"

.PP
Definition at line 12708 of file lapacke\&.h\&.
.SS "#define LAPACK_chfrk   \fBLAPACK_GLOBAL\fP(\fBchfrk\fP,CHFRK)"

.PP
Definition at line 13508 of file lapacke\&.h\&.
.SS "#define LAPACK_chgeqz   \fBLAPACK_GLOBAL\fP(\fBchgeqz\fP,CHGEQZ)"

.PP
Definition at line 13267 of file lapacke\&.h\&.
.SS "#define LAPACK_chpcon   \fBLAPACK_GLOBAL\fP(\fBchpcon\fP,CHPCON)"

.PP
Definition at line 12767 of file lapacke\&.h\&.
.SS "#define LAPACK_chpev   \fBLAPACK_GLOBAL\fP(\fBchpev\fP,CHPEV)"

.PP
Definition at line 13359 of file lapacke\&.h\&.
.SS "#define LAPACK_chpevd   \fBLAPACK_GLOBAL\fP(\fBchpevd\fP,CHPEVD)"

.PP
Definition at line 13363 of file lapacke\&.h\&.
.SS "#define LAPACK_chpevx   \fBLAPACK_GLOBAL\fP(\fBchpevx\fP,CHPEVX)"

.PP
Definition at line 13367 of file lapacke\&.h\&.
.SS "#define LAPACK_chpgst   \fBLAPACK_GLOBAL\fP(\fBchpgst\fP,CHPGST)"

.PP
Definition at line 13191 of file lapacke\&.h\&.
.SS "#define LAPACK_chpgv   \fBLAPACK_GLOBAL\fP(\fBchpgv\fP,CHPGV)"

.PP
Definition at line 13459 of file lapacke\&.h\&.
.SS "#define LAPACK_chpgvd   \fBLAPACK_GLOBAL\fP(\fBchpgvd\fP,CHPGVD)"

.PP
Definition at line 13463 of file lapacke\&.h\&.
.SS "#define LAPACK_chpgvx   \fBLAPACK_GLOBAL\fP(\fBchpgvx\fP,CHPGVX)"

.PP
Definition at line 13467 of file lapacke\&.h\&.
.SS "#define LAPACK_chprfs   \fBLAPACK_GLOBAL\fP(\fBchprfs\fP,CHPRFS)"

.PP
Definition at line 12837 of file lapacke\&.h\&.
.SS "#define LAPACK_chpsv   \fBLAPACK_GLOBAL\fP(\fBchpsv\fP,CHPSV)"

.PP
Definition at line 13027 of file lapacke\&.h\&.
.SS "#define LAPACK_chpsvx   \fBLAPACK_GLOBAL\fP(\fBchpsvx\fP,CHPSVX)"

.PP
Definition at line 13029 of file lapacke\&.h\&.
.SS "#define LAPACK_chptrd   \fBLAPACK_GLOBAL\fP(\fBchptrd\fP,CHPTRD)"

.PP
Definition at line 13145 of file lapacke\&.h\&.
.SS "#define LAPACK_chptrf   \fBLAPACK_GLOBAL\fP(\fBchptrf\fP,CHPTRF)"

.PP
Definition at line 12665 of file lapacke\&.h\&.
.SS "#define LAPACK_chptri   \fBLAPACK_GLOBAL\fP(\fBchptri\fP,CHPTRI)"

.PP
Definition at line 12877 of file lapacke\&.h\&.
.SS "#define LAPACK_chptrs   \fBLAPACK_GLOBAL\fP(\fBchptrs\fP,CHPTRS)"

.PP
Definition at line 12715 of file lapacke\&.h\&.
.SS "#define LAPACK_chsein   \fBLAPACK_GLOBAL\fP(\fBchsein\fP,CHSEIN)"

.PP
Definition at line 13227 of file lapacke\&.h\&.
.SS "#define LAPACK_chseqr   \fBLAPACK_GLOBAL\fP(\fBchseqr\fP,CHSEQR)"

.PP
Definition at line 13223 of file lapacke\&.h\&.
.SS "#define LAPACK_clacgv   \fBLAPACK_GLOBAL\fP(\fBclacgv\fP,CLACGV)"

.PP
Definition at line 13541 of file lapacke\&.h\&.
.SS "#define LAPACK_clacn2   \fBLAPACK_GLOBAL\fP(\fBclacn2\fP,CLACN2)"

.PP
Definition at line 13553 of file lapacke\&.h\&.
.SS "#define LAPACK_clacp2   \fBLAPACK_GLOBAL\fP(\fBclacp2\fP,CLACP2)"

.PP
Definition at line 13559 of file lapacke\&.h\&.
.SS "#define LAPACK_clacpy   \fBLAPACK_GLOBAL\fP(\fBclacpy\fP,CLACPY)"

.PP
Definition at line 13557 of file lapacke\&.h\&.
.SS "#define LAPACK_clacrm   \fBLAPACK_GLOBAL\fP(\fBclacrm\fP,CLACRM)"

.PP
Definition at line 13577 of file lapacke\&.h\&.
.SS "#define LAPACK_clag2z   \fBLAPACK_GLOBAL\fP(\fBclag2z\fP,CLAG2Z)"

.PP
Definition at line 13619 of file lapacke\&.h\&.
.SS "#define LAPACK_clagge   \fBLAPACK_GLOBAL\fP(clagge,CLAGGE)"

.PP
Definition at line 13627 of file lapacke\&.h\&.
.SS "#define LAPACK_claghe   \fBLAPACK_GLOBAL\fP(claghe,CLAGHE)"

.PP
Definition at line 13643 of file lapacke\&.h\&.
.SS "#define LAPACK_clagsy   \fBLAPACK_GLOBAL\fP(clagsy,CLAGSY)"

.PP
Definition at line 13641 of file lapacke\&.h\&.
.SS "#define LAPACK_clange   \fBLAPACK_GLOBAL\fP(\fBclange\fP,CLANGE)"

.PP
Definition at line 13571 of file lapacke\&.h\&.
.SS "#define LAPACK_clanhe   \fBLAPACK_GLOBAL\fP(\fBclanhe\fP,CLANHE)"

.PP
Definition at line 13573 of file lapacke\&.h\&.
.SS "#define LAPACK_clansy   \fBLAPACK_GLOBAL\fP(\fBclansy\fP,CLANSY)"

.PP
Definition at line 13581 of file lapacke\&.h\&.
.SS "#define LAPACK_clantr   \fBLAPACK_GLOBAL\fP(\fBclantr\fP,CLANTR)"

.PP
Definition at line 13585 of file lapacke\&.h\&.
.SS "#define LAPACK_clapmr   \fBLAPACK_GLOBAL\fP(\fBclapmr\fP,CLAPMR)"

.PP
Definition at line 13647 of file lapacke\&.h\&.
.SS "#define LAPACK_clapmt   \fBLAPACK_GLOBAL\fP(\fBclapmt\fP,CLAPMT)"

.PP
Definition at line 13651 of file lapacke\&.h\&.
.SS "#define LAPACK_clarcm   \fBLAPACK_GLOBAL\fP(\fBclarcm\fP,CLARCM)"

.PP
Definition at line 13575 of file lapacke\&.h\&.
.SS "#define LAPACK_clarfb   \fBLAPACK_GLOBAL\fP(\fBclarfb\fP,CLARFB)"

.PP
Definition at line 13595 of file lapacke\&.h\&.
.SS "#define LAPACK_clarfg   \fBLAPACK_GLOBAL\fP(\fBclarfg\fP,CLARFG)"

.PP
Definition at line 13599 of file lapacke\&.h\&.
.SS "#define LAPACK_clarft   \fBLAPACK_GLOBAL\fP(\fBclarft\fP,CLARFT)"

.PP
Definition at line 13607 of file lapacke\&.h\&.
.SS "#define LAPACK_clarfx   \fBLAPACK_GLOBAL\fP(\fBclarfx\fP,CLARFX)"

.PP
Definition at line 13611 of file lapacke\&.h\&.
.SS "#define LAPACK_clarnv   \fBLAPACK_GLOBAL\fP(\fBclarnv\fP,CLARNV)"

.PP
Definition at line 13545 of file lapacke\&.h\&.
.SS "#define LAPACK_clascl   \fBLAPACK_GLOBAL\fP(\fBclascl\fP,CLASCL)"

.PP
Definition at line 13631 of file lapacke\&.h\&.
.SS "#define LAPACK_claset   \fBLAPACK_GLOBAL\fP(\fBclaset\fP,CLASET)"

.PP
Definition at line 13635 of file lapacke\&.h\&.
.SS "#define LAPACK_classq   \fBLAPACK_GLOBAL\fP(\fBclassq\fP,CLASSQ)"

.PP
Definition at line 13603 of file lapacke\&.h\&.
.SS "#define LAPACK_claswp   \fBLAPACK_GLOBAL\fP(\fBclaswp\fP,CLASWP)"

.PP
Definition at line 13567 of file lapacke\&.h\&.
.SS "#define LAPACK_clatms   \fBLAPACK_GLOBAL\fP(clatms,CLATMS)"

.PP
Definition at line 13615 of file lapacke\&.h\&.
.SS "#define LAPACK_clauum   \fBLAPACK_GLOBAL\fP(\fBclauum\fP,CLAUUM)"

.PP
Definition at line 13623 of file lapacke\&.h\&.
.SS "#define LAPACK_COL_MAJOR   102"

.PP
Definition at line 120 of file lapacke\&.h\&.
.SS "#define lapack_complex_double   double _Complex"

.PP
Definition at line 90 of file lapacke\&.h\&.
.SS "#define lapack_complex_double_imag(z)   (cimag(z))"

.PP
Definition at line 98 of file lapacke\&.h\&.
.SS "#define lapack_complex_double_real(z)   (creal(z))"

.PP
Definition at line 94 of file lapacke\&.h\&.
.SS "#define lapack_complex_float   float _Complex"

.PP
Definition at line 74 of file lapacke\&.h\&.
.SS "#define lapack_complex_float_imag(z)   (cimag(z))"

.PP
Definition at line 82 of file lapacke\&.h\&.
.SS "#define lapack_complex_float_real(z)   (creal(z))"

.PP
Definition at line 78 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbcon   \fBLAPACK_GLOBAL\fP(\fBcpbcon\fP,CPBCON)"

.PP
Definition at line 12751 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbequ   \fBLAPACK_GLOBAL\fP(\fBcpbequ\fP,CPBEQU)"

.PP
Definition at line 12921 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbrfs   \fBLAPACK_GLOBAL\fP(\fBcpbrfs\fP,CPBRFS)"

.PP
Definition at line 12815 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbstf   \fBLAPACK_GLOBAL\fP(\fBcpbstf\fP,CPBSTF)"

.PP
Definition at line 13199 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbsv   \fBLAPACK_GLOBAL\fP(\fBcpbsv\fP,CPBSV)"

.PP
Definition at line 12987 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbsvx   \fBLAPACK_GLOBAL\fP(\fBcpbsvx\fP,CPBSVX)"

.PP
Definition at line 12991 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbtrf   \fBLAPACK_GLOBAL\fP(\fBcpbtrf\fP,CPBTRF)"

.PP
Definition at line 12643 of file lapacke\&.h\&.
.SS "#define LAPACK_cpbtrs   \fBLAPACK_GLOBAL\fP(\fBcpbtrs\fP,CPBTRS)"

.PP
Definition at line 12693 of file lapacke\&.h\&.
.SS "#define LAPACK_cpftrf   \fBLAPACK_GLOBAL\fP(\fBcpftrf\fP,CPFTRF)"

.PP
Definition at line 12636 of file lapacke\&.h\&.
.SS "#define LAPACK_cpftri   \fBLAPACK_GLOBAL\fP(\fBcpftri\fP,CPFTRI)"

.PP
Definition at line 12862 of file lapacke\&.h\&.
.SS "#define LAPACK_cpftrs   \fBLAPACK_GLOBAL\fP(\fBcpftrs\fP,CPFTRS)"

.PP
Definition at line 12686 of file lapacke\&.h\&.
.SS "#define LAPACK_cpocon   \fBLAPACK_GLOBAL\fP(\fBcpocon\fP,CPOCON)"

.PP
Definition at line 12743 of file lapacke\&.h\&.
.SS "#define LAPACK_cpoequ   \fBLAPACK_GLOBAL\fP(\fBcpoequ\fP,CPOEQU)"

.PP
Definition at line 12909 of file lapacke\&.h\&.
.SS "#define LAPACK_cpoequb   \fBLAPACK_GLOBAL\fP(\fBcpoequb\fP,CPOEQUB)"

.PP
Definition at line 12914 of file lapacke\&.h\&.
.SS "#define LAPACK_cporfs   \fBLAPACK_GLOBAL\fP(\fBcporfs\fP,CPORFS)"

.PP
Definition at line 12803 of file lapacke\&.h\&.
.SS "#define LAPACK_cporfsx   \fBLAPACK_GLOBAL\fP(\fBcporfsx\fP,CPORFSX)"

.PP
Definition at line 12808 of file lapacke\&.h\&.
.SS "#define LAPACK_cposv   \fBLAPACK_GLOBAL\fP(\fBcposv\fP,CPOSV)"

.PP
Definition at line 12965 of file lapacke\&.h\&.
.SS "#define LAPACK_cposvx   \fBLAPACK_GLOBAL\fP(\fBcposvx\fP,CPOSVX)"

.PP
Definition at line 12971 of file lapacke\&.h\&.
.SS "#define LAPACK_cposvxx   \fBLAPACK_GLOBAL\fP(\fBcposvxx\fP,CPOSVXX)"

.PP
Definition at line 12976 of file lapacke\&.h\&.
.SS "#define LAPACK_cpotrf   \fBLAPACK_GLOBAL\fP(\fBcpotrf\fP,CPOTRF)"

.PP
Definition at line 12623 of file lapacke\&.h\&.
.SS "#define LAPACK_cpotrf2   \fBLAPACK_GLOBAL\fP(\fBcpotrf2\fP,CPOTRF2)"

.PP
Definition at line 12627 of file lapacke\&.h\&.
.SS "#define LAPACK_cpotri   \fBLAPACK_GLOBAL\fP(\fBcpotri\fP,CPOTRI)"

.PP
Definition at line 12857 of file lapacke\&.h\&.
.SS "#define LAPACK_cpotrs   \fBLAPACK_GLOBAL\fP(\fBcpotrs\fP,CPOTRS)"

.PP
Definition at line 12681 of file lapacke\&.h\&.
.SS "#define LAPACK_cppcon   \fBLAPACK_GLOBAL\fP(\fBcppcon\fP,CPPCON)"

.PP
Definition at line 12747 of file lapacke\&.h\&.
.SS "#define LAPACK_cppequ   \fBLAPACK_GLOBAL\fP(\fBcppequ\fP,CPPEQU)"

.PP
Definition at line 12917 of file lapacke\&.h\&.
.SS "#define LAPACK_cpprfs   \fBLAPACK_GLOBAL\fP(\fBcpprfs\fP,CPPRFS)"

.PP
Definition at line 12811 of file lapacke\&.h\&.
.SS "#define LAPACK_cppsv   \fBLAPACK_GLOBAL\fP(\fBcppsv\fP,CPPSV)"

.PP
Definition at line 12979 of file lapacke\&.h\&.
.SS "#define LAPACK_cppsvx   \fBLAPACK_GLOBAL\fP(\fBcppsvx\fP,CPPSVX)"

.PP
Definition at line 12983 of file lapacke\&.h\&.
.SS "#define LAPACK_cpptrf   \fBLAPACK_GLOBAL\fP(\fBcpptrf\fP,CPPTRF)"

.PP
Definition at line 12639 of file lapacke\&.h\&.
.SS "#define LAPACK_cpptri   \fBLAPACK_GLOBAL\fP(\fBcpptri\fP,CPPTRI)"

.PP
Definition at line 12865 of file lapacke\&.h\&.
.SS "#define LAPACK_cpptrs   \fBLAPACK_GLOBAL\fP(\fBcpptrs\fP,CPPTRS)"

.PP
Definition at line 12689 of file lapacke\&.h\&.
.SS "#define LAPACK_cpstrf   \fBLAPACK_GLOBAL\fP(\fBcpstrf\fP,CPSTRF)"

.PP
Definition at line 12632 of file lapacke\&.h\&.
.SS "#define LAPACK_cptcon   \fBLAPACK_GLOBAL\fP(\fBcptcon\fP,CPTCON)"

.PP
Definition at line 12755 of file lapacke\&.h\&.
.SS "#define LAPACK_cpteqr   \fBLAPACK_GLOBAL\fP(\fBcpteqr\fP,CPTEQR)"

.PP
Definition at line 13175 of file lapacke\&.h\&.
.SS "#define LAPACK_cptrfs   \fBLAPACK_GLOBAL\fP(\fBcptrfs\fP,CPTRFS)"

.PP
Definition at line 12819 of file lapacke\&.h\&.
.SS "#define LAPACK_cptsv   \fBLAPACK_GLOBAL\fP(\fBcptsv\fP,CPTSV)"

.PP
Definition at line 12995 of file lapacke\&.h\&.
.SS "#define LAPACK_cptsvx   \fBLAPACK_GLOBAL\fP(\fBcptsvx\fP,CPTSVX)"

.PP
Definition at line 12999 of file lapacke\&.h\&.
.SS "#define LAPACK_cpttrf   \fBLAPACK_GLOBAL\fP(\fBcpttrf\fP,CPTTRF)"

.PP
Definition at line 12647 of file lapacke\&.h\&.
.SS "#define LAPACK_cpttrs   \fBLAPACK_GLOBAL\fP(\fBcpttrs\fP,CPTTRS)"

.PP
Definition at line 12697 of file lapacke\&.h\&.
.SS "#define LAPACK_cspcon   \fBLAPACK_GLOBAL\fP(\fBcspcon\fP,CSPCON)"

.PP
Definition at line 12765 of file lapacke\&.h\&.
.SS "#define LAPACK_csprfs   \fBLAPACK_GLOBAL\fP(\fBcsprfs\fP,CSPRFS)"

.PP
Definition at line 12835 of file lapacke\&.h\&.
.SS "#define LAPACK_cspsv   \fBLAPACK_GLOBAL\fP(\fBcspsv\fP,CSPSV)"

.PP
Definition at line 13021 of file lapacke\&.h\&.
.SS "#define LAPACK_cspsvx   \fBLAPACK_GLOBAL\fP(\fBcspsvx\fP,CSPSVX)"

.PP
Definition at line 13025 of file lapacke\&.h\&.
.SS "#define LAPACK_csptrf   \fBLAPACK_GLOBAL\fP(\fBcsptrf\fP,CSPTRF)"

.PP
Definition at line 12663 of file lapacke\&.h\&.
.SS "#define LAPACK_csptri   \fBLAPACK_GLOBAL\fP(\fBcsptri\fP,CSPTRI)"

.PP
Definition at line 12875 of file lapacke\&.h\&.
.SS "#define LAPACK_csptrs   \fBLAPACK_GLOBAL\fP(\fBcsptrs\fP,CSPTRS)"

.PP
Definition at line 12713 of file lapacke\&.h\&.
.SS "#define LAPACK_cstedc   \fBLAPACK_GLOBAL\fP(\fBcstedc\fP,CSTEDC)"

.PP
Definition at line 13167 of file lapacke\&.h\&.
.SS "#define LAPACK_cstegr   \fBLAPACK_GLOBAL\fP(\fBcstegr\fP,CSTEGR)"

.PP
Definition at line 13171 of file lapacke\&.h\&.
.SS "#define LAPACK_cstein   \fBLAPACK_GLOBAL\fP(\fBcstein\fP,CSTEIN)"

.PP
Definition at line 13181 of file lapacke\&.h\&.
.SS "#define LAPACK_cstemr   \fBLAPACK_GLOBAL\fP(\fBcstemr\fP,CSTEMR)"

.PP
Definition at line 13163 of file lapacke\&.h\&.
.SS "#define LAPACK_csteqr   \fBLAPACK_GLOBAL\fP(\fBcsteqr\fP,CSTEQR)"

.PP
Definition at line 13159 of file lapacke\&.h\&.
.SS "#define LAPACK_csycon   \fBLAPACK_GLOBAL\fP(\fBcsycon\fP,CSYCON)"

.PP
Definition at line 12759 of file lapacke\&.h\&.
.SS "#define LAPACK_csycon_3   \fBLAPACK_GLOBAL\fP(\fBcsycon_3\fP,CSYCON_3)"

.PP
Definition at line 13798 of file lapacke\&.h\&.
.SS "#define LAPACK_csyconv   \fBLAPACK_GLOBAL\fP(\fBcsyconv\fP,CSYCONV)"

.PP
Definition at line 13667 of file lapacke\&.h\&.
.SS "#define LAPACK_csyequb   \fBLAPACK_GLOBAL\fP(\fBcsyequb\fP,CSYEQUB)"

.PP
Definition at line 12926 of file lapacke\&.h\&.
.SS "#define LAPACK_csyr   \fBLAPACK_GLOBAL\fP(\fBcsyr\fP,CSYR)"

.PP
Definition at line 13744 of file lapacke\&.h\&.
.SS "#define LAPACK_csyrfs   \fBLAPACK_GLOBAL\fP(\fBcsyrfs\fP,CSYRFS)"

.PP
Definition at line 12823 of file lapacke\&.h\&.
.SS "#define LAPACK_csyrfsx   \fBLAPACK_GLOBAL\fP(\fBcsyrfsx\fP,CSYRFSX)"

.PP
Definition at line 12828 of file lapacke\&.h\&.
.SS "#define LAPACK_csysv   \fBLAPACK_GLOBAL\fP(\fBcsysv\fP,CSYSV)"

.PP
Definition at line 13003 of file lapacke\&.h\&.
.SS "#define LAPACK_csysv_aa   \fBLAPACK_GLOBAL\fP(\fBcsysv_aa\fP,CSYSV_AA)"

.PP
Definition at line 13757 of file lapacke\&.h\&.
.SS "#define LAPACK_csysv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBcsysv_aa_2stage\fP,CSYSV_AA_2STAGE)"

.PP
Definition at line 13828 of file lapacke\&.h\&.
.SS "#define LAPACK_csysv_rk   \fBLAPACK_GLOBAL\fP(\fBcsysv_rk\fP,CSYSV_RK)"

.PP
Definition at line 13776 of file lapacke\&.h\&.
.SS "#define LAPACK_csysv_rook   \fBLAPACK_GLOBAL\fP(\fBcsysv_rook\fP,CSYSV_ROOK)"

.PP
Definition at line 13742 of file lapacke\&.h\&.
.SS "#define LAPACK_csysvx   \fBLAPACK_GLOBAL\fP(\fBcsysvx\fP,CSYSVX)"

.PP
Definition at line 13007 of file lapacke\&.h\&.
.SS "#define LAPACK_csysvxx   \fBLAPACK_GLOBAL\fP(\fBcsysvxx\fP,CSYSVXX)"

.PP
Definition at line 13012 of file lapacke\&.h\&.
.SS "#define LAPACK_csyswapr   \fBLAPACK_GLOBAL\fP(\fBcsyswapr\fP,CSYSWAPR)"

.PP
Definition at line 13668 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrf   \fBLAPACK_GLOBAL\fP(\fBcsytrf\fP,CSYTRF)"

.PP
Definition at line 12653 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrf_aa   \fBLAPACK_GLOBAL\fP(\fBcsytrf_aa\fP,CSYTRF_AA)"

.PP
Definition at line 13767 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBcsytrf_aa_2stage\fP,CSYTRF_AA_2STAGE)"

.PP
Definition at line 13838 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrf_rk   \fBLAPACK_GLOBAL\fP(\fBcsytrf_rk\fP,CSYTRF_RK)"

.PP
Definition at line 13780 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrf_rook   \fBLAPACK_GLOBAL\fP(\fBcsytrf_rook\fP,CSYTRF_ROOK)"

.PP
Definition at line 12654 of file lapacke\&.h\&.
.SS "#define LAPACK_csytri   \fBLAPACK_GLOBAL\fP(\fBcsytri\fP,CSYTRI)"

.PP
Definition at line 12869 of file lapacke\&.h\&.
.SS "#define LAPACK_csytri2   \fBLAPACK_GLOBAL\fP(\fBcsytri2\fP,CSYTRI2)"

.PP
Definition at line 13669 of file lapacke\&.h\&.
.SS "#define LAPACK_csytri2x   \fBLAPACK_GLOBAL\fP(\fBcsytri2x\fP,CSYTRI2X)"

.PP
Definition at line 13670 of file lapacke\&.h\&.
.SS "#define LAPACK_csytri_3   \fBLAPACK_GLOBAL\fP(\fBcsytri_3\fP,CSYTRI_3)"

.PP
Definition at line 13792 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs   \fBLAPACK_GLOBAL\fP(\fBcsytrs\fP,CSYTRS)"

.PP
Definition at line 12703 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs2   \fBLAPACK_GLOBAL\fP(\fBcsytrs2\fP,CSYTRS2)"

.PP
Definition at line 13671 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs_3   \fBLAPACK_GLOBAL\fP(\fBcsytrs_3\fP,CSYTRS_3)"

.PP
Definition at line 13786 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs_aa   \fBLAPACK_GLOBAL\fP(\fBcsytrs_aa\fP,CSYTRS_AA)"

.PP
Definition at line 13761 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBcsytrs_aa_2stage\fP,CSYTRS_AA_2STAGE)"

.PP
Definition at line 13832 of file lapacke\&.h\&.
.SS "#define LAPACK_csytrs_rook   \fBLAPACK_GLOBAL\fP(\fBcsytrs_rook\fP,CSYTRS_ROOK)"

.PP
Definition at line 12704 of file lapacke\&.h\&.
.SS "#define LAPACK_ctbcon   \fBLAPACK_GLOBAL\fP(\fBctbcon\fP,CTBCON)"

.PP
Definition at line 12779 of file lapacke\&.h\&.
.SS "#define LAPACK_ctbrfs   \fBLAPACK_GLOBAL\fP(\fBctbrfs\fP,CTBRFS)"

.PP
Definition at line 12849 of file lapacke\&.h\&.
.SS "#define LAPACK_ctbtrs   \fBLAPACK_GLOBAL\fP(\fBctbtrs\fP,CTBTRS)"

.PP
Definition at line 12727 of file lapacke\&.h\&.
.SS "#define LAPACK_ctfsm   \fBLAPACK_GLOBAL\fP(\fBctfsm\fP,CTFSM)"

.PP
Definition at line 13512 of file lapacke\&.h\&.
.SS "#define LAPACK_ctftri   \fBLAPACK_GLOBAL\fP(\fBctftri\fP,CTFTRI)"

.PP
Definition at line 12886 of file lapacke\&.h\&.
.SS "#define LAPACK_ctfttp   \fBLAPACK_GLOBAL\fP(\fBctfttp\fP,CTFTTP)"

.PP
Definition at line 13516 of file lapacke\&.h\&.
.SS "#define LAPACK_ctfttr   \fBLAPACK_GLOBAL\fP(\fBctfttr\fP,CTFTTR)"

.PP
Definition at line 13520 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgevc   \fBLAPACK_GLOBAL\fP(\fBctgevc\fP,CTGEVC)"

.PP
Definition at line 13271 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgexc   \fBLAPACK_GLOBAL\fP(\fBctgexc\fP,CTGEXC)"

.PP
Definition at line 13275 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgsen   \fBLAPACK_GLOBAL\fP(\fBctgsen\fP,CTGSEN)"

.PP
Definition at line 13279 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgsja   \fBLAPACK_GLOBAL\fP(\fBctgsja\fP,CTGSJA)"

.PP
Definition at line 13299 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgsna   \fBLAPACK_GLOBAL\fP(\fBctgsna\fP,CTGSNA)"

.PP
Definition at line 13287 of file lapacke\&.h\&.
.SS "#define LAPACK_ctgsyl   \fBLAPACK_GLOBAL\fP(\fBctgsyl\fP,CTGSYL)"

.PP
Definition at line 13283 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpcon   \fBLAPACK_GLOBAL\fP(\fBctpcon\fP,CTPCON)"

.PP
Definition at line 12775 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpmqrt   \fBLAPACK_GLOBAL\fP(\fBctpmqrt\fP,CTPMQRT)"

.PP
Definition at line 13725 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpqrt   \fBLAPACK_GLOBAL\fP(\fBctpqrt\fP,CTPQRT)"

.PP
Definition at line 13729 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpqrt2   \fBLAPACK_GLOBAL\fP(\fBctpqrt2\fP,CTPQRT2)"

.PP
Definition at line 13733 of file lapacke\&.h\&.
.SS "#define LAPACK_ctprfb   \fBLAPACK_GLOBAL\fP(\fBctprfb\fP,CTPRFB)"

.PP
Definition at line 13737 of file lapacke\&.h\&.
.SS "#define LAPACK_ctprfs   \fBLAPACK_GLOBAL\fP(\fBctprfs\fP,CTPRFS)"

.PP
Definition at line 12845 of file lapacke\&.h\&.
.SS "#define LAPACK_ctptri   \fBLAPACK_GLOBAL\fP(\fBctptri\fP,CTPTRI)"

.PP
Definition at line 12889 of file lapacke\&.h\&.
.SS "#define LAPACK_ctptrs   \fBLAPACK_GLOBAL\fP(\fBctptrs\fP,CTPTRS)"

.PP
Definition at line 12723 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpttf   \fBLAPACK_GLOBAL\fP(\fBctpttf\fP,CTPTTF)"

.PP
Definition at line 13524 of file lapacke\&.h\&.
.SS "#define LAPACK_ctpttr   \fBLAPACK_GLOBAL\fP(\fBctpttr\fP,CTPTTR)"

.PP
Definition at line 13528 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrcon   \fBLAPACK_GLOBAL\fP(\fBctrcon\fP,CTRCON)"

.PP
Definition at line 12771 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrevc   \fBLAPACK_GLOBAL\fP(\fBctrevc\fP,CTREVC)"

.PP
Definition at line 13231 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrexc   \fBLAPACK_GLOBAL\fP(\fBctrexc\fP,CTREXC)"

.PP
Definition at line 13239 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrrfs   \fBLAPACK_GLOBAL\fP(\fBctrrfs\fP,CTRRFS)"

.PP
Definition at line 12841 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrsen   \fBLAPACK_GLOBAL\fP(\fBctrsen\fP,CTRSEN)"

.PP
Definition at line 13243 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrsna   \fBLAPACK_GLOBAL\fP(\fBctrsna\fP,CTRSNA)"

.PP
Definition at line 13235 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrsyl   \fBLAPACK_GLOBAL\fP(\fBctrsyl\fP,CTRSYL)"

.PP
Definition at line 13247 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrtri   \fBLAPACK_GLOBAL\fP(\fBctrtri\fP,CTRTRI)"

.PP
Definition at line 12881 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrtrs   \fBLAPACK_GLOBAL\fP(\fBctrtrs\fP,CTRTRS)"

.PP
Definition at line 12719 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrttf   \fBLAPACK_GLOBAL\fP(\fBctrttf\fP,CTRTTF)"

.PP
Definition at line 13532 of file lapacke\&.h\&.
.SS "#define LAPACK_ctrttp   \fBLAPACK_GLOBAL\fP(\fBctrttp\fP,CTRTTP)"

.PP
Definition at line 13536 of file lapacke\&.h\&.
.SS "#define LAPACK_ctzrzf   \fBLAPACK_GLOBAL\fP(\fBctzrzf\fP,CTZRZF)"

.PP
Definition at line 13089 of file lapacke\&.h\&.
.SS "#define LAPACK_cunbdb   \fBLAPACK_GLOBAL\fP(\fBcunbdb\fP,CUNBDB)"

.PP
Definition at line 13672 of file lapacke\&.h\&.
.SS "#define LAPACK_cuncsd   \fBLAPACK_GLOBAL\fP(\fBcuncsd\fP,CUNCSD)"

.PP
Definition at line 13673 of file lapacke\&.h\&.
.SS "#define LAPACK_cuncsd2by1   \fBLAPACK_GLOBAL\fP(\fBcuncsd2by1\fP,CUNCSD2BY1)"

.PP
Definition at line 13674 of file lapacke\&.h\&.
.SS "#define LAPACK_cungbr   \fBLAPACK_GLOBAL\fP(\fBcungbr\fP,CUNGBR)"

.PP
Definition at line 13115 of file lapacke\&.h\&.
.SS "#define LAPACK_cunghr   \fBLAPACK_GLOBAL\fP(\fBcunghr\fP,CUNGHR)"

.PP
Definition at line 13209 of file lapacke\&.h\&.
.SS "#define LAPACK_cunglq   \fBLAPACK_GLOBAL\fP(\fBcunglq\fP,CUNGLQ)"

.PP
Definition at line 13059 of file lapacke\&.h\&.
.SS "#define LAPACK_cungql   \fBLAPACK_GLOBAL\fP(\fBcungql\fP,CUNGQL)"

.PP
Definition at line 13069 of file lapacke\&.h\&.
.SS "#define LAPACK_cungqr   \fBLAPACK_GLOBAL\fP(\fBcungqr\fP,CUNGQR)"

.PP
Definition at line 13047 of file lapacke\&.h\&.
.SS "#define LAPACK_cungrq   \fBLAPACK_GLOBAL\fP(\fBcungrq\fP,CUNGRQ)"

.PP
Definition at line 13081 of file lapacke\&.h\&.
.SS "#define LAPACK_cungtr   \fBLAPACK_GLOBAL\fP(\fBcungtr\fP,CUNGTR)"

.PP
Definition at line 13135 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmbr   \fBLAPACK_GLOBAL\fP(\fBcunmbr\fP,CUNMBR)"

.PP
Definition at line 13117 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmhr   \fBLAPACK_GLOBAL\fP(\fBcunmhr\fP,CUNMHR)"

.PP
Definition at line 13211 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmlq   \fBLAPACK_GLOBAL\fP(\fBcunmlq\fP,CUNMLQ)"

.PP
Definition at line 13061 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmql   \fBLAPACK_GLOBAL\fP(\fBcunmql\fP,CUNMQL)"

.PP
Definition at line 13073 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmqr   \fBLAPACK_GLOBAL\fP(\fBcunmqr\fP,CUNMQR)"

.PP
Definition at line 13049 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmrq   \fBLAPACK_GLOBAL\fP(\fBcunmrq\fP,CUNMRQ)"

.PP
Definition at line 13085 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmrz   \fBLAPACK_GLOBAL\fP(\fBcunmrz\fP,CUNMRZ)"

.PP
Definition at line 13093 of file lapacke\&.h\&.
.SS "#define LAPACK_cunmtr   \fBLAPACK_GLOBAL\fP(\fBcunmtr\fP,CUNMTR)"

.PP
Definition at line 13137 of file lapacke\&.h\&.
.SS "#define LAPACK_cupgtr   \fBLAPACK_GLOBAL\fP(\fBcupgtr\fP,CUPGTR)"

.PP
Definition at line 13147 of file lapacke\&.h\&.
.SS "#define LAPACK_cupmtr   \fBLAPACK_GLOBAL\fP(\fBcupmtr\fP,CUPMTR)"

.PP
Definition at line 13149 of file lapacke\&.h\&.
.SS "#define LAPACK_dbbcsd   \fBLAPACK_GLOBAL\fP(\fBdbbcsd\fP,DBBCSD)"

.PP
Definition at line 13675 of file lapacke\&.h\&.
.SS "#define LAPACK_dbdsdc   \fBLAPACK_GLOBAL\fP(\fBdbdsdc\fP,DBDSDC)"

.PP
Definition at line 13124 of file lapacke\&.h\&.
.SS "#define LAPACK_dbdsqr   \fBLAPACK_GLOBAL\fP(\fBdbdsqr\fP,DBDSQR)"

.PP
Definition at line 13120 of file lapacke\&.h\&.
.SS "#define LAPACK_dbdsvdx   \fBLAPACK_GLOBAL\fP(\fBdbdsvdx\fP,DBDSVDX)"

.PP
Definition at line 13126 of file lapacke\&.h\&.
.SS "#define LAPACK_ddisna   \fBLAPACK_GLOBAL\fP(\fBddisna\fP,DDISNA)"

.PP
Definition at line 13184 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbbrd   \fBLAPACK_GLOBAL\fP(\fBdgbbrd\fP,DGBBRD)"

.PP
Definition at line 13108 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbcon   \fBLAPACK_GLOBAL\fP(\fBdgbcon\fP,DGBCON)"

.PP
Definition at line 12734 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbequ   \fBLAPACK_GLOBAL\fP(\fBdgbequ\fP,DGBEQU)"

.PP
Definition at line 12900 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbequb   \fBLAPACK_GLOBAL\fP(\fBdgbequb\fP,DGBEQUB)"

.PP
Definition at line 12903 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbrfs   \fBLAPACK_GLOBAL\fP(\fBdgbrfs\fP,DGBRFS)"

.PP
Definition at line 12790 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbrfsx   \fBLAPACK_GLOBAL\fP(\fBdgbrfsx\fP,DGBRFSX)"

.PP
Definition at line 12793 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbsv   \fBLAPACK_GLOBAL\fP(\fBdgbsv\fP,DGBSV)"

.PP
Definition at line 12944 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbsvx   \fBLAPACK_GLOBAL\fP(\fBdgbsvx\fP,DGBSVX)"

.PP
Definition at line 12948 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbsvxx   \fBLAPACK_GLOBAL\fP(\fBdgbsvxx\fP,DGBSVXX)"

.PP
Definition at line 12951 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbtrf   \fBLAPACK_GLOBAL\fP(\fBdgbtrf\fP,DGBTRF)"

.PP
Definition at line 12614 of file lapacke\&.h\&.
.SS "#define LAPACK_dgbtrs   \fBLAPACK_GLOBAL\fP(\fBdgbtrs\fP,DGBTRS)"

.PP
Definition at line 12672 of file lapacke\&.h\&.
.SS "#define LAPACK_dgebak   \fBLAPACK_GLOBAL\fP(\fBdgebak\fP,DGEBAK)"

.PP
Definition at line 13218 of file lapacke\&.h\&.
.SS "#define LAPACK_dgebal   \fBLAPACK_GLOBAL\fP(\fBdgebal\fP,DGEBAL)"

.PP
Definition at line 13214 of file lapacke\&.h\&.
.SS "#define LAPACK_dgebrd   \fBLAPACK_GLOBAL\fP(\fBdgebrd\fP,DGEBRD)"

.PP
Definition at line 13104 of file lapacke\&.h\&.
.SS "#define LAPACK_dgecon   \fBLAPACK_GLOBAL\fP(\fBdgecon\fP,DGECON)"

.PP
Definition at line 12730 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeequ   \fBLAPACK_GLOBAL\fP(\fBdgeequ\fP,DGEEQU)"

.PP
Definition at line 12892 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeequb   \fBLAPACK_GLOBAL\fP(\fBdgeequb\fP,DGEEQUB)"

.PP
Definition at line 12895 of file lapacke\&.h\&.
.SS "#define LAPACK_dgees   \fBLAPACK_GLOBAL\fP(\fBdgees\fP,DGEES)"

.PP
Definition at line 13402 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeesx   \fBLAPACK_GLOBAL\fP(\fBdgeesx\fP,DGEESX)"

.PP
Definition at line 13406 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeev   \fBLAPACK_GLOBAL\fP(\fBdgeev\fP,DGEEV)"

.PP
Definition at line 13410 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeevx   \fBLAPACK_GLOBAL\fP(\fBdgeevx\fP,DGEEVX)"

.PP
Definition at line 13414 of file lapacke\&.h\&.
.SS "#define LAPACK_dgehrd   \fBLAPACK_GLOBAL\fP(\fBdgehrd\fP,DGEHRD)"

.PP
Definition at line 13202 of file lapacke\&.h\&.
.SS "#define LAPACK_dgejsv   \fBLAPACK_GLOBAL\fP(\fBdgejsv\fP,DGEJSV)"

.PP
Definition at line 13430 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelq   \fBLAPACK_GLOBAL\fP(\fBdgelq\fP,DGELQ)"

.PP
Definition at line 13803 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelq2   \fBLAPACK_GLOBAL\fP(\fBdgelq2\fP,DGELQ2)"

.PP
Definition at line 13590 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelqf   \fBLAPACK_GLOBAL\fP(\fBdgelqf\fP,DGELQF)"

.PP
Definition at line 13052 of file lapacke\&.h\&.
.SS "#define LAPACK_dgels   \fBLAPACK_GLOBAL\fP(\fBdgels\fP,DGELS)"

.PP
Definition at line 13302 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelsd   \fBLAPACK_GLOBAL\fP(\fBdgelsd\fP,DGELSD)"

.PP
Definition at line 13314 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelss   \fBLAPACK_GLOBAL\fP(\fBdgelss\fP,DGELSS)"

.PP
Definition at line 13310 of file lapacke\&.h\&.
.SS "#define LAPACK_dgelsy   \fBLAPACK_GLOBAL\fP(\fBdgelsy\fP,DGELSY)"

.PP
Definition at line 13306 of file lapacke\&.h\&.
.SS "#define LAPACK_dgemlq   \fBLAPACK_GLOBAL\fP(\fBdgemlq\fP,DGEMLQ)"

.PP
Definition at line 13807 of file lapacke\&.h\&.
.SS "#define LAPACK_dgemqr   \fBLAPACK_GLOBAL\fP(\fBdgemqr\fP,DGEMQR)"

.PP
Definition at line 13815 of file lapacke\&.h\&.
.SS "#define LAPACK_dgemqrt   \fBLAPACK_GLOBAL\fP(\fBdgemqrt\fP,DGEMQRT)"

.PP
Definition at line 13708 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqlf   \fBLAPACK_GLOBAL\fP(\fBdgeqlf\fP,DGEQLF)"

.PP
Definition at line 13064 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqp3   \fBLAPACK_GLOBAL\fP(\fBdgeqp3\fP,DGEQP3)"

.PP
Definition at line 13040 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqpf   \fBLAPACK_GLOBAL\fP(dgeqpf,DGEQPF)"

.PP
Definition at line 13036 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqr   \fBLAPACK_GLOBAL\fP(\fBdgeqr\fP,DGEQR)"

.PP
Definition at line 13811 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqr2   \fBLAPACK_GLOBAL\fP(\fBdgeqr2\fP,DGEQR2)"

.PP
Definition at line 13548 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqrf   \fBLAPACK_GLOBAL\fP(\fBdgeqrf\fP,DGEQRF)"

.PP
Definition at line 13032 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqrfp   \fBLAPACK_GLOBAL\fP(\fBdgeqrfp\fP,DGEQRFP)"

.PP
Definition at line 13538 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqrt   \fBLAPACK_GLOBAL\fP(\fBdgeqrt\fP,DGEQRT)"

.PP
Definition at line 13712 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqrt2   \fBLAPACK_GLOBAL\fP(\fBdgeqrt2\fP,DGEQRT2)"

.PP
Definition at line 13716 of file lapacke\&.h\&.
.SS "#define LAPACK_dgeqrt3   \fBLAPACK_GLOBAL\fP(\fBdgeqrt3\fP,DGEQRT3)"

.PP
Definition at line 13720 of file lapacke\&.h\&.
.SS "#define LAPACK_dgerfs   \fBLAPACK_GLOBAL\fP(\fBdgerfs\fP,DGERFS)"

.PP
Definition at line 12782 of file lapacke\&.h\&.
.SS "#define LAPACK_dgerfsx   \fBLAPACK_GLOBAL\fP(\fBdgerfsx\fP,DGERFSX)"

.PP
Definition at line 12785 of file lapacke\&.h\&.
.SS "#define LAPACK_dgerqf   \fBLAPACK_GLOBAL\fP(\fBdgerqf\fP,DGERQF)"

.PP
Definition at line 13076 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesdd   \fBLAPACK_GLOBAL\fP(\fBdgesdd\fP,DGESDD)"

.PP
Definition at line 13426 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesv   \fBLAPACK_GLOBAL\fP(\fBdgesv\fP,DGESV)"

.PP
Definition at line 12930 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesvd   \fBLAPACK_GLOBAL\fP(\fBdgesvd\fP,DGESVD)"

.PP
Definition at line 13418 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesvdx   \fBLAPACK_GLOBAL\fP(\fBdgesvdx\fP,DGESVDX)"

.PP
Definition at line 13422 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesvj   \fBLAPACK_GLOBAL\fP(\fBdgesvj\fP,DGESVJ)"

.PP
Definition at line 13434 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesvx   \fBLAPACK_GLOBAL\fP(\fBdgesvx\fP,DGESVX)"

.PP
Definition at line 12936 of file lapacke\&.h\&.
.SS "#define LAPACK_dgesvxx   \fBLAPACK_GLOBAL\fP(\fBdgesvxx\fP,DGESVXX)"

.PP
Definition at line 12939 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetf2   \fBLAPACK_GLOBAL\fP(\fBdgetf2\fP,DGETF2)"

.PP
Definition at line 13562 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetrf   \fBLAPACK_GLOBAL\fP(\fBdgetrf\fP,DGETRF)"

.PP
Definition at line 12606 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetrf2   \fBLAPACK_GLOBAL\fP(\fBdgetrf2\fP,DGETRF2)"

.PP
Definition at line 12610 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetri   \fBLAPACK_GLOBAL\fP(\fBdgetri\fP,DGETRI)"

.PP
Definition at line 12852 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetrs   \fBLAPACK_GLOBAL\fP(\fBdgetrs\fP,DGETRS)"

.PP
Definition at line 12668 of file lapacke\&.h\&.
.SS "#define LAPACK_dgetsls   \fBLAPACK_GLOBAL\fP(\fBdgetsls\fP,DGETSLS)"

.PP
Definition at line 13819 of file lapacke\&.h\&.
.SS "#define LAPACK_dggbak   \fBLAPACK_GLOBAL\fP(\fBdggbak\fP,DGGBAK)"

.PP
Definition at line 13262 of file lapacke\&.h\&.
.SS "#define LAPACK_dggbal   \fBLAPACK_GLOBAL\fP(\fBdggbal\fP,DGGBAL)"

.PP
Definition at line 13258 of file lapacke\&.h\&.
.SS "#define LAPACK_dgges   \fBLAPACK_GLOBAL\fP(\fBdgges\fP,DGGES)"

.PP
Definition at line 13482 of file lapacke\&.h\&.
.SS "#define LAPACK_dgges3   \fBLAPACK_GLOBAL\fP(\fBdgges3\fP,DGGES3)"

.PP
Definition at line 13486 of file lapacke\&.h\&.
.SS "#define LAPACK_dggesx   \fBLAPACK_GLOBAL\fP(\fBdggesx\fP,DGGESX)"

.PP
Definition at line 13490 of file lapacke\&.h\&.
.SS "#define LAPACK_dggev   \fBLAPACK_GLOBAL\fP(\fBdggev\fP,DGGEV)"

.PP
Definition at line 13494 of file lapacke\&.h\&.
.SS "#define LAPACK_dggev3   \fBLAPACK_GLOBAL\fP(\fBdggev3\fP,DGGEV3)"

.PP
Definition at line 13498 of file lapacke\&.h\&.
.SS "#define LAPACK_dggevx   \fBLAPACK_GLOBAL\fP(\fBdggevx\fP,DGGEVX)"

.PP
Definition at line 13502 of file lapacke\&.h\&.
.SS "#define LAPACK_dggglm   \fBLAPACK_GLOBAL\fP(\fBdggglm\fP,DGGGLM)"

.PP
Definition at line 13322 of file lapacke\&.h\&.
.SS "#define LAPACK_dgghd3   \fBLAPACK_GLOBAL\fP(\fBdgghd3\fP,DGGHD3)"

.PP
Definition at line 13254 of file lapacke\&.h\&.
.SS "#define LAPACK_dgghrd   \fBLAPACK_GLOBAL\fP(\fBdgghrd\fP,DGGHRD)"

.PP
Definition at line 13250 of file lapacke\&.h\&.
.SS "#define LAPACK_dgglse   \fBLAPACK_GLOBAL\fP(\fBdgglse\fP,DGGLSE)"

.PP
Definition at line 13318 of file lapacke\&.h\&.
.SS "#define LAPACK_dggqrf   \fBLAPACK_GLOBAL\fP(\fBdggqrf\fP,DGGQRF)"

.PP
Definition at line 13096 of file lapacke\&.h\&.
.SS "#define LAPACK_dggrqf   \fBLAPACK_GLOBAL\fP(\fBdggrqf\fP,DGGRQF)"

.PP
Definition at line 13100 of file lapacke\&.h\&.
.SS "#define LAPACK_dggsvd   \fBLAPACK_GLOBAL\fP(dggsvd,DGGSVD)"

.PP
Definition at line 13438 of file lapacke\&.h\&.
.SS "#define LAPACK_dggsvd3   \fBLAPACK_GLOBAL\fP(\fBdggsvd3\fP,DGGSVD3)"

.PP
Definition at line 13749 of file lapacke\&.h\&.
.SS "#define LAPACK_dggsvp   \fBLAPACK_GLOBAL\fP(dggsvp,DGGSVP)"

.PP
Definition at line 13290 of file lapacke\&.h\&.
.SS "#define LAPACK_dggsvp3   \fBLAPACK_GLOBAL\fP(\fBdggsvp3\fP,DGGSVP3)"

.PP
Definition at line 13294 of file lapacke\&.h\&.
.SS "#define LAPACK_dgtcon   \fBLAPACK_GLOBAL\fP(\fBdgtcon\fP,DGTCON)"

.PP
Definition at line 12738 of file lapacke\&.h\&.
.SS "#define LAPACK_dgtrfs   \fBLAPACK_GLOBAL\fP(\fBdgtrfs\fP,DGTRFS)"

.PP
Definition at line 12798 of file lapacke\&.h\&.
.SS "#define LAPACK_dgtsv   \fBLAPACK_GLOBAL\fP(\fBdgtsv\fP,DGTSV)"

.PP
Definition at line 12956 of file lapacke\&.h\&.
.SS "#define LAPACK_dgtsvx   \fBLAPACK_GLOBAL\fP(\fBdgtsvx\fP,DGTSVX)"

.PP
Definition at line 12960 of file lapacke\&.h\&.
.SS "#define LAPACK_dgttrf   \fBLAPACK_GLOBAL\fP(\fBdgttrf\fP,DGTTRF)"

.PP
Definition at line 12618 of file lapacke\&.h\&.
.SS "#define LAPACK_dgttrs   \fBLAPACK_GLOBAL\fP(\fBdgttrs\fP,DGTTRS)"

.PP
Definition at line 12676 of file lapacke\&.h\&.
.SS "#define LAPACK_dhgeqz   \fBLAPACK_GLOBAL\fP(\fBdhgeqz\fP,DHGEQZ)"

.PP
Definition at line 13266 of file lapacke\&.h\&.
.SS "#define LAPACK_dhsein   \fBLAPACK_GLOBAL\fP(\fBdhsein\fP,DHSEIN)"

.PP
Definition at line 13226 of file lapacke\&.h\&.
.SS "#define LAPACK_dhseqr   \fBLAPACK_GLOBAL\fP(\fBdhseqr\fP,DHSEQR)"

.PP
Definition at line 13222 of file lapacke\&.h\&.
.SS "#define LAPACK_dlacn2   \fBLAPACK_GLOBAL\fP(\fBdlacn2\fP,DLACN2)"

.PP
Definition at line 13552 of file lapacke\&.h\&.
.SS "#define LAPACK_dlacpy   \fBLAPACK_GLOBAL\fP(\fBdlacpy\fP,DLACPY)"

.PP
Definition at line 13556 of file lapacke\&.h\&.
.SS "#define LAPACK_dlag2s   \fBLAPACK_GLOBAL\fP(\fBdlag2s\fP,DLAG2S)"

.PP
Definition at line 13618 of file lapacke\&.h\&.
.SS "#define LAPACK_dlagge   \fBLAPACK_GLOBAL\fP(dlagge,DLAGGE)"

.PP
Definition at line 13626 of file lapacke\&.h\&.
.SS "#define LAPACK_dlagsy   \fBLAPACK_GLOBAL\fP(dlagsy,DLAGSY)"

.PP
Definition at line 13640 of file lapacke\&.h\&.
.SS "#define LAPACK_dlamch   \fBLAPACK_GLOBAL\fP(dlamch,DLAMCH)"

.PP
Definition at line 13588 of file lapacke\&.h\&.
.SS "#define LAPACK_dlange   \fBLAPACK_GLOBAL\fP(\fBdlange\fP,DLANGE)"

.PP
Definition at line 13570 of file lapacke\&.h\&.
.SS "#define LAPACK_dlansy   \fBLAPACK_GLOBAL\fP(\fBdlansy\fP,DLANSY)"

.PP
Definition at line 13580 of file lapacke\&.h\&.
.SS "#define LAPACK_dlantr   \fBLAPACK_GLOBAL\fP(\fBdlantr\fP,DLANTR)"

.PP
Definition at line 13584 of file lapacke\&.h\&.
.SS "#define LAPACK_dlapmr   \fBLAPACK_GLOBAL\fP(\fBdlapmr\fP,DLAPMR)"

.PP
Definition at line 13646 of file lapacke\&.h\&.
.SS "#define LAPACK_dlapmt   \fBLAPACK_GLOBAL\fP(\fBdlapmt\fP,DLAPMT)"

.PP
Definition at line 13650 of file lapacke\&.h\&.
.SS "#define LAPACK_dlapy2   \fBLAPACK_GLOBAL\fP(\fBdlapy2\fP,DLAPY2)"

.PP
Definition at line 13654 of file lapacke\&.h\&.
.SS "#define LAPACK_dlapy3   \fBLAPACK_GLOBAL\fP(\fBdlapy3\fP,DLAPY3)"

.PP
Definition at line 13656 of file lapacke\&.h\&.
.SS "#define LAPACK_dlarfb   \fBLAPACK_GLOBAL\fP(\fBdlarfb\fP,DLARFB)"

.PP
Definition at line 13594 of file lapacke\&.h\&.
.SS "#define LAPACK_dlarfg   \fBLAPACK_GLOBAL\fP(\fBdlarfg\fP,DLARFG)"

.PP
Definition at line 13598 of file lapacke\&.h\&.
.SS "#define LAPACK_dlarft   \fBLAPACK_GLOBAL\fP(\fBdlarft\fP,DLARFT)"

.PP
Definition at line 13606 of file lapacke\&.h\&.
.SS "#define LAPACK_dlarfx   \fBLAPACK_GLOBAL\fP(\fBdlarfx\fP,DLARFX)"

.PP
Definition at line 13610 of file lapacke\&.h\&.
.SS "#define LAPACK_dlarnv   \fBLAPACK_GLOBAL\fP(\fBdlarnv\fP,DLARNV)"

.PP
Definition at line 13544 of file lapacke\&.h\&.
.SS "#define LAPACK_dlartgp   \fBLAPACK_GLOBAL\fP(\fBdlartgp\fP,DLARTGP)"

.PP
Definition at line 13658 of file lapacke\&.h\&.
.SS "#define LAPACK_dlartgs   \fBLAPACK_GLOBAL\fP(\fBdlartgs\fP,DLARTGS)"

.PP
Definition at line 13660 of file lapacke\&.h\&.
.SS "#define LAPACK_dlascl   \fBLAPACK_GLOBAL\fP(\fBdlascl\fP,DLASCL)"

.PP
Definition at line 13630 of file lapacke\&.h\&.
.SS "#define LAPACK_dlaset   \fBLAPACK_GLOBAL\fP(\fBdlaset\fP,DLASET)"

.PP
Definition at line 13634 of file lapacke\&.h\&.
.SS "#define LAPACK_dlasrt   \fBLAPACK_GLOBAL\fP(\fBdlasrt\fP,DLASRT)"

.PP
Definition at line 13638 of file lapacke\&.h\&.
.SS "#define LAPACK_dlassq   \fBLAPACK_GLOBAL\fP(\fBdlassq\fP,DLASSQ)"

.PP
Definition at line 13602 of file lapacke\&.h\&.
.SS "#define LAPACK_dlaswp   \fBLAPACK_GLOBAL\fP(\fBdlaswp\fP,DLASWP)"

.PP
Definition at line 13566 of file lapacke\&.h\&.
.SS "#define LAPACK_dlatms   \fBLAPACK_GLOBAL\fP(dlatms,DLATMS)"

.PP
Definition at line 13614 of file lapacke\&.h\&.
.SS "#define LAPACK_dlauum   \fBLAPACK_GLOBAL\fP(\fBdlauum\fP,DLAUUM)"

.PP
Definition at line 13622 of file lapacke\&.h\&.
.SS "#define LAPACK_dopgtr   \fBLAPACK_GLOBAL\fP(\fBdopgtr\fP,DOPGTR)"

.PP
Definition at line 13142 of file lapacke\&.h\&.
.SS "#define LAPACK_dopmtr   \fBLAPACK_GLOBAL\fP(\fBdopmtr\fP,DOPMTR)"

.PP
Definition at line 13144 of file lapacke\&.h\&.
.SS "#define LAPACK_dorbdb   \fBLAPACK_GLOBAL\fP(\fBdorbdb\fP,DORBDB)"

.PP
Definition at line 13676 of file lapacke\&.h\&.
.SS "#define LAPACK_dorcsd   \fBLAPACK_GLOBAL\fP(\fBdorcsd\fP,DORCSD)"

.PP
Definition at line 13677 of file lapacke\&.h\&.
.SS "#define LAPACK_dorcsd2by1   \fBLAPACK_GLOBAL\fP(\fBdorcsd2by1\fP,DORCSD2BY1)"

.PP
Definition at line 13678 of file lapacke\&.h\&.
.SS "#define LAPACK_dorgbr   \fBLAPACK_GLOBAL\fP(\fBdorgbr\fP,DORGBR)"

.PP
Definition at line 13112 of file lapacke\&.h\&.
.SS "#define LAPACK_dorghr   \fBLAPACK_GLOBAL\fP(\fBdorghr\fP,DORGHR)"

.PP
Definition at line 13206 of file lapacke\&.h\&.
.SS "#define LAPACK_dorglq   \fBLAPACK_GLOBAL\fP(\fBdorglq\fP,DORGLQ)"

.PP
Definition at line 13056 of file lapacke\&.h\&.
.SS "#define LAPACK_dorgql   \fBLAPACK_GLOBAL\fP(\fBdorgql\fP,DORGQL)"

.PP
Definition at line 13068 of file lapacke\&.h\&.
.SS "#define LAPACK_dorgqr   \fBLAPACK_GLOBAL\fP(\fBdorgqr\fP,DORGQR)"

.PP
Definition at line 13044 of file lapacke\&.h\&.
.SS "#define LAPACK_dorgrq   \fBLAPACK_GLOBAL\fP(\fBdorgrq\fP,DORGRQ)"

.PP
Definition at line 13080 of file lapacke\&.h\&.
.SS "#define LAPACK_dorgtr   \fBLAPACK_GLOBAL\fP(\fBdorgtr\fP,DORGTR)"

.PP
Definition at line 13130 of file lapacke\&.h\&.
.SS "#define LAPACK_dormbr   \fBLAPACK_GLOBAL\fP(\fBdormbr\fP,DORMBR)"

.PP
Definition at line 13114 of file lapacke\&.h\&.
.SS "#define LAPACK_dormhr   \fBLAPACK_GLOBAL\fP(\fBdormhr\fP,DORMHR)"

.PP
Definition at line 13208 of file lapacke\&.h\&.
.SS "#define LAPACK_dormlq   \fBLAPACK_GLOBAL\fP(\fBdormlq\fP,DORMLQ)"

.PP
Definition at line 13058 of file lapacke\&.h\&.
.SS "#define LAPACK_dormql   \fBLAPACK_GLOBAL\fP(\fBdormql\fP,DORMQL)"

.PP
Definition at line 13072 of file lapacke\&.h\&.
.SS "#define LAPACK_dormqr   \fBLAPACK_GLOBAL\fP(\fBdormqr\fP,DORMQR)"

.PP
Definition at line 13046 of file lapacke\&.h\&.
.SS "#define LAPACK_dormrq   \fBLAPACK_GLOBAL\fP(\fBdormrq\fP,DORMRQ)"

.PP
Definition at line 13084 of file lapacke\&.h\&.
.SS "#define LAPACK_dormrz   \fBLAPACK_GLOBAL\fP(\fBdormrz\fP,DORMRZ)"

.PP
Definition at line 13092 of file lapacke\&.h\&.
.SS "#define LAPACK_dormtr   \fBLAPACK_GLOBAL\fP(\fBdormtr\fP,DORMTR)"

.PP
Definition at line 13132 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbcon   \fBLAPACK_GLOBAL\fP(\fBdpbcon\fP,DPBCON)"

.PP
Definition at line 12750 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbequ   \fBLAPACK_GLOBAL\fP(\fBdpbequ\fP,DPBEQU)"

.PP
Definition at line 12920 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbrfs   \fBLAPACK_GLOBAL\fP(\fBdpbrfs\fP,DPBRFS)"

.PP
Definition at line 12814 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbstf   \fBLAPACK_GLOBAL\fP(\fBdpbstf\fP,DPBSTF)"

.PP
Definition at line 13198 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbsv   \fBLAPACK_GLOBAL\fP(\fBdpbsv\fP,DPBSV)"

.PP
Definition at line 12986 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbsvx   \fBLAPACK_GLOBAL\fP(\fBdpbsvx\fP,DPBSVX)"

.PP
Definition at line 12990 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbtrf   \fBLAPACK_GLOBAL\fP(\fBdpbtrf\fP,DPBTRF)"

.PP
Definition at line 12642 of file lapacke\&.h\&.
.SS "#define LAPACK_dpbtrs   \fBLAPACK_GLOBAL\fP(\fBdpbtrs\fP,DPBTRS)"

.PP
Definition at line 12692 of file lapacke\&.h\&.
.SS "#define LAPACK_dpftrf   \fBLAPACK_GLOBAL\fP(\fBdpftrf\fP,DPFTRF)"

.PP
Definition at line 12633 of file lapacke\&.h\&.
.SS "#define LAPACK_dpftri   \fBLAPACK_GLOBAL\fP(\fBdpftri\fP,DPFTRI)"

.PP
Definition at line 12859 of file lapacke\&.h\&.
.SS "#define LAPACK_dpftrs   \fBLAPACK_GLOBAL\fP(\fBdpftrs\fP,DPFTRS)"

.PP
Definition at line 12683 of file lapacke\&.h\&.
.SS "#define LAPACK_dpocon   \fBLAPACK_GLOBAL\fP(\fBdpocon\fP,DPOCON)"

.PP
Definition at line 12742 of file lapacke\&.h\&.
.SS "#define LAPACK_dpoequ   \fBLAPACK_GLOBAL\fP(\fBdpoequ\fP,DPOEQU)"

.PP
Definition at line 12908 of file lapacke\&.h\&.
.SS "#define LAPACK_dpoequb   \fBLAPACK_GLOBAL\fP(\fBdpoequb\fP,DPOEQUB)"

.PP
Definition at line 12911 of file lapacke\&.h\&.
.SS "#define LAPACK_dporfs   \fBLAPACK_GLOBAL\fP(\fBdporfs\fP,DPORFS)"

.PP
Definition at line 12802 of file lapacke\&.h\&.
.SS "#define LAPACK_dporfsx   \fBLAPACK_GLOBAL\fP(\fBdporfsx\fP,DPORFSX)"

.PP
Definition at line 12805 of file lapacke\&.h\&.
.SS "#define LAPACK_dposv   \fBLAPACK_GLOBAL\fP(\fBdposv\fP,DPOSV)"

.PP
Definition at line 12964 of file lapacke\&.h\&.
.SS "#define LAPACK_dposvx   \fBLAPACK_GLOBAL\fP(\fBdposvx\fP,DPOSVX)"

.PP
Definition at line 12970 of file lapacke\&.h\&.
.SS "#define LAPACK_dposvxx   \fBLAPACK_GLOBAL\fP(\fBdposvxx\fP,DPOSVXX)"

.PP
Definition at line 12973 of file lapacke\&.h\&.
.SS "#define LAPACK_dpotrf   \fBLAPACK_GLOBAL\fP(\fBdpotrf\fP,DPOTRF)"

.PP
Definition at line 12622 of file lapacke\&.h\&.
.SS "#define LAPACK_dpotrf2   \fBLAPACK_GLOBAL\fP(\fBdpotrf2\fP,DPOTRF2)"

.PP
Definition at line 12626 of file lapacke\&.h\&.
.SS "#define LAPACK_dpotri   \fBLAPACK_GLOBAL\fP(\fBdpotri\fP,DPOTRI)"

.PP
Definition at line 12856 of file lapacke\&.h\&.
.SS "#define LAPACK_dpotrs   \fBLAPACK_GLOBAL\fP(\fBdpotrs\fP,DPOTRS)"

.PP
Definition at line 12680 of file lapacke\&.h\&.
.SS "#define LAPACK_dppcon   \fBLAPACK_GLOBAL\fP(\fBdppcon\fP,DPPCON)"

.PP
Definition at line 12746 of file lapacke\&.h\&.
.SS "#define LAPACK_dppequ   \fBLAPACK_GLOBAL\fP(\fBdppequ\fP,DPPEQU)"

.PP
Definition at line 12916 of file lapacke\&.h\&.
.SS "#define LAPACK_dpprfs   \fBLAPACK_GLOBAL\fP(\fBdpprfs\fP,DPPRFS)"

.PP
Definition at line 12810 of file lapacke\&.h\&.
.SS "#define LAPACK_dppsv   \fBLAPACK_GLOBAL\fP(\fBdppsv\fP,DPPSV)"

.PP
Definition at line 12978 of file lapacke\&.h\&.
.SS "#define LAPACK_dppsvx   \fBLAPACK_GLOBAL\fP(\fBdppsvx\fP,DPPSVX)"

.PP
Definition at line 12982 of file lapacke\&.h\&.
.SS "#define LAPACK_dpptrf   \fBLAPACK_GLOBAL\fP(\fBdpptrf\fP,DPPTRF)"

.PP
Definition at line 12638 of file lapacke\&.h\&.
.SS "#define LAPACK_dpptri   \fBLAPACK_GLOBAL\fP(\fBdpptri\fP,DPPTRI)"

.PP
Definition at line 12864 of file lapacke\&.h\&.
.SS "#define LAPACK_dpptrs   \fBLAPACK_GLOBAL\fP(\fBdpptrs\fP,DPPTRS)"

.PP
Definition at line 12688 of file lapacke\&.h\&.
.SS "#define LAPACK_dpstrf   \fBLAPACK_GLOBAL\fP(\fBdpstrf\fP,DPSTRF)"

.PP
Definition at line 12629 of file lapacke\&.h\&.
.SS "#define LAPACK_dptcon   \fBLAPACK_GLOBAL\fP(\fBdptcon\fP,DPTCON)"

.PP
Definition at line 12754 of file lapacke\&.h\&.
.SS "#define LAPACK_dpteqr   \fBLAPACK_GLOBAL\fP(\fBdpteqr\fP,DPTEQR)"

.PP
Definition at line 13174 of file lapacke\&.h\&.
.SS "#define LAPACK_dptrfs   \fBLAPACK_GLOBAL\fP(\fBdptrfs\fP,DPTRFS)"

.PP
Definition at line 12818 of file lapacke\&.h\&.
.SS "#define LAPACK_dptsv   \fBLAPACK_GLOBAL\fP(\fBdptsv\fP,DPTSV)"

.PP
Definition at line 12994 of file lapacke\&.h\&.
.SS "#define LAPACK_dptsvx   \fBLAPACK_GLOBAL\fP(\fBdptsvx\fP,DPTSVX)"

.PP
Definition at line 12998 of file lapacke\&.h\&.
.SS "#define LAPACK_dpttrf   \fBLAPACK_GLOBAL\fP(\fBdpttrf\fP,DPTTRF)"

.PP
Definition at line 12646 of file lapacke\&.h\&.
.SS "#define LAPACK_dpttrs   \fBLAPACK_GLOBAL\fP(\fBdpttrs\fP,DPTTRS)"

.PP
Definition at line 12696 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbev   \fBLAPACK_GLOBAL\fP(\fBdsbev\fP,DSBEV)"

.PP
Definition at line 13370 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbev_2stage   \fBLAPACK_GLOBAL\fP(\fBdsbev_2stage\fP,DSBEV_2STAGE)"

.PP
Definition at line 13374 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbevd   \fBLAPACK_GLOBAL\fP(\fBdsbevd\fP,DSBEVD)"

.PP
Definition at line 13378 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbevd_2stage   \fBLAPACK_GLOBAL\fP(\fBdsbevd_2stage\fP,DSBEVD_2STAGE)"

.PP
Definition at line 13382 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbevx   \fBLAPACK_GLOBAL\fP(\fBdsbevx\fP,DSBEVX)"

.PP
Definition at line 13386 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbevx_2stage   \fBLAPACK_GLOBAL\fP(\fBdsbevx_2stage\fP,DSBEVX_2STAGE)"

.PP
Definition at line 13390 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbgst   \fBLAPACK_GLOBAL\fP(\fBdsbgst\fP,DSBGST)"

.PP
Definition at line 13194 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbgv   \fBLAPACK_GLOBAL\fP(\fBdsbgv\fP,DSBGV)"

.PP
Definition at line 13470 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbgvd   \fBLAPACK_GLOBAL\fP(\fBdsbgvd\fP,DSBGVD)"

.PP
Definition at line 13474 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbgvx   \fBLAPACK_GLOBAL\fP(\fBdsbgvx\fP,DSBGVX)"

.PP
Definition at line 13478 of file lapacke\&.h\&.
.SS "#define LAPACK_dsbtrd   \fBLAPACK_GLOBAL\fP(\fBdsbtrd\fP,DSBTRD)"

.PP
Definition at line 13152 of file lapacke\&.h\&.
.SS "#define LAPACK_dsfrk   \fBLAPACK_GLOBAL\fP(\fBdsfrk\fP,DSFRK)"

.PP
Definition at line 13505 of file lapacke\&.h\&.
.SS "#define LAPACK_dsgesv   \fBLAPACK_GLOBAL\fP(\fBdsgesv\fP,DSGESV)"

.PP
Definition at line 12933 of file lapacke\&.h\&.
.SS "#define LAPACK_dspcon   \fBLAPACK_GLOBAL\fP(\fBdspcon\fP,DSPCON)"

.PP
Definition at line 12764 of file lapacke\&.h\&.
.SS "#define LAPACK_dspev   \fBLAPACK_GLOBAL\fP(\fBdspev\fP,DSPEV)"

.PP
Definition at line 13358 of file lapacke\&.h\&.
.SS "#define LAPACK_dspevd   \fBLAPACK_GLOBAL\fP(\fBdspevd\fP,DSPEVD)"

.PP
Definition at line 13362 of file lapacke\&.h\&.
.SS "#define LAPACK_dspevx   \fBLAPACK_GLOBAL\fP(\fBdspevx\fP,DSPEVX)"

.PP
Definition at line 13366 of file lapacke\&.h\&.
.SS "#define LAPACK_dspgst   \fBLAPACK_GLOBAL\fP(\fBdspgst\fP,DSPGST)"

.PP
Definition at line 13190 of file lapacke\&.h\&.
.SS "#define LAPACK_dspgv   \fBLAPACK_GLOBAL\fP(\fBdspgv\fP,DSPGV)"

.PP
Definition at line 13458 of file lapacke\&.h\&.
.SS "#define LAPACK_dspgvd   \fBLAPACK_GLOBAL\fP(\fBdspgvd\fP,DSPGVD)"

.PP
Definition at line 13462 of file lapacke\&.h\&.
.SS "#define LAPACK_dspgvx   \fBLAPACK_GLOBAL\fP(\fBdspgvx\fP,DSPGVX)"

.PP
Definition at line 13466 of file lapacke\&.h\&.
.SS "#define LAPACK_dsposv   \fBLAPACK_GLOBAL\fP(\fBdsposv\fP,DSPOSV)"

.PP
Definition at line 12967 of file lapacke\&.h\&.
.SS "#define LAPACK_dsprfs   \fBLAPACK_GLOBAL\fP(\fBdsprfs\fP,DSPRFS)"

.PP
Definition at line 12834 of file lapacke\&.h\&.
.SS "#define LAPACK_dspsv   \fBLAPACK_GLOBAL\fP(\fBdspsv\fP,DSPSV)"

.PP
Definition at line 13020 of file lapacke\&.h\&.
.SS "#define LAPACK_dspsvx   \fBLAPACK_GLOBAL\fP(\fBdspsvx\fP,DSPSVX)"

.PP
Definition at line 13024 of file lapacke\&.h\&.
.SS "#define LAPACK_dsptrd   \fBLAPACK_GLOBAL\fP(\fBdsptrd\fP,DSPTRD)"

.PP
Definition at line 13140 of file lapacke\&.h\&.
.SS "#define LAPACK_dsptrf   \fBLAPACK_GLOBAL\fP(\fBdsptrf\fP,DSPTRF)"

.PP
Definition at line 12662 of file lapacke\&.h\&.
.SS "#define LAPACK_dsptri   \fBLAPACK_GLOBAL\fP(\fBdsptri\fP,DSPTRI)"

.PP
Definition at line 12874 of file lapacke\&.h\&.
.SS "#define LAPACK_dsptrs   \fBLAPACK_GLOBAL\fP(\fBdsptrs\fP,DSPTRS)"

.PP
Definition at line 12712 of file lapacke\&.h\&.
.SS "#define LAPACK_dstebz   \fBLAPACK_GLOBAL\fP(\fBdstebz\fP,DSTEBZ)"

.PP
Definition at line 13178 of file lapacke\&.h\&.
.SS "#define LAPACK_dstedc   \fBLAPACK_GLOBAL\fP(\fBdstedc\fP,DSTEDC)"

.PP
Definition at line 13166 of file lapacke\&.h\&.
.SS "#define LAPACK_dstegr   \fBLAPACK_GLOBAL\fP(\fBdstegr\fP,DSTEGR)"

.PP
Definition at line 13170 of file lapacke\&.h\&.
.SS "#define LAPACK_dstein   \fBLAPACK_GLOBAL\fP(\fBdstein\fP,DSTEIN)"

.PP
Definition at line 13180 of file lapacke\&.h\&.
.SS "#define LAPACK_dstemr   \fBLAPACK_GLOBAL\fP(\fBdstemr\fP,DSTEMR)"

.PP
Definition at line 13162 of file lapacke\&.h\&.
.SS "#define LAPACK_dsteqr   \fBLAPACK_GLOBAL\fP(\fBdsteqr\fP,DSTEQR)"

.PP
Definition at line 13158 of file lapacke\&.h\&.
.SS "#define LAPACK_dsterf   \fBLAPACK_GLOBAL\fP(\fBdsterf\fP,DSTERF)"

.PP
Definition at line 13156 of file lapacke\&.h\&.
.SS "#define LAPACK_dstev   \fBLAPACK_GLOBAL\fP(\fBdstev\fP,DSTEV)"

.PP
Definition at line 13394 of file lapacke\&.h\&.
.SS "#define LAPACK_dstevd   \fBLAPACK_GLOBAL\fP(\fBdstevd\fP,DSTEVD)"

.PP
Definition at line 13396 of file lapacke\&.h\&.
.SS "#define LAPACK_dstevr   \fBLAPACK_GLOBAL\fP(\fBdstevr\fP,DSTEVR)"

.PP
Definition at line 13400 of file lapacke\&.h\&.
.SS "#define LAPACK_dstevx   \fBLAPACK_GLOBAL\fP(\fBdstevx\fP,DSTEVX)"

.PP
Definition at line 13398 of file lapacke\&.h\&.
.SS "#define LAPACK_dsycon   \fBLAPACK_GLOBAL\fP(\fBdsycon\fP,DSYCON)"

.PP
Definition at line 12758 of file lapacke\&.h\&.
.SS "#define LAPACK_dsycon_3   \fBLAPACK_GLOBAL\fP(\fBdsycon_3\fP,DSYCON_3)"

.PP
Definition at line 13797 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyconv   \fBLAPACK_GLOBAL\fP(\fBdsyconv\fP,DSYCONV)"

.PP
Definition at line 13679 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyequb   \fBLAPACK_GLOBAL\fP(\fBdsyequb\fP,DSYEQUB)"

.PP
Definition at line 12923 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyev   \fBLAPACK_GLOBAL\fP(\fBdsyev\fP,DSYEV)"

.PP
Definition at line 13326 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyev_2stage   \fBLAPACK_GLOBAL\fP(\fBdsyev_2stage\fP,DSYEV_2STAGE)"

.PP
Definition at line 13330 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevd   \fBLAPACK_GLOBAL\fP(\fBdsyevd\fP,DSYEVD)"

.PP
Definition at line 13334 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevd_2stage   \fBLAPACK_GLOBAL\fP(\fBdsyevd_2stage\fP,DSYEVD_2STAGE)"

.PP
Definition at line 13338 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevr   \fBLAPACK_GLOBAL\fP(\fBdsyevr\fP,DSYEVR)"

.PP
Definition at line 13350 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevr_2stage   \fBLAPACK_GLOBAL\fP(\fBdsyevr_2stage\fP,DSYEVR_2STAGE)"

.PP
Definition at line 13354 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevx   \fBLAPACK_GLOBAL\fP(\fBdsyevx\fP,DSYEVX)"

.PP
Definition at line 13342 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyevx_2stage   \fBLAPACK_GLOBAL\fP(\fBdsyevx_2stage\fP,DSYEVX_2STAGE)"

.PP
Definition at line 13346 of file lapacke\&.h\&.
.SS "#define LAPACK_dsygst   \fBLAPACK_GLOBAL\fP(\fBdsygst\fP,DSYGST)"

.PP
Definition at line 13186 of file lapacke\&.h\&.
.SS "#define LAPACK_dsygv   \fBLAPACK_GLOBAL\fP(\fBdsygv\fP,DSYGV)"

.PP
Definition at line 13442 of file lapacke\&.h\&.
.SS "#define LAPACK_dsygv_2stage   \fBLAPACK_GLOBAL\fP(\fBdsygv_2stage\fP,DSYGV_2STAGE)"

.PP
Definition at line 13446 of file lapacke\&.h\&.
.SS "#define LAPACK_dsygvd   \fBLAPACK_GLOBAL\fP(\fBdsygvd\fP,DSYGVD)"

.PP
Definition at line 13450 of file lapacke\&.h\&.
.SS "#define LAPACK_dsygvx   \fBLAPACK_GLOBAL\fP(\fBdsygvx\fP,DSYGVX)"

.PP
Definition at line 13454 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyrfs   \fBLAPACK_GLOBAL\fP(\fBdsyrfs\fP,DSYRFS)"

.PP
Definition at line 12822 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyrfsx   \fBLAPACK_GLOBAL\fP(\fBdsyrfsx\fP,DSYRFSX)"

.PP
Definition at line 12825 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysv   \fBLAPACK_GLOBAL\fP(\fBdsysv\fP,DSYSV)"

.PP
Definition at line 13002 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysv_aa   \fBLAPACK_GLOBAL\fP(\fBdsysv_aa\fP,DSYSV_AA)"

.PP
Definition at line 13754 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBdsysv_aa_2stage\fP,DSYSV_AA_2STAGE)"

.PP
Definition at line 13825 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysv_rk   \fBLAPACK_GLOBAL\fP(\fBdsysv_rk\fP,DSYSV_RK)"

.PP
Definition at line 13773 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysv_rook   \fBLAPACK_GLOBAL\fP(\fBdsysv_rook\fP,DSYSV_ROOK)"

.PP
Definition at line 13741 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysvx   \fBLAPACK_GLOBAL\fP(\fBdsysvx\fP,DSYSVX)"

.PP
Definition at line 13006 of file lapacke\&.h\&.
.SS "#define LAPACK_dsysvxx   \fBLAPACK_GLOBAL\fP(\fBdsysvxx\fP,DSYSVXX)"

.PP
Definition at line 13009 of file lapacke\&.h\&.
.SS "#define LAPACK_dsyswapr   \fBLAPACK_GLOBAL\fP(\fBdsyswapr\fP,DSYSWAPR)"

.PP
Definition at line 13680 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrd   \fBLAPACK_GLOBAL\fP(\fBdsytrd\fP,DSYTRD)"

.PP
Definition at line 13128 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrf   \fBLAPACK_GLOBAL\fP(\fBdsytrf\fP,DSYTRF)"

.PP
Definition at line 12651 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrf_aa   \fBLAPACK_GLOBAL\fP(\fBdsytrf_aa\fP,DSYTRF_AA)"

.PP
Definition at line 13766 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBdsytrf_aa_2stage\fP,DSYTRF_AA_2STAGE)"

.PP
Definition at line 13837 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrf_rk   \fBLAPACK_GLOBAL\fP(\fBdsytrf_rk\fP,DSYTRF_RK)"

.PP
Definition at line 13779 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrf_rook   \fBLAPACK_GLOBAL\fP(\fBdsytrf_rook\fP,DSYTRF_ROOK)"

.PP
Definition at line 12652 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytri   \fBLAPACK_GLOBAL\fP(\fBdsytri\fP,DSYTRI)"

.PP
Definition at line 12868 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytri2   \fBLAPACK_GLOBAL\fP(\fBdsytri2\fP,DSYTRI2)"

.PP
Definition at line 13681 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytri2x   \fBLAPACK_GLOBAL\fP(\fBdsytri2x\fP,DSYTRI2X)"

.PP
Definition at line 13682 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytri_3   \fBLAPACK_GLOBAL\fP(\fBdsytri_3\fP,DSYTRI_3)"

.PP
Definition at line 13791 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs   \fBLAPACK_GLOBAL\fP(\fBdsytrs\fP,DSYTRS)"

.PP
Definition at line 12701 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs2   \fBLAPACK_GLOBAL\fP(\fBdsytrs2\fP,DSYTRS2)"

.PP
Definition at line 13683 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs_3   \fBLAPACK_GLOBAL\fP(\fBdsytrs_3\fP,DSYTRS_3)"

.PP
Definition at line 13785 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs_aa   \fBLAPACK_GLOBAL\fP(\fBdsytrs_aa\fP,DSYTRS_AA)"

.PP
Definition at line 13760 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBdsytrs_aa_2stage\fP,DSYTRS_AA_2STAGE)"

.PP
Definition at line 13831 of file lapacke\&.h\&.
.SS "#define LAPACK_dsytrs_rook   \fBLAPACK_GLOBAL\fP(\fBdsytrs_rook\fP,DSYTRS_ROOK)"

.PP
Definition at line 12702 of file lapacke\&.h\&.
.SS "#define LAPACK_dtbcon   \fBLAPACK_GLOBAL\fP(\fBdtbcon\fP,DTBCON)"

.PP
Definition at line 12778 of file lapacke\&.h\&.
.SS "#define LAPACK_dtbrfs   \fBLAPACK_GLOBAL\fP(\fBdtbrfs\fP,DTBRFS)"

.PP
Definition at line 12848 of file lapacke\&.h\&.
.SS "#define LAPACK_dtbtrs   \fBLAPACK_GLOBAL\fP(\fBdtbtrs\fP,DTBTRS)"

.PP
Definition at line 12726 of file lapacke\&.h\&.
.SS "#define LAPACK_dtfsm   \fBLAPACK_GLOBAL\fP(\fBdtfsm\fP,DTFSM)"

.PP
Definition at line 13509 of file lapacke\&.h\&.
.SS "#define LAPACK_dtftri   \fBLAPACK_GLOBAL\fP(\fBdtftri\fP,DTFTRI)"

.PP
Definition at line 12883 of file lapacke\&.h\&.
.SS "#define LAPACK_dtfttp   \fBLAPACK_GLOBAL\fP(\fBdtfttp\fP,DTFTTP)"

.PP
Definition at line 13513 of file lapacke\&.h\&.
.SS "#define LAPACK_dtfttr   \fBLAPACK_GLOBAL\fP(\fBdtfttr\fP,DTFTTR)"

.PP
Definition at line 13517 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgevc   \fBLAPACK_GLOBAL\fP(\fBdtgevc\fP,DTGEVC)"

.PP
Definition at line 13270 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgexc   \fBLAPACK_GLOBAL\fP(\fBdtgexc\fP,DTGEXC)"

.PP
Definition at line 13274 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgsen   \fBLAPACK_GLOBAL\fP(\fBdtgsen\fP,DTGSEN)"

.PP
Definition at line 13278 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgsja   \fBLAPACK_GLOBAL\fP(\fBdtgsja\fP,DTGSJA)"

.PP
Definition at line 13298 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgsna   \fBLAPACK_GLOBAL\fP(\fBdtgsna\fP,DTGSNA)"

.PP
Definition at line 13286 of file lapacke\&.h\&.
.SS "#define LAPACK_dtgsyl   \fBLAPACK_GLOBAL\fP(\fBdtgsyl\fP,DTGSYL)"

.PP
Definition at line 13282 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpcon   \fBLAPACK_GLOBAL\fP(\fBdtpcon\fP,DTPCON)"

.PP
Definition at line 12774 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpmqrt   \fBLAPACK_GLOBAL\fP(\fBdtpmqrt\fP,DTPMQRT)"

.PP
Definition at line 13724 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpqrt   \fBLAPACK_GLOBAL\fP(\fBdtpqrt\fP,DTPQRT)"

.PP
Definition at line 13728 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpqrt2   \fBLAPACK_GLOBAL\fP(\fBdtpqrt2\fP,DTPQRT2)"

.PP
Definition at line 13732 of file lapacke\&.h\&.
.SS "#define LAPACK_dtprfb   \fBLAPACK_GLOBAL\fP(\fBdtprfb\fP,DTPRFB)"

.PP
Definition at line 13736 of file lapacke\&.h\&.
.SS "#define LAPACK_dtprfs   \fBLAPACK_GLOBAL\fP(\fBdtprfs\fP,DTPRFS)"

.PP
Definition at line 12844 of file lapacke\&.h\&.
.SS "#define LAPACK_dtptri   \fBLAPACK_GLOBAL\fP(\fBdtptri\fP,DTPTRI)"

.PP
Definition at line 12888 of file lapacke\&.h\&.
.SS "#define LAPACK_dtptrs   \fBLAPACK_GLOBAL\fP(\fBdtptrs\fP,DTPTRS)"

.PP
Definition at line 12722 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpttf   \fBLAPACK_GLOBAL\fP(\fBdtpttf\fP,DTPTTF)"

.PP
Definition at line 13521 of file lapacke\&.h\&.
.SS "#define LAPACK_dtpttr   \fBLAPACK_GLOBAL\fP(\fBdtpttr\fP,DTPTTR)"

.PP
Definition at line 13525 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrcon   \fBLAPACK_GLOBAL\fP(\fBdtrcon\fP,DTRCON)"

.PP
Definition at line 12770 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrevc   \fBLAPACK_GLOBAL\fP(\fBdtrevc\fP,DTREVC)"

.PP
Definition at line 13230 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrexc   \fBLAPACK_GLOBAL\fP(\fBdtrexc\fP,DTREXC)"

.PP
Definition at line 13238 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrrfs   \fBLAPACK_GLOBAL\fP(\fBdtrrfs\fP,DTRRFS)"

.PP
Definition at line 12840 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrsen   \fBLAPACK_GLOBAL\fP(\fBdtrsen\fP,DTRSEN)"

.PP
Definition at line 13242 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrsna   \fBLAPACK_GLOBAL\fP(\fBdtrsna\fP,DTRSNA)"

.PP
Definition at line 13234 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrsyl   \fBLAPACK_GLOBAL\fP(\fBdtrsyl\fP,DTRSYL)"

.PP
Definition at line 13246 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrtri   \fBLAPACK_GLOBAL\fP(\fBdtrtri\fP,DTRTRI)"

.PP
Definition at line 12880 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrtrs   \fBLAPACK_GLOBAL\fP(\fBdtrtrs\fP,DTRTRS)"

.PP
Definition at line 12718 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrttf   \fBLAPACK_GLOBAL\fP(\fBdtrttf\fP,DTRTTF)"

.PP
Definition at line 13529 of file lapacke\&.h\&.
.SS "#define LAPACK_dtrttp   \fBLAPACK_GLOBAL\fP(\fBdtrttp\fP,DTRTTP)"

.PP
Definition at line 13533 of file lapacke\&.h\&.
.SS "#define LAPACK_dtzrzf   \fBLAPACK_GLOBAL\fP(\fBdtzrzf\fP,DTZRZF)"

.PP
Definition at line 13088 of file lapacke\&.h\&.
.SS "#define LAPACK_ilaver   \fBLAPACK_GLOBAL\fP(ilaver,ILAVER)"

.PP
Definition at line 13746 of file lapacke\&.h\&.
.SS "#define lapack_int   int"

.PP
Definition at line 47 of file lapacke\&.h\&.
.SS "#define lapack_logical   \fBlapack_int\fP"

.PP
Definition at line 51 of file lapacke\&.h\&.
.SS "#define LAPACK_lsame   \fBLAPACK_GLOBAL\fP(\fBlsame\fP,LSAME)"

.PP
Definition at line 145 of file lapacke\&.h\&.
.SS "#define LAPACK_ROW_MAJOR   101"

.PP
Definition at line 119 of file lapacke\&.h\&.
.SS "#define LAPACK_sbbcsd   \fBLAPACK_GLOBAL\fP(\fBsbbcsd\fP,SBBCSD)"

.PP
Definition at line 13684 of file lapacke\&.h\&.
.SS "#define LAPACK_sbdsdc   \fBLAPACK_GLOBAL\fP(\fBsbdsdc\fP,SBDSDC)"

.PP
Definition at line 13123 of file lapacke\&.h\&.
.SS "#define LAPACK_sbdsqr   \fBLAPACK_GLOBAL\fP(\fBsbdsqr\fP,SBDSQR)"

.PP
Definition at line 13119 of file lapacke\&.h\&.
.SS "#define LAPACK_sbdsvdx   \fBLAPACK_GLOBAL\fP(\fBsbdsvdx\fP,SBDSVDX)"

.PP
Definition at line 13125 of file lapacke\&.h\&.
.SS "#define LAPACK_sdisna   \fBLAPACK_GLOBAL\fP(\fBsdisna\fP,SDISNA)"

.PP
Definition at line 13183 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbbrd   \fBLAPACK_GLOBAL\fP(\fBsgbbrd\fP,SGBBRD)"

.PP
Definition at line 13107 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbcon   \fBLAPACK_GLOBAL\fP(\fBsgbcon\fP,SGBCON)"

.PP
Definition at line 12733 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbequ   \fBLAPACK_GLOBAL\fP(\fBsgbequ\fP,SGBEQU)"

.PP
Definition at line 12899 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbequb   \fBLAPACK_GLOBAL\fP(\fBsgbequb\fP,SGBEQUB)"

.PP
Definition at line 12904 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbrfs   \fBLAPACK_GLOBAL\fP(\fBsgbrfs\fP,SGBRFS)"

.PP
Definition at line 12789 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbrfsx   \fBLAPACK_GLOBAL\fP(\fBsgbrfsx\fP,SGBRFSX)"

.PP
Definition at line 12794 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbsv   \fBLAPACK_GLOBAL\fP(\fBsgbsv\fP,SGBSV)"

.PP
Definition at line 12943 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbsvx   \fBLAPACK_GLOBAL\fP(\fBsgbsvx\fP,SGBSVX)"

.PP
Definition at line 12947 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbsvxx   \fBLAPACK_GLOBAL\fP(\fBsgbsvxx\fP,SGBSVXX)"

.PP
Definition at line 12952 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbtrf   \fBLAPACK_GLOBAL\fP(\fBsgbtrf\fP,SGBTRF)"

.PP
Definition at line 12613 of file lapacke\&.h\&.
.SS "#define LAPACK_sgbtrs   \fBLAPACK_GLOBAL\fP(\fBsgbtrs\fP,SGBTRS)"

.PP
Definition at line 12671 of file lapacke\&.h\&.
.SS "#define LAPACK_sgebak   \fBLAPACK_GLOBAL\fP(\fBsgebak\fP,SGEBAK)"

.PP
Definition at line 13217 of file lapacke\&.h\&.
.SS "#define LAPACK_sgebal   \fBLAPACK_GLOBAL\fP(\fBsgebal\fP,SGEBAL)"

.PP
Definition at line 13213 of file lapacke\&.h\&.
.SS "#define LAPACK_sgebrd   \fBLAPACK_GLOBAL\fP(\fBsgebrd\fP,SGEBRD)"

.PP
Definition at line 13103 of file lapacke\&.h\&.
.SS "#define LAPACK_sgecon   \fBLAPACK_GLOBAL\fP(\fBsgecon\fP,SGECON)"

.PP
Definition at line 12729 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeequ   \fBLAPACK_GLOBAL\fP(\fBsgeequ\fP,SGEEQU)"

.PP
Definition at line 12891 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeequb   \fBLAPACK_GLOBAL\fP(\fBsgeequb\fP,SGEEQUB)"

.PP
Definition at line 12896 of file lapacke\&.h\&.
.SS "#define LAPACK_sgees   \fBLAPACK_GLOBAL\fP(\fBsgees\fP,SGEES)"

.PP
Definition at line 13401 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeesx   \fBLAPACK_GLOBAL\fP(\fBsgeesx\fP,SGEESX)"

.PP
Definition at line 13405 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeev   \fBLAPACK_GLOBAL\fP(\fBsgeev\fP,SGEEV)"

.PP
Definition at line 13409 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeevx   \fBLAPACK_GLOBAL\fP(\fBsgeevx\fP,SGEEVX)"

.PP
Definition at line 13413 of file lapacke\&.h\&.
.SS "#define LAPACK_sgehrd   \fBLAPACK_GLOBAL\fP(\fBsgehrd\fP,SGEHRD)"

.PP
Definition at line 13201 of file lapacke\&.h\&.
.SS "#define LAPACK_sgejsv   \fBLAPACK_GLOBAL\fP(\fBsgejsv\fP,SGEJSV)"

.PP
Definition at line 13429 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelq   \fBLAPACK_GLOBAL\fP(\fBsgelq\fP,SGELQ)"

.PP
Definition at line 13802 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelq2   \fBLAPACK_GLOBAL\fP(\fBsgelq2\fP,SGELQ2)"

.PP
Definition at line 13589 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelqf   \fBLAPACK_GLOBAL\fP(\fBsgelqf\fP,SGELQF)"

.PP
Definition at line 13051 of file lapacke\&.h\&.
.SS "#define LAPACK_sgels   \fBLAPACK_GLOBAL\fP(\fBsgels\fP,SGELS)"

.PP
Definition at line 13301 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelsd   \fBLAPACK_GLOBAL\fP(\fBsgelsd\fP,SGELSD)"

.PP
Definition at line 13313 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelss   \fBLAPACK_GLOBAL\fP(\fBsgelss\fP,SGELSS)"

.PP
Definition at line 13309 of file lapacke\&.h\&.
.SS "#define LAPACK_sgelsy   \fBLAPACK_GLOBAL\fP(\fBsgelsy\fP,SGELSY)"

.PP
Definition at line 13305 of file lapacke\&.h\&.
.SS "#define LAPACK_sgemlq   \fBLAPACK_GLOBAL\fP(\fBsgemlq\fP,SGEMLQ)"

.PP
Definition at line 13806 of file lapacke\&.h\&.
.SS "#define LAPACK_sgemqr   \fBLAPACK_GLOBAL\fP(\fBsgemqr\fP,SGEMQR)"

.PP
Definition at line 13814 of file lapacke\&.h\&.
.SS "#define LAPACK_sgemqrt   \fBLAPACK_GLOBAL\fP(\fBsgemqrt\fP,SGEMQRT)"

.PP
Definition at line 13707 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqlf   \fBLAPACK_GLOBAL\fP(\fBsgeqlf\fP,SGEQLF)"

.PP
Definition at line 13063 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqp3   \fBLAPACK_GLOBAL\fP(\fBsgeqp3\fP,SGEQP3)"

.PP
Definition at line 13039 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqpf   \fBLAPACK_GLOBAL\fP(sgeqpf,SGEQPF)"

.PP
Definition at line 13035 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqr   \fBLAPACK_GLOBAL\fP(\fBsgeqr\fP,SGEQR)"

.PP
Definition at line 13810 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqr2   \fBLAPACK_GLOBAL\fP(\fBsgeqr2\fP,SGEQR2)"

.PP
Definition at line 13547 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqrf   \fBLAPACK_GLOBAL\fP(\fBsgeqrf\fP,SGEQRF)"

.PP
Definition at line 13031 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqrfp   \fBLAPACK_GLOBAL\fP(\fBsgeqrfp\fP,SGEQRFP)"

.PP
Definition at line 13537 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqrt   \fBLAPACK_GLOBAL\fP(\fBsgeqrt\fP,SGEQRT)"

.PP
Definition at line 13711 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqrt2   \fBLAPACK_GLOBAL\fP(\fBsgeqrt2\fP,SGEQRT2)"

.PP
Definition at line 13715 of file lapacke\&.h\&.
.SS "#define LAPACK_sgeqrt3   \fBLAPACK_GLOBAL\fP(\fBsgeqrt3\fP,SGEQRT3)"

.PP
Definition at line 13719 of file lapacke\&.h\&.
.SS "#define LAPACK_sgerfs   \fBLAPACK_GLOBAL\fP(\fBsgerfs\fP,SGERFS)"

.PP
Definition at line 12781 of file lapacke\&.h\&.
.SS "#define LAPACK_sgerfsx   \fBLAPACK_GLOBAL\fP(\fBsgerfsx\fP,SGERFSX)"

.PP
Definition at line 12786 of file lapacke\&.h\&.
.SS "#define LAPACK_sgerqf   \fBLAPACK_GLOBAL\fP(\fBsgerqf\fP,SGERQF)"

.PP
Definition at line 13075 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesdd   \fBLAPACK_GLOBAL\fP(\fBsgesdd\fP,SGESDD)"

.PP
Definition at line 13425 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesv   \fBLAPACK_GLOBAL\fP(\fBsgesv\fP,SGESV)"

.PP
Definition at line 12929 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesvd   \fBLAPACK_GLOBAL\fP(\fBsgesvd\fP,SGESVD)"

.PP
Definition at line 13417 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesvdx   \fBLAPACK_GLOBAL\fP(\fBsgesvdx\fP,SGESVDX)"

.PP
Definition at line 13421 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesvj   \fBLAPACK_GLOBAL\fP(\fBsgesvj\fP,SGESVJ)"

.PP
Definition at line 13433 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesvx   \fBLAPACK_GLOBAL\fP(\fBsgesvx\fP,SGESVX)"

.PP
Definition at line 12935 of file lapacke\&.h\&.
.SS "#define LAPACK_sgesvxx   \fBLAPACK_GLOBAL\fP(\fBsgesvxx\fP,SGESVXX)"

.PP
Definition at line 12940 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetf2   \fBLAPACK_GLOBAL\fP(\fBsgetf2\fP,SGETF2)"

.PP
Definition at line 13561 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetrf   \fBLAPACK_GLOBAL\fP(\fBsgetrf\fP,SGETRF)"

.PP
Definition at line 12605 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetrf2   \fBLAPACK_GLOBAL\fP(\fBsgetrf2\fP,SGETRF2)"

.PP
Definition at line 12609 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetri   \fBLAPACK_GLOBAL\fP(\fBsgetri\fP,SGETRI)"

.PP
Definition at line 12851 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetrs   \fBLAPACK_GLOBAL\fP(\fBsgetrs\fP,SGETRS)"

.PP
Definition at line 12667 of file lapacke\&.h\&.
.SS "#define LAPACK_sgetsls   \fBLAPACK_GLOBAL\fP(\fBsgetsls\fP,SGETSLS)"

.PP
Definition at line 13818 of file lapacke\&.h\&.
.SS "#define LAPACK_sggbak   \fBLAPACK_GLOBAL\fP(\fBsggbak\fP,SGGBAK)"

.PP
Definition at line 13261 of file lapacke\&.h\&.
.SS "#define LAPACK_sggbal   \fBLAPACK_GLOBAL\fP(\fBsggbal\fP,SGGBAL)"

.PP
Definition at line 13257 of file lapacke\&.h\&.
.SS "#define LAPACK_sgges   \fBLAPACK_GLOBAL\fP(\fBsgges\fP,SGGES)"

.PP
Definition at line 13481 of file lapacke\&.h\&.
.SS "#define LAPACK_sgges3   \fBLAPACK_GLOBAL\fP(\fBsgges3\fP,SGGES3)"

.PP
Definition at line 13485 of file lapacke\&.h\&.
.SS "#define LAPACK_sggesx   \fBLAPACK_GLOBAL\fP(\fBsggesx\fP,SGGESX)"

.PP
Definition at line 13489 of file lapacke\&.h\&.
.SS "#define LAPACK_sggev   \fBLAPACK_GLOBAL\fP(\fBsggev\fP,SGGEV)"

.PP
Definition at line 13493 of file lapacke\&.h\&.
.SS "#define LAPACK_sggev3   \fBLAPACK_GLOBAL\fP(\fBsggev3\fP,SGGEV3)"

.PP
Definition at line 13497 of file lapacke\&.h\&.
.SS "#define LAPACK_sggevx   \fBLAPACK_GLOBAL\fP(\fBsggevx\fP,SGGEVX)"

.PP
Definition at line 13501 of file lapacke\&.h\&.
.SS "#define LAPACK_sggglm   \fBLAPACK_GLOBAL\fP(\fBsggglm\fP,SGGGLM)"

.PP
Definition at line 13321 of file lapacke\&.h\&.
.SS "#define LAPACK_sgghd3   \fBLAPACK_GLOBAL\fP(\fBsgghd3\fP,SGGHD3)"

.PP
Definition at line 13253 of file lapacke\&.h\&.
.SS "#define LAPACK_sgghrd   \fBLAPACK_GLOBAL\fP(\fBsgghrd\fP,SGGHRD)"

.PP
Definition at line 13249 of file lapacke\&.h\&.
.SS "#define LAPACK_sgglse   \fBLAPACK_GLOBAL\fP(\fBsgglse\fP,SGGLSE)"

.PP
Definition at line 13317 of file lapacke\&.h\&.
.SS "#define LAPACK_sggqrf   \fBLAPACK_GLOBAL\fP(\fBsggqrf\fP,SGGQRF)"

.PP
Definition at line 13095 of file lapacke\&.h\&.
.SS "#define LAPACK_sggrqf   \fBLAPACK_GLOBAL\fP(\fBsggrqf\fP,SGGRQF)"

.PP
Definition at line 13099 of file lapacke\&.h\&.
.SS "#define LAPACK_sggsvd   \fBLAPACK_GLOBAL\fP(sggsvd,SGGSVD)"

.PP
Definition at line 13437 of file lapacke\&.h\&.
.SS "#define LAPACK_sggsvd3   \fBLAPACK_GLOBAL\fP(\fBsggsvd3\fP,SGGSVD3)"

.PP
Definition at line 13748 of file lapacke\&.h\&.
.SS "#define LAPACK_sggsvp   \fBLAPACK_GLOBAL\fP(sggsvp,SGGSVP)"

.PP
Definition at line 13289 of file lapacke\&.h\&.
.SS "#define LAPACK_sggsvp3   \fBLAPACK_GLOBAL\fP(\fBsggsvp3\fP,SGGSVP3)"

.PP
Definition at line 13293 of file lapacke\&.h\&.
.SS "#define LAPACK_sgtcon   \fBLAPACK_GLOBAL\fP(\fBsgtcon\fP,SGTCON)"

.PP
Definition at line 12737 of file lapacke\&.h\&.
.SS "#define LAPACK_sgtrfs   \fBLAPACK_GLOBAL\fP(\fBsgtrfs\fP,SGTRFS)"

.PP
Definition at line 12797 of file lapacke\&.h\&.
.SS "#define LAPACK_sgtsv   \fBLAPACK_GLOBAL\fP(\fBsgtsv\fP,SGTSV)"

.PP
Definition at line 12955 of file lapacke\&.h\&.
.SS "#define LAPACK_sgtsvx   \fBLAPACK_GLOBAL\fP(\fBsgtsvx\fP,SGTSVX)"

.PP
Definition at line 12959 of file lapacke\&.h\&.
.SS "#define LAPACK_sgttrf   \fBLAPACK_GLOBAL\fP(\fBsgttrf\fP,SGTTRF)"

.PP
Definition at line 12617 of file lapacke\&.h\&.
.SS "#define LAPACK_sgttrs   \fBLAPACK_GLOBAL\fP(\fBsgttrs\fP,SGTTRS)"

.PP
Definition at line 12675 of file lapacke\&.h\&.
.SS "#define LAPACK_shgeqz   \fBLAPACK_GLOBAL\fP(\fBshgeqz\fP,SHGEQZ)"

.PP
Definition at line 13265 of file lapacke\&.h\&.
.SS "#define LAPACK_shsein   \fBLAPACK_GLOBAL\fP(\fBshsein\fP,SHSEIN)"

.PP
Definition at line 13225 of file lapacke\&.h\&.
.SS "#define LAPACK_shseqr   \fBLAPACK_GLOBAL\fP(\fBshseqr\fP,SHSEQR)"

.PP
Definition at line 13221 of file lapacke\&.h\&.
.SS "#define LAPACK_slacn2   \fBLAPACK_GLOBAL\fP(\fBslacn2\fP,SLACN2)"

.PP
Definition at line 13551 of file lapacke\&.h\&.
.SS "#define LAPACK_slacpy   \fBLAPACK_GLOBAL\fP(\fBslacpy\fP,SLACPY)"

.PP
Definition at line 13555 of file lapacke\&.h\&.
.SS "#define LAPACK_slag2d   \fBLAPACK_GLOBAL\fP(\fBslag2d\fP,SLAG2D)"

.PP
Definition at line 13617 of file lapacke\&.h\&.
.SS "#define LAPACK_slagge   \fBLAPACK_GLOBAL\fP(slagge,SLAGGE)"

.PP
Definition at line 13625 of file lapacke\&.h\&.
.SS "#define LAPACK_slagsy   \fBLAPACK_GLOBAL\fP(slagsy,SLAGSY)"

.PP
Definition at line 13639 of file lapacke\&.h\&.
.SS "#define LAPACK_slamch   \fBLAPACK_GLOBAL\fP(slamch,SLAMCH)"

.PP
Definition at line 13587 of file lapacke\&.h\&.
.SS "#define LAPACK_slange   \fBLAPACK_GLOBAL\fP(\fBslange\fP,SLANGE)"

.PP
Definition at line 13569 of file lapacke\&.h\&.
.SS "#define LAPACK_slansy   \fBLAPACK_GLOBAL\fP(\fBslansy\fP,SLANSY)"

.PP
Definition at line 13579 of file lapacke\&.h\&.
.SS "#define LAPACK_slantr   \fBLAPACK_GLOBAL\fP(\fBslantr\fP,SLANTR)"

.PP
Definition at line 13583 of file lapacke\&.h\&.
.SS "#define LAPACK_slapmr   \fBLAPACK_GLOBAL\fP(\fBslapmr\fP,SLAPMR)"

.PP
Definition at line 13645 of file lapacke\&.h\&.
.SS "#define LAPACK_slapmt   \fBLAPACK_GLOBAL\fP(\fBslapmt\fP,SLAPMT)"

.PP
Definition at line 13649 of file lapacke\&.h\&.
.SS "#define LAPACK_slapy2   \fBLAPACK_GLOBAL\fP(\fBslapy2\fP,SLAPY2)"

.PP
Definition at line 13653 of file lapacke\&.h\&.
.SS "#define LAPACK_slapy3   \fBLAPACK_GLOBAL\fP(\fBslapy3\fP,SLAPY3)"

.PP
Definition at line 13655 of file lapacke\&.h\&.
.SS "#define LAPACK_slarfb   \fBLAPACK_GLOBAL\fP(\fBslarfb\fP,SLARFB)"

.PP
Definition at line 13593 of file lapacke\&.h\&.
.SS "#define LAPACK_slarfg   \fBLAPACK_GLOBAL\fP(\fBslarfg\fP,SLARFG)"

.PP
Definition at line 13597 of file lapacke\&.h\&.
.SS "#define LAPACK_slarft   \fBLAPACK_GLOBAL\fP(\fBslarft\fP,SLARFT)"

.PP
Definition at line 13605 of file lapacke\&.h\&.
.SS "#define LAPACK_slarfx   \fBLAPACK_GLOBAL\fP(\fBslarfx\fP,SLARFX)"

.PP
Definition at line 13609 of file lapacke\&.h\&.
.SS "#define LAPACK_slarnv   \fBLAPACK_GLOBAL\fP(\fBslarnv\fP,SLARNV)"

.PP
Definition at line 13543 of file lapacke\&.h\&.
.SS "#define LAPACK_slartgp   \fBLAPACK_GLOBAL\fP(\fBslartgp\fP,SLARTGP)"

.PP
Definition at line 13657 of file lapacke\&.h\&.
.SS "#define LAPACK_slartgs   \fBLAPACK_GLOBAL\fP(\fBslartgs\fP,SLARTGS)"

.PP
Definition at line 13659 of file lapacke\&.h\&.
.SS "#define LAPACK_slascl   \fBLAPACK_GLOBAL\fP(\fBslascl\fP,SLASCL)"

.PP
Definition at line 13629 of file lapacke\&.h\&.
.SS "#define LAPACK_slaset   \fBLAPACK_GLOBAL\fP(\fBslaset\fP,SLASET)"

.PP
Definition at line 13633 of file lapacke\&.h\&.
.SS "#define LAPACK_slasrt   \fBLAPACK_GLOBAL\fP(\fBslasrt\fP,SLASRT)"

.PP
Definition at line 13637 of file lapacke\&.h\&.
.SS "#define LAPACK_slassq   \fBLAPACK_GLOBAL\fP(\fBslassq\fP,SLASSQ)"

.PP
Definition at line 13601 of file lapacke\&.h\&.
.SS "#define LAPACK_slaswp   \fBLAPACK_GLOBAL\fP(\fBslaswp\fP,SLASWP)"

.PP
Definition at line 13565 of file lapacke\&.h\&.
.SS "#define LAPACK_slatms   \fBLAPACK_GLOBAL\fP(slatms,SLATMS)"

.PP
Definition at line 13613 of file lapacke\&.h\&.
.SS "#define LAPACK_slauum   \fBLAPACK_GLOBAL\fP(\fBslauum\fP,SLAUUM)"

.PP
Definition at line 13621 of file lapacke\&.h\&.
.SS "#define LAPACK_sopgtr   \fBLAPACK_GLOBAL\fP(\fBsopgtr\fP,SOPGTR)"

.PP
Definition at line 13141 of file lapacke\&.h\&.
.SS "#define LAPACK_sopmtr   \fBLAPACK_GLOBAL\fP(\fBsopmtr\fP,SOPMTR)"

.PP
Definition at line 13143 of file lapacke\&.h\&.
.SS "#define LAPACK_sorbdb   \fBLAPACK_GLOBAL\fP(\fBsorbdb\fP,SORBDB)"

.PP
Definition at line 13685 of file lapacke\&.h\&.
.SS "#define LAPACK_sorcsd   \fBLAPACK_GLOBAL\fP(\fBsorcsd\fP,SORCSD)"

.PP
Definition at line 13686 of file lapacke\&.h\&.
.SS "#define LAPACK_sorcsd2by1   \fBLAPACK_GLOBAL\fP(\fBsorcsd2by1\fP,SORCSD2BY1)"

.PP
Definition at line 13687 of file lapacke\&.h\&.
.SS "#define LAPACK_sorgbr   \fBLAPACK_GLOBAL\fP(\fBsorgbr\fP,SORGBR)"

.PP
Definition at line 13111 of file lapacke\&.h\&.
.SS "#define LAPACK_sorghr   \fBLAPACK_GLOBAL\fP(\fBsorghr\fP,SORGHR)"

.PP
Definition at line 13205 of file lapacke\&.h\&.
.SS "#define LAPACK_sorglq   \fBLAPACK_GLOBAL\fP(\fBsorglq\fP,SORGLQ)"

.PP
Definition at line 13055 of file lapacke\&.h\&.
.SS "#define LAPACK_sorgql   \fBLAPACK_GLOBAL\fP(\fBsorgql\fP,SORGQL)"

.PP
Definition at line 13067 of file lapacke\&.h\&.
.SS "#define LAPACK_sorgqr   \fBLAPACK_GLOBAL\fP(\fBsorgqr\fP,SORGQR)"

.PP
Definition at line 13043 of file lapacke\&.h\&.
.SS "#define LAPACK_sorgrq   \fBLAPACK_GLOBAL\fP(\fBsorgrq\fP,SORGRQ)"

.PP
Definition at line 13079 of file lapacke\&.h\&.
.SS "#define LAPACK_sorgtr   \fBLAPACK_GLOBAL\fP(\fBsorgtr\fP,SORGTR)"

.PP
Definition at line 13129 of file lapacke\&.h\&.
.SS "#define LAPACK_sormbr   \fBLAPACK_GLOBAL\fP(\fBsormbr\fP,SORMBR)"

.PP
Definition at line 13113 of file lapacke\&.h\&.
.SS "#define LAPACK_sormhr   \fBLAPACK_GLOBAL\fP(\fBsormhr\fP,SORMHR)"

.PP
Definition at line 13207 of file lapacke\&.h\&.
.SS "#define LAPACK_sormlq   \fBLAPACK_GLOBAL\fP(\fBsormlq\fP,SORMLQ)"

.PP
Definition at line 13057 of file lapacke\&.h\&.
.SS "#define LAPACK_sormql   \fBLAPACK_GLOBAL\fP(\fBsormql\fP,SORMQL)"

.PP
Definition at line 13071 of file lapacke\&.h\&.
.SS "#define LAPACK_sormqr   \fBLAPACK_GLOBAL\fP(\fBsormqr\fP,SORMQR)"

.PP
Definition at line 13045 of file lapacke\&.h\&.
.SS "#define LAPACK_sormrq   \fBLAPACK_GLOBAL\fP(\fBsormrq\fP,SORMRQ)"

.PP
Definition at line 13083 of file lapacke\&.h\&.
.SS "#define LAPACK_sormrz   \fBLAPACK_GLOBAL\fP(\fBsormrz\fP,SORMRZ)"

.PP
Definition at line 13091 of file lapacke\&.h\&.
.SS "#define LAPACK_sormtr   \fBLAPACK_GLOBAL\fP(\fBsormtr\fP,SORMTR)"

.PP
Definition at line 13131 of file lapacke\&.h\&.
.SS "#define LAPACK_spbcon   \fBLAPACK_GLOBAL\fP(\fBspbcon\fP,SPBCON)"

.PP
Definition at line 12749 of file lapacke\&.h\&.
.SS "#define LAPACK_spbequ   \fBLAPACK_GLOBAL\fP(\fBspbequ\fP,SPBEQU)"

.PP
Definition at line 12919 of file lapacke\&.h\&.
.SS "#define LAPACK_spbrfs   \fBLAPACK_GLOBAL\fP(\fBspbrfs\fP,SPBRFS)"

.PP
Definition at line 12813 of file lapacke\&.h\&.
.SS "#define LAPACK_spbstf   \fBLAPACK_GLOBAL\fP(\fBspbstf\fP,SPBSTF)"

.PP
Definition at line 13197 of file lapacke\&.h\&.
.SS "#define LAPACK_spbsv   \fBLAPACK_GLOBAL\fP(\fBspbsv\fP,SPBSV)"

.PP
Definition at line 12985 of file lapacke\&.h\&.
.SS "#define LAPACK_spbsvx   \fBLAPACK_GLOBAL\fP(\fBspbsvx\fP,SPBSVX)"

.PP
Definition at line 12989 of file lapacke\&.h\&.
.SS "#define LAPACK_spbtrf   \fBLAPACK_GLOBAL\fP(\fBspbtrf\fP,SPBTRF)"

.PP
Definition at line 12641 of file lapacke\&.h\&.
.SS "#define LAPACK_spbtrs   \fBLAPACK_GLOBAL\fP(\fBspbtrs\fP,SPBTRS)"

.PP
Definition at line 12691 of file lapacke\&.h\&.
.SS "#define LAPACK_spftrf   \fBLAPACK_GLOBAL\fP(\fBspftrf\fP,SPFTRF)"

.PP
Definition at line 12634 of file lapacke\&.h\&.
.SS "#define LAPACK_spftri   \fBLAPACK_GLOBAL\fP(\fBspftri\fP,SPFTRI)"

.PP
Definition at line 12860 of file lapacke\&.h\&.
.SS "#define LAPACK_spftrs   \fBLAPACK_GLOBAL\fP(\fBspftrs\fP,SPFTRS)"

.PP
Definition at line 12684 of file lapacke\&.h\&.
.SS "#define LAPACK_spocon   \fBLAPACK_GLOBAL\fP(\fBspocon\fP,SPOCON)"

.PP
Definition at line 12741 of file lapacke\&.h\&.
.SS "#define LAPACK_spoequ   \fBLAPACK_GLOBAL\fP(\fBspoequ\fP,SPOEQU)"

.PP
Definition at line 12907 of file lapacke\&.h\&.
.SS "#define LAPACK_spoequb   \fBLAPACK_GLOBAL\fP(\fBspoequb\fP,SPOEQUB)"

.PP
Definition at line 12912 of file lapacke\&.h\&.
.SS "#define LAPACK_sporfs   \fBLAPACK_GLOBAL\fP(\fBsporfs\fP,SPORFS)"

.PP
Definition at line 12801 of file lapacke\&.h\&.
.SS "#define LAPACK_sporfsx   \fBLAPACK_GLOBAL\fP(\fBsporfsx\fP,SPORFSX)"

.PP
Definition at line 12806 of file lapacke\&.h\&.
.SS "#define LAPACK_sposv   \fBLAPACK_GLOBAL\fP(\fBsposv\fP,SPOSV)"

.PP
Definition at line 12963 of file lapacke\&.h\&.
.SS "#define LAPACK_sposvx   \fBLAPACK_GLOBAL\fP(\fBsposvx\fP,SPOSVX)"

.PP
Definition at line 12969 of file lapacke\&.h\&.
.SS "#define LAPACK_sposvxx   \fBLAPACK_GLOBAL\fP(\fBsposvxx\fP,SPOSVXX)"

.PP
Definition at line 12974 of file lapacke\&.h\&.
.SS "#define LAPACK_spotrf   \fBLAPACK_GLOBAL\fP(\fBspotrf\fP,SPOTRF)"

.PP
Definition at line 12621 of file lapacke\&.h\&.
.SS "#define LAPACK_spotrf2   \fBLAPACK_GLOBAL\fP(\fBspotrf2\fP,SPOTRF2)"

.PP
Definition at line 12625 of file lapacke\&.h\&.
.SS "#define LAPACK_spotri   \fBLAPACK_GLOBAL\fP(\fBspotri\fP,SPOTRI)"

.PP
Definition at line 12855 of file lapacke\&.h\&.
.SS "#define LAPACK_spotrs   \fBLAPACK_GLOBAL\fP(\fBspotrs\fP,SPOTRS)"

.PP
Definition at line 12679 of file lapacke\&.h\&.
.SS "#define LAPACK_sppcon   \fBLAPACK_GLOBAL\fP(\fBsppcon\fP,SPPCON)"

.PP
Definition at line 12745 of file lapacke\&.h\&.
.SS "#define LAPACK_sppequ   \fBLAPACK_GLOBAL\fP(\fBsppequ\fP,SPPEQU)"

.PP
Definition at line 12915 of file lapacke\&.h\&.
.SS "#define LAPACK_spprfs   \fBLAPACK_GLOBAL\fP(\fBspprfs\fP,SPPRFS)"

.PP
Definition at line 12809 of file lapacke\&.h\&.
.SS "#define LAPACK_sppsv   \fBLAPACK_GLOBAL\fP(\fBsppsv\fP,SPPSV)"

.PP
Definition at line 12977 of file lapacke\&.h\&.
.SS "#define LAPACK_sppsvx   \fBLAPACK_GLOBAL\fP(\fBsppsvx\fP,SPPSVX)"

.PP
Definition at line 12981 of file lapacke\&.h\&.
.SS "#define LAPACK_spptrf   \fBLAPACK_GLOBAL\fP(\fBspptrf\fP,SPPTRF)"

.PP
Definition at line 12637 of file lapacke\&.h\&.
.SS "#define LAPACK_spptri   \fBLAPACK_GLOBAL\fP(\fBspptri\fP,SPPTRI)"

.PP
Definition at line 12863 of file lapacke\&.h\&.
.SS "#define LAPACK_spptrs   \fBLAPACK_GLOBAL\fP(\fBspptrs\fP,SPPTRS)"

.PP
Definition at line 12687 of file lapacke\&.h\&.
.SS "#define LAPACK_spstrf   \fBLAPACK_GLOBAL\fP(\fBspstrf\fP,SPSTRF)"

.PP
Definition at line 12630 of file lapacke\&.h\&.
.SS "#define LAPACK_sptcon   \fBLAPACK_GLOBAL\fP(\fBsptcon\fP,SPTCON)"

.PP
Definition at line 12753 of file lapacke\&.h\&.
.SS "#define LAPACK_spteqr   \fBLAPACK_GLOBAL\fP(\fBspteqr\fP,SPTEQR)"

.PP
Definition at line 13173 of file lapacke\&.h\&.
.SS "#define LAPACK_sptrfs   \fBLAPACK_GLOBAL\fP(\fBsptrfs\fP,SPTRFS)"

.PP
Definition at line 12817 of file lapacke\&.h\&.
.SS "#define LAPACK_sptsv   \fBLAPACK_GLOBAL\fP(\fBsptsv\fP,SPTSV)"

.PP
Definition at line 12993 of file lapacke\&.h\&.
.SS "#define LAPACK_sptsvx   \fBLAPACK_GLOBAL\fP(\fBsptsvx\fP,SPTSVX)"

.PP
Definition at line 12997 of file lapacke\&.h\&.
.SS "#define LAPACK_spttrf   \fBLAPACK_GLOBAL\fP(\fBspttrf\fP,SPTTRF)"

.PP
Definition at line 12645 of file lapacke\&.h\&.
.SS "#define LAPACK_spttrs   \fBLAPACK_GLOBAL\fP(\fBspttrs\fP,SPTTRS)"

.PP
Definition at line 12695 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbev   \fBLAPACK_GLOBAL\fP(\fBssbev\fP,SSBEV)"

.PP
Definition at line 13369 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbev_2stage   \fBLAPACK_GLOBAL\fP(\fBssbev_2stage\fP,SSBEV_2STAGE)"

.PP
Definition at line 13373 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbevd   \fBLAPACK_GLOBAL\fP(\fBssbevd\fP,SSBEVD)"

.PP
Definition at line 13377 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbevd_2stage   \fBLAPACK_GLOBAL\fP(\fBssbevd_2stage\fP,SSBEVD_2STAGE)"

.PP
Definition at line 13381 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbevx   \fBLAPACK_GLOBAL\fP(\fBssbevx\fP,SSBEVX)"

.PP
Definition at line 13385 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbevx_2stage   \fBLAPACK_GLOBAL\fP(\fBssbevx_2stage\fP,SSBEVX_2STAGE)"

.PP
Definition at line 13389 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbgst   \fBLAPACK_GLOBAL\fP(\fBssbgst\fP,SSBGST)"

.PP
Definition at line 13193 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbgv   \fBLAPACK_GLOBAL\fP(\fBssbgv\fP,SSBGV)"

.PP
Definition at line 13469 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbgvd   \fBLAPACK_GLOBAL\fP(\fBssbgvd\fP,SSBGVD)"

.PP
Definition at line 13473 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbgvx   \fBLAPACK_GLOBAL\fP(\fBssbgvx\fP,SSBGVX)"

.PP
Definition at line 13477 of file lapacke\&.h\&.
.SS "#define LAPACK_ssbtrd   \fBLAPACK_GLOBAL\fP(\fBssbtrd\fP,SSBTRD)"

.PP
Definition at line 13151 of file lapacke\&.h\&.
.SS "#define LAPACK_ssfrk   \fBLAPACK_GLOBAL\fP(\fBssfrk\fP,SSFRK)"

.PP
Definition at line 13506 of file lapacke\&.h\&.
.SS "#define LAPACK_sspcon   \fBLAPACK_GLOBAL\fP(\fBsspcon\fP,SSPCON)"

.PP
Definition at line 12763 of file lapacke\&.h\&.
.SS "#define LAPACK_sspev   \fBLAPACK_GLOBAL\fP(\fBsspev\fP,SSPEV)"

.PP
Definition at line 13357 of file lapacke\&.h\&.
.SS "#define LAPACK_sspevd   \fBLAPACK_GLOBAL\fP(\fBsspevd\fP,SSPEVD)"

.PP
Definition at line 13361 of file lapacke\&.h\&.
.SS "#define LAPACK_sspevx   \fBLAPACK_GLOBAL\fP(\fBsspevx\fP,SSPEVX)"

.PP
Definition at line 13365 of file lapacke\&.h\&.
.SS "#define LAPACK_sspgst   \fBLAPACK_GLOBAL\fP(\fBsspgst\fP,SSPGST)"

.PP
Definition at line 13189 of file lapacke\&.h\&.
.SS "#define LAPACK_sspgv   \fBLAPACK_GLOBAL\fP(\fBsspgv\fP,SSPGV)"

.PP
Definition at line 13457 of file lapacke\&.h\&.
.SS "#define LAPACK_sspgvd   \fBLAPACK_GLOBAL\fP(\fBsspgvd\fP,SSPGVD)"

.PP
Definition at line 13461 of file lapacke\&.h\&.
.SS "#define LAPACK_sspgvx   \fBLAPACK_GLOBAL\fP(\fBsspgvx\fP,SSPGVX)"

.PP
Definition at line 13465 of file lapacke\&.h\&.
.SS "#define LAPACK_ssprfs   \fBLAPACK_GLOBAL\fP(\fBssprfs\fP,SSPRFS)"

.PP
Definition at line 12833 of file lapacke\&.h\&.
.SS "#define LAPACK_sspsv   \fBLAPACK_GLOBAL\fP(\fBsspsv\fP,SSPSV)"

.PP
Definition at line 13019 of file lapacke\&.h\&.
.SS "#define LAPACK_sspsvx   \fBLAPACK_GLOBAL\fP(\fBsspsvx\fP,SSPSVX)"

.PP
Definition at line 13023 of file lapacke\&.h\&.
.SS "#define LAPACK_ssptrd   \fBLAPACK_GLOBAL\fP(\fBssptrd\fP,SSPTRD)"

.PP
Definition at line 13139 of file lapacke\&.h\&.
.SS "#define LAPACK_ssptrf   \fBLAPACK_GLOBAL\fP(\fBssptrf\fP,SSPTRF)"

.PP
Definition at line 12661 of file lapacke\&.h\&.
.SS "#define LAPACK_ssptri   \fBLAPACK_GLOBAL\fP(\fBssptri\fP,SSPTRI)"

.PP
Definition at line 12873 of file lapacke\&.h\&.
.SS "#define LAPACK_ssptrs   \fBLAPACK_GLOBAL\fP(\fBssptrs\fP,SSPTRS)"

.PP
Definition at line 12711 of file lapacke\&.h\&.
.SS "#define LAPACK_sstebz   \fBLAPACK_GLOBAL\fP(\fBsstebz\fP,SSTEBZ)"

.PP
Definition at line 13177 of file lapacke\&.h\&.
.SS "#define LAPACK_sstedc   \fBLAPACK_GLOBAL\fP(\fBsstedc\fP,SSTEDC)"

.PP
Definition at line 13165 of file lapacke\&.h\&.
.SS "#define LAPACK_sstegr   \fBLAPACK_GLOBAL\fP(\fBsstegr\fP,SSTEGR)"

.PP
Definition at line 13169 of file lapacke\&.h\&.
.SS "#define LAPACK_sstein   \fBLAPACK_GLOBAL\fP(\fBsstein\fP,SSTEIN)"

.PP
Definition at line 13179 of file lapacke\&.h\&.
.SS "#define LAPACK_sstemr   \fBLAPACK_GLOBAL\fP(\fBsstemr\fP,SSTEMR)"

.PP
Definition at line 13161 of file lapacke\&.h\&.
.SS "#define LAPACK_ssteqr   \fBLAPACK_GLOBAL\fP(\fBssteqr\fP,SSTEQR)"

.PP
Definition at line 13157 of file lapacke\&.h\&.
.SS "#define LAPACK_ssterf   \fBLAPACK_GLOBAL\fP(\fBssterf\fP,SSTERF)"

.PP
Definition at line 13155 of file lapacke\&.h\&.
.SS "#define LAPACK_sstev   \fBLAPACK_GLOBAL\fP(\fBsstev\fP,SSTEV)"

.PP
Definition at line 13393 of file lapacke\&.h\&.
.SS "#define LAPACK_sstevd   \fBLAPACK_GLOBAL\fP(\fBsstevd\fP,SSTEVD)"

.PP
Definition at line 13395 of file lapacke\&.h\&.
.SS "#define LAPACK_sstevr   \fBLAPACK_GLOBAL\fP(\fBsstevr\fP,SSTEVR)"

.PP
Definition at line 13399 of file lapacke\&.h\&.
.SS "#define LAPACK_sstevx   \fBLAPACK_GLOBAL\fP(\fBsstevx\fP,SSTEVX)"

.PP
Definition at line 13397 of file lapacke\&.h\&.
.SS "#define LAPACK_ssycon   \fBLAPACK_GLOBAL\fP(\fBssycon\fP,SSYCON)"

.PP
Definition at line 12757 of file lapacke\&.h\&.
.SS "#define LAPACK_ssycon_3   \fBLAPACK_GLOBAL\fP(\fBssycon_3\fP,SSYCON_3)"

.PP
Definition at line 13796 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyconv   \fBLAPACK_GLOBAL\fP(\fBssyconv\fP,SSYCONV)"

.PP
Definition at line 13688 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyequb   \fBLAPACK_GLOBAL\fP(\fBssyequb\fP,SSYEQUB)"

.PP
Definition at line 12924 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyev   \fBLAPACK_GLOBAL\fP(\fBssyev\fP,SSYEV)"

.PP
Definition at line 13325 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyev_2stage   \fBLAPACK_GLOBAL\fP(\fBssyev_2stage\fP,SSYEV_2STAGE)"

.PP
Definition at line 13329 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevd   \fBLAPACK_GLOBAL\fP(\fBssyevd\fP,SSYEVD)"

.PP
Definition at line 13333 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevd_2stage   \fBLAPACK_GLOBAL\fP(\fBssyevd_2stage\fP,SSYEVD_2STAGE)"

.PP
Definition at line 13337 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevr   \fBLAPACK_GLOBAL\fP(\fBssyevr\fP,SSYEVR)"

.PP
Definition at line 13349 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevr_2stage   \fBLAPACK_GLOBAL\fP(\fBssyevr_2stage\fP,SSYEVR_2STAGE)"

.PP
Definition at line 13353 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevx   \fBLAPACK_GLOBAL\fP(\fBssyevx\fP,SSYEVX)"

.PP
Definition at line 13341 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyevx_2stage   \fBLAPACK_GLOBAL\fP(\fBssyevx_2stage\fP,SSYEVX_2STAGE)"

.PP
Definition at line 13345 of file lapacke\&.h\&.
.SS "#define LAPACK_ssygst   \fBLAPACK_GLOBAL\fP(\fBssygst\fP,SSYGST)"

.PP
Definition at line 13185 of file lapacke\&.h\&.
.SS "#define LAPACK_ssygv   \fBLAPACK_GLOBAL\fP(\fBssygv\fP,SSYGV)"

.PP
Definition at line 13441 of file lapacke\&.h\&.
.SS "#define LAPACK_ssygv_2stage   \fBLAPACK_GLOBAL\fP(\fBssygv_2stage\fP,SSYGV_2STAGE)"

.PP
Definition at line 13445 of file lapacke\&.h\&.
.SS "#define LAPACK_ssygvd   \fBLAPACK_GLOBAL\fP(\fBssygvd\fP,SSYGVD)"

.PP
Definition at line 13449 of file lapacke\&.h\&.
.SS "#define LAPACK_ssygvx   \fBLAPACK_GLOBAL\fP(\fBssygvx\fP,SSYGVX)"

.PP
Definition at line 13453 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyrfs   \fBLAPACK_GLOBAL\fP(\fBssyrfs\fP,SSYRFS)"

.PP
Definition at line 12821 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyrfsx   \fBLAPACK_GLOBAL\fP(\fBssyrfsx\fP,SSYRFSX)"

.PP
Definition at line 12826 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysv   \fBLAPACK_GLOBAL\fP(\fBssysv\fP,SSYSV)"

.PP
Definition at line 13001 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysv_aa   \fBLAPACK_GLOBAL\fP(\fBssysv_aa\fP,SSYSV_AA)"

.PP
Definition at line 13753 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBssysv_aa_2stage\fP,SSYSV_AA_2STAGE)"

.PP
Definition at line 13824 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysv_rk   \fBLAPACK_GLOBAL\fP(\fBssysv_rk\fP,SSYSV_RK)"

.PP
Definition at line 13772 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysv_rook   \fBLAPACK_GLOBAL\fP(\fBssysv_rook\fP,SSYSV_ROOK)"

.PP
Definition at line 13740 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysvx   \fBLAPACK_GLOBAL\fP(\fBssysvx\fP,SSYSVX)"

.PP
Definition at line 13005 of file lapacke\&.h\&.
.SS "#define LAPACK_ssysvxx   \fBLAPACK_GLOBAL\fP(\fBssysvxx\fP,SSYSVXX)"

.PP
Definition at line 13010 of file lapacke\&.h\&.
.SS "#define LAPACK_ssyswapr   \fBLAPACK_GLOBAL\fP(\fBssyswapr\fP,SSYSWAPR)"

.PP
Definition at line 13689 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrd   \fBLAPACK_GLOBAL\fP(\fBssytrd\fP,SSYTRD)"

.PP
Definition at line 13127 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrf   \fBLAPACK_GLOBAL\fP(\fBssytrf\fP,SSYTRF)"

.PP
Definition at line 12649 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrf_aa   \fBLAPACK_GLOBAL\fP(\fBssytrf_aa\fP,SSYTRF_AA)"

.PP
Definition at line 13765 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBssytrf_aa_2stage\fP,SSYTRF_AA_2STAGE)"

.PP
Definition at line 13836 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrf_rk   \fBLAPACK_GLOBAL\fP(\fBssytrf_rk\fP,SSYTRF_RK)"

.PP
Definition at line 13778 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrf_rook   \fBLAPACK_GLOBAL\fP(\fBssytrf_rook\fP,SSYTRF_ROOK)"

.PP
Definition at line 12650 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytri   \fBLAPACK_GLOBAL\fP(\fBssytri\fP,SSYTRI)"

.PP
Definition at line 12867 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytri2   \fBLAPACK_GLOBAL\fP(\fBssytri2\fP,SSYTRI2)"

.PP
Definition at line 13690 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytri2x   \fBLAPACK_GLOBAL\fP(\fBssytri2x\fP,SSYTRI2X)"

.PP
Definition at line 13691 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytri_3   \fBLAPACK_GLOBAL\fP(\fBssytri_3\fP,SSYTRI_3)"

.PP
Definition at line 13790 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs   \fBLAPACK_GLOBAL\fP(\fBssytrs\fP,SSYTRS)"

.PP
Definition at line 12699 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs2   \fBLAPACK_GLOBAL\fP(\fBssytrs2\fP,SSYTRS2)"

.PP
Definition at line 13692 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs_3   \fBLAPACK_GLOBAL\fP(\fBssytrs_3\fP,SSYTRS_3)"

.PP
Definition at line 13784 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs_aa   \fBLAPACK_GLOBAL\fP(\fBssytrs_aa\fP,SSYTRS_AA)"

.PP
Definition at line 13759 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBssytrs_aa_2stage\fP,SSYTRS_AA_2STAGE)"

.PP
Definition at line 13830 of file lapacke\&.h\&.
.SS "#define LAPACK_ssytrs_rook   \fBLAPACK_GLOBAL\fP(\fBssytrs_rook\fP,SSYTRS_ROOK)"

.PP
Definition at line 12700 of file lapacke\&.h\&.
.SS "#define LAPACK_stbcon   \fBLAPACK_GLOBAL\fP(\fBstbcon\fP,STBCON)"

.PP
Definition at line 12777 of file lapacke\&.h\&.
.SS "#define LAPACK_stbrfs   \fBLAPACK_GLOBAL\fP(\fBstbrfs\fP,STBRFS)"

.PP
Definition at line 12847 of file lapacke\&.h\&.
.SS "#define LAPACK_stbtrs   \fBLAPACK_GLOBAL\fP(\fBstbtrs\fP,STBTRS)"

.PP
Definition at line 12725 of file lapacke\&.h\&.
.SS "#define LAPACK_stfsm   \fBLAPACK_GLOBAL\fP(\fBstfsm\fP,STFSM)"

.PP
Definition at line 13510 of file lapacke\&.h\&.
.SS "#define LAPACK_stftri   \fBLAPACK_GLOBAL\fP(\fBstftri\fP,STFTRI)"

.PP
Definition at line 12884 of file lapacke\&.h\&.
.SS "#define LAPACK_stfttp   \fBLAPACK_GLOBAL\fP(\fBstfttp\fP,STFTTP)"

.PP
Definition at line 13514 of file lapacke\&.h\&.
.SS "#define LAPACK_stfttr   \fBLAPACK_GLOBAL\fP(\fBstfttr\fP,STFTTR)"

.PP
Definition at line 13518 of file lapacke\&.h\&.
.SS "#define LAPACK_stgevc   \fBLAPACK_GLOBAL\fP(\fBstgevc\fP,STGEVC)"

.PP
Definition at line 13269 of file lapacke\&.h\&.
.SS "#define LAPACK_stgexc   \fBLAPACK_GLOBAL\fP(\fBstgexc\fP,STGEXC)"

.PP
Definition at line 13273 of file lapacke\&.h\&.
.SS "#define LAPACK_stgsen   \fBLAPACK_GLOBAL\fP(\fBstgsen\fP,STGSEN)"

.PP
Definition at line 13277 of file lapacke\&.h\&.
.SS "#define LAPACK_stgsja   \fBLAPACK_GLOBAL\fP(\fBstgsja\fP,STGSJA)"

.PP
Definition at line 13297 of file lapacke\&.h\&.
.SS "#define LAPACK_stgsna   \fBLAPACK_GLOBAL\fP(\fBstgsna\fP,STGSNA)"

.PP
Definition at line 13285 of file lapacke\&.h\&.
.SS "#define LAPACK_stgsyl   \fBLAPACK_GLOBAL\fP(\fBstgsyl\fP,STGSYL)"

.PP
Definition at line 13281 of file lapacke\&.h\&.
.SS "#define LAPACK_stpcon   \fBLAPACK_GLOBAL\fP(\fBstpcon\fP,STPCON)"

.PP
Definition at line 12773 of file lapacke\&.h\&.
.SS "#define LAPACK_stpmqrt   \fBLAPACK_GLOBAL\fP(\fBstpmqrt\fP,STPMQRT)"

.PP
Definition at line 13723 of file lapacke\&.h\&.
.SS "#define LAPACK_stpqrt   \fBLAPACK_GLOBAL\fP(\fBstpqrt\fP,STPQRT)"

.PP
Definition at line 13727 of file lapacke\&.h\&.
.SS "#define LAPACK_stpqrt2   \fBLAPACK_GLOBAL\fP(\fBstpqrt2\fP,STPQRT2)"

.PP
Definition at line 13731 of file lapacke\&.h\&.
.SS "#define LAPACK_stprfb   \fBLAPACK_GLOBAL\fP(\fBstprfb\fP,STPRFB)"

.PP
Definition at line 13735 of file lapacke\&.h\&.
.SS "#define LAPACK_stprfs   \fBLAPACK_GLOBAL\fP(\fBstprfs\fP,STPRFS)"

.PP
Definition at line 12843 of file lapacke\&.h\&.
.SS "#define LAPACK_stptri   \fBLAPACK_GLOBAL\fP(\fBstptri\fP,STPTRI)"

.PP
Definition at line 12887 of file lapacke\&.h\&.
.SS "#define LAPACK_stptrs   \fBLAPACK_GLOBAL\fP(\fBstptrs\fP,STPTRS)"

.PP
Definition at line 12721 of file lapacke\&.h\&.
.SS "#define LAPACK_stpttf   \fBLAPACK_GLOBAL\fP(\fBstpttf\fP,STPTTF)"

.PP
Definition at line 13522 of file lapacke\&.h\&.
.SS "#define LAPACK_stpttr   \fBLAPACK_GLOBAL\fP(\fBstpttr\fP,STPTTR)"

.PP
Definition at line 13526 of file lapacke\&.h\&.
.SS "#define LAPACK_strcon   \fBLAPACK_GLOBAL\fP(\fBstrcon\fP,STRCON)"

.PP
Definition at line 12769 of file lapacke\&.h\&.
.SS "#define LAPACK_strevc   \fBLAPACK_GLOBAL\fP(\fBstrevc\fP,STREVC)"

.PP
Definition at line 13229 of file lapacke\&.h\&.
.SS "#define LAPACK_strexc   \fBLAPACK_GLOBAL\fP(\fBstrexc\fP,STREXC)"

.PP
Definition at line 13237 of file lapacke\&.h\&.
.SS "#define LAPACK_strrfs   \fBLAPACK_GLOBAL\fP(\fBstrrfs\fP,STRRFS)"

.PP
Definition at line 12839 of file lapacke\&.h\&.
.SS "#define LAPACK_strsen   \fBLAPACK_GLOBAL\fP(\fBstrsen\fP,STRSEN)"

.PP
Definition at line 13241 of file lapacke\&.h\&.
.SS "#define LAPACK_strsna   \fBLAPACK_GLOBAL\fP(\fBstrsna\fP,STRSNA)"

.PP
Definition at line 13233 of file lapacke\&.h\&.
.SS "#define LAPACK_strsyl   \fBLAPACK_GLOBAL\fP(\fBstrsyl\fP,STRSYL)"

.PP
Definition at line 13245 of file lapacke\&.h\&.
.SS "#define LAPACK_strtri   \fBLAPACK_GLOBAL\fP(\fBstrtri\fP,STRTRI)"

.PP
Definition at line 12879 of file lapacke\&.h\&.
.SS "#define LAPACK_strtrs   \fBLAPACK_GLOBAL\fP(\fBstrtrs\fP,STRTRS)"

.PP
Definition at line 12717 of file lapacke\&.h\&.
.SS "#define LAPACK_strttf   \fBLAPACK_GLOBAL\fP(\fBstrttf\fP,STRTTF)"

.PP
Definition at line 13530 of file lapacke\&.h\&.
.SS "#define LAPACK_strttp   \fBLAPACK_GLOBAL\fP(\fBstrttp\fP,STRTTP)"

.PP
Definition at line 13534 of file lapacke\&.h\&.
.SS "#define LAPACK_stzrzf   \fBLAPACK_GLOBAL\fP(\fBstzrzf\fP,STZRZF)"

.PP
Definition at line 13087 of file lapacke\&.h\&.
.SS "#define LAPACK_TRANSPOSE_MEMORY_ERROR   \-1011"

.PP
Definition at line 123 of file lapacke\&.h\&.
.SS "#define LAPACK_WORK_MEMORY_ERROR   \-1010"

.PP
Definition at line 122 of file lapacke\&.h\&.
.SS "#define LAPACK_Z2INT(x)   (\fBlapack_int\fP)(*((double*)&x ))"

.PP
Definition at line 117 of file lapacke\&.h\&.
.SS "#define LAPACK_zbbcsd   \fBLAPACK_GLOBAL\fP(\fBzbbcsd\fP,ZBBCSD)"

.PP
Definition at line 13693 of file lapacke\&.h\&.
.SS "#define LAPACK_zbdsqr   \fBLAPACK_GLOBAL\fP(\fBzbdsqr\fP,ZBDSQR)"

.PP
Definition at line 13122 of file lapacke\&.h\&.
.SS "#define LAPACK_zcgesv   \fBLAPACK_GLOBAL\fP(\fBzcgesv\fP,ZCGESV)"

.PP
Definition at line 12934 of file lapacke\&.h\&.
.SS "#define LAPACK_zcposv   \fBLAPACK_GLOBAL\fP(\fBzcposv\fP,ZCPOSV)"

.PP
Definition at line 12968 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbbrd   \fBLAPACK_GLOBAL\fP(\fBzgbbrd\fP,ZGBBRD)"

.PP
Definition at line 13110 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbcon   \fBLAPACK_GLOBAL\fP(\fBzgbcon\fP,ZGBCON)"

.PP
Definition at line 12736 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbequ   \fBLAPACK_GLOBAL\fP(\fBzgbequ\fP,ZGBEQU)"

.PP
Definition at line 12902 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbequb   \fBLAPACK_GLOBAL\fP(\fBzgbequb\fP,ZGBEQUB)"

.PP
Definition at line 12905 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbrfs   \fBLAPACK_GLOBAL\fP(\fBzgbrfs\fP,ZGBRFS)"

.PP
Definition at line 12792 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbrfsx   \fBLAPACK_GLOBAL\fP(\fBzgbrfsx\fP,ZGBRFSX)"

.PP
Definition at line 12795 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbsv   \fBLAPACK_GLOBAL\fP(\fBzgbsv\fP,ZGBSV)"

.PP
Definition at line 12946 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbsvx   \fBLAPACK_GLOBAL\fP(\fBzgbsvx\fP,ZGBSVX)"

.PP
Definition at line 12950 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbsvxx   \fBLAPACK_GLOBAL\fP(\fBzgbsvxx\fP,ZGBSVXX)"

.PP
Definition at line 12953 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbtrf   \fBLAPACK_GLOBAL\fP(\fBzgbtrf\fP,ZGBTRF)"

.PP
Definition at line 12616 of file lapacke\&.h\&.
.SS "#define LAPACK_zgbtrs   \fBLAPACK_GLOBAL\fP(\fBzgbtrs\fP,ZGBTRS)"

.PP
Definition at line 12674 of file lapacke\&.h\&.
.SS "#define LAPACK_zgebak   \fBLAPACK_GLOBAL\fP(\fBzgebak\fP,ZGEBAK)"

.PP
Definition at line 13220 of file lapacke\&.h\&.
.SS "#define LAPACK_zgebal   \fBLAPACK_GLOBAL\fP(\fBzgebal\fP,ZGEBAL)"

.PP
Definition at line 13216 of file lapacke\&.h\&.
.SS "#define LAPACK_zgebrd   \fBLAPACK_GLOBAL\fP(\fBzgebrd\fP,ZGEBRD)"

.PP
Definition at line 13106 of file lapacke\&.h\&.
.SS "#define LAPACK_zgecon   \fBLAPACK_GLOBAL\fP(\fBzgecon\fP,ZGECON)"

.PP
Definition at line 12732 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeequ   \fBLAPACK_GLOBAL\fP(\fBzgeequ\fP,ZGEEQU)"

.PP
Definition at line 12894 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeequb   \fBLAPACK_GLOBAL\fP(\fBzgeequb\fP,ZGEEQUB)"

.PP
Definition at line 12897 of file lapacke\&.h\&.
.SS "#define LAPACK_zgees   \fBLAPACK_GLOBAL\fP(\fBzgees\fP,ZGEES)"

.PP
Definition at line 13404 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeesx   \fBLAPACK_GLOBAL\fP(\fBzgeesx\fP,ZGEESX)"

.PP
Definition at line 13408 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeev   \fBLAPACK_GLOBAL\fP(\fBzgeev\fP,ZGEEV)"

.PP
Definition at line 13412 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeevx   \fBLAPACK_GLOBAL\fP(\fBzgeevx\fP,ZGEEVX)"

.PP
Definition at line 13416 of file lapacke\&.h\&.
.SS "#define LAPACK_zgehrd   \fBLAPACK_GLOBAL\fP(\fBzgehrd\fP,ZGEHRD)"

.PP
Definition at line 13204 of file lapacke\&.h\&.
.SS "#define LAPACK_zgejsv   \fBLAPACK_GLOBAL\fP(\fBzgejsv\fP,ZGEJSV)"

.PP
Definition at line 13432 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelq   \fBLAPACK_GLOBAL\fP(\fBzgelq\fP,ZGELQ)"

.PP
Definition at line 13805 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelq2   \fBLAPACK_GLOBAL\fP(\fBzgelq2\fP,ZGELQ2)"

.PP
Definition at line 13592 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelqf   \fBLAPACK_GLOBAL\fP(\fBzgelqf\fP,ZGELQF)"

.PP
Definition at line 13054 of file lapacke\&.h\&.
.SS "#define LAPACK_zgels   \fBLAPACK_GLOBAL\fP(\fBzgels\fP,ZGELS)"

.PP
Definition at line 13304 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelsd   \fBLAPACK_GLOBAL\fP(\fBzgelsd\fP,ZGELSD)"

.PP
Definition at line 13316 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelss   \fBLAPACK_GLOBAL\fP(\fBzgelss\fP,ZGELSS)"

.PP
Definition at line 13312 of file lapacke\&.h\&.
.SS "#define LAPACK_zgelsy   \fBLAPACK_GLOBAL\fP(\fBzgelsy\fP,ZGELSY)"

.PP
Definition at line 13308 of file lapacke\&.h\&.
.SS "#define LAPACK_zgemlq   \fBLAPACK_GLOBAL\fP(\fBzgemlq\fP,ZGEMLQ)"

.PP
Definition at line 13809 of file lapacke\&.h\&.
.SS "#define LAPACK_zgemqr   \fBLAPACK_GLOBAL\fP(\fBzgemqr\fP,ZGEMQR)"

.PP
Definition at line 13817 of file lapacke\&.h\&.
.SS "#define LAPACK_zgemqrt   \fBLAPACK_GLOBAL\fP(\fBzgemqrt\fP,ZGEMQRT)"

.PP
Definition at line 13710 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqlf   \fBLAPACK_GLOBAL\fP(\fBzgeqlf\fP,ZGEQLF)"

.PP
Definition at line 13066 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqp3   \fBLAPACK_GLOBAL\fP(\fBzgeqp3\fP,ZGEQP3)"

.PP
Definition at line 13042 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqpf   \fBLAPACK_GLOBAL\fP(zgeqpf,ZGEQPF)"

.PP
Definition at line 13038 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqr   \fBLAPACK_GLOBAL\fP(\fBzgeqr\fP,ZGEQR)"

.PP
Definition at line 13813 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqr2   \fBLAPACK_GLOBAL\fP(\fBzgeqr2\fP,ZGEQR2)"

.PP
Definition at line 13550 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqrf   \fBLAPACK_GLOBAL\fP(\fBzgeqrf\fP,ZGEQRF)"

.PP
Definition at line 13034 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqrfp   \fBLAPACK_GLOBAL\fP(\fBzgeqrfp\fP,ZGEQRFP)"

.PP
Definition at line 13540 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqrt   \fBLAPACK_GLOBAL\fP(\fBzgeqrt\fP,ZGEQRT)"

.PP
Definition at line 13714 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqrt2   \fBLAPACK_GLOBAL\fP(\fBzgeqrt2\fP,ZGEQRT2)"

.PP
Definition at line 13718 of file lapacke\&.h\&.
.SS "#define LAPACK_zgeqrt3   \fBLAPACK_GLOBAL\fP(\fBzgeqrt3\fP,ZGEQRT3)"

.PP
Definition at line 13722 of file lapacke\&.h\&.
.SS "#define LAPACK_zgerfs   \fBLAPACK_GLOBAL\fP(\fBzgerfs\fP,ZGERFS)"

.PP
Definition at line 12784 of file lapacke\&.h\&.
.SS "#define LAPACK_zgerfsx   \fBLAPACK_GLOBAL\fP(\fBzgerfsx\fP,ZGERFSX)"

.PP
Definition at line 12787 of file lapacke\&.h\&.
.SS "#define LAPACK_zgerqf   \fBLAPACK_GLOBAL\fP(\fBzgerqf\fP,ZGERQF)"

.PP
Definition at line 13078 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesdd   \fBLAPACK_GLOBAL\fP(\fBzgesdd\fP,ZGESDD)"

.PP
Definition at line 13428 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesv   \fBLAPACK_GLOBAL\fP(\fBzgesv\fP,ZGESV)"

.PP
Definition at line 12932 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesvd   \fBLAPACK_GLOBAL\fP(\fBzgesvd\fP,ZGESVD)"

.PP
Definition at line 13420 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesvdx   \fBLAPACK_GLOBAL\fP(\fBzgesvdx\fP,ZGESVDX)"

.PP
Definition at line 13424 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesvj   \fBLAPACK_GLOBAL\fP(\fBzgesvj\fP,ZGESVJ)"

.PP
Definition at line 13436 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesvx   \fBLAPACK_GLOBAL\fP(\fBzgesvx\fP,ZGESVX)"

.PP
Definition at line 12938 of file lapacke\&.h\&.
.SS "#define LAPACK_zgesvxx   \fBLAPACK_GLOBAL\fP(\fBzgesvxx\fP,ZGESVXX)"

.PP
Definition at line 12941 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetf2   \fBLAPACK_GLOBAL\fP(\fBzgetf2\fP,ZGETF2)"

.PP
Definition at line 13564 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetrf   \fBLAPACK_GLOBAL\fP(\fBzgetrf\fP,ZGETRF)"

.PP
Definition at line 12608 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetrf2   \fBLAPACK_GLOBAL\fP(\fBzgetrf2\fP,ZGETRF2)"

.PP
Definition at line 12612 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetri   \fBLAPACK_GLOBAL\fP(\fBzgetri\fP,ZGETRI)"

.PP
Definition at line 12854 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetrs   \fBLAPACK_GLOBAL\fP(\fBzgetrs\fP,ZGETRS)"

.PP
Definition at line 12670 of file lapacke\&.h\&.
.SS "#define LAPACK_zgetsls   \fBLAPACK_GLOBAL\fP(\fBzgetsls\fP,ZGETSLS)"

.PP
Definition at line 13821 of file lapacke\&.h\&.
.SS "#define LAPACK_zggbak   \fBLAPACK_GLOBAL\fP(\fBzggbak\fP,ZGGBAK)"

.PP
Definition at line 13264 of file lapacke\&.h\&.
.SS "#define LAPACK_zggbal   \fBLAPACK_GLOBAL\fP(\fBzggbal\fP,ZGGBAL)"

.PP
Definition at line 13260 of file lapacke\&.h\&.
.SS "#define LAPACK_zgges   \fBLAPACK_GLOBAL\fP(\fBzgges\fP,ZGGES)"

.PP
Definition at line 13484 of file lapacke\&.h\&.
.SS "#define LAPACK_zgges3   \fBLAPACK_GLOBAL\fP(\fBzgges3\fP,ZGGES3)"

.PP
Definition at line 13488 of file lapacke\&.h\&.
.SS "#define LAPACK_zggesx   \fBLAPACK_GLOBAL\fP(\fBzggesx\fP,ZGGESX)"

.PP
Definition at line 13492 of file lapacke\&.h\&.
.SS "#define LAPACK_zggev   \fBLAPACK_GLOBAL\fP(\fBzggev\fP,ZGGEV)"

.PP
Definition at line 13496 of file lapacke\&.h\&.
.SS "#define LAPACK_zggev3   \fBLAPACK_GLOBAL\fP(\fBzggev3\fP,ZGGEV3)"

.PP
Definition at line 13500 of file lapacke\&.h\&.
.SS "#define LAPACK_zggevx   \fBLAPACK_GLOBAL\fP(\fBzggevx\fP,ZGGEVX)"

.PP
Definition at line 13504 of file lapacke\&.h\&.
.SS "#define LAPACK_zggglm   \fBLAPACK_GLOBAL\fP(\fBzggglm\fP,ZGGGLM)"

.PP
Definition at line 13324 of file lapacke\&.h\&.
.SS "#define LAPACK_zgghd3   \fBLAPACK_GLOBAL\fP(\fBzgghd3\fP,ZGGHD3)"

.PP
Definition at line 13256 of file lapacke\&.h\&.
.SS "#define LAPACK_zgghrd   \fBLAPACK_GLOBAL\fP(\fBzgghrd\fP,ZGGHRD)"

.PP
Definition at line 13252 of file lapacke\&.h\&.
.SS "#define LAPACK_zgglse   \fBLAPACK_GLOBAL\fP(\fBzgglse\fP,ZGGLSE)"

.PP
Definition at line 13320 of file lapacke\&.h\&.
.SS "#define LAPACK_zggqrf   \fBLAPACK_GLOBAL\fP(\fBzggqrf\fP,ZGGQRF)"

.PP
Definition at line 13098 of file lapacke\&.h\&.
.SS "#define LAPACK_zggrqf   \fBLAPACK_GLOBAL\fP(\fBzggrqf\fP,ZGGRQF)"

.PP
Definition at line 13102 of file lapacke\&.h\&.
.SS "#define LAPACK_zggsvd   \fBLAPACK_GLOBAL\fP(zggsvd,ZGGSVD)"

.PP
Definition at line 13440 of file lapacke\&.h\&.
.SS "#define LAPACK_zggsvd3   \fBLAPACK_GLOBAL\fP(\fBzggsvd3\fP,ZGGSVD3)"

.PP
Definition at line 13751 of file lapacke\&.h\&.
.SS "#define LAPACK_zggsvp   \fBLAPACK_GLOBAL\fP(zggsvp,ZGGSVP)"

.PP
Definition at line 13292 of file lapacke\&.h\&.
.SS "#define LAPACK_zggsvp3   \fBLAPACK_GLOBAL\fP(\fBzggsvp3\fP,ZGGSVP3)"

.PP
Definition at line 13296 of file lapacke\&.h\&.
.SS "#define LAPACK_zgtcon   \fBLAPACK_GLOBAL\fP(\fBzgtcon\fP,ZGTCON)"

.PP
Definition at line 12740 of file lapacke\&.h\&.
.SS "#define LAPACK_zgtrfs   \fBLAPACK_GLOBAL\fP(\fBzgtrfs\fP,ZGTRFS)"

.PP
Definition at line 12800 of file lapacke\&.h\&.
.SS "#define LAPACK_zgtsv   \fBLAPACK_GLOBAL\fP(\fBzgtsv\fP,ZGTSV)"

.PP
Definition at line 12958 of file lapacke\&.h\&.
.SS "#define LAPACK_zgtsvx   \fBLAPACK_GLOBAL\fP(\fBzgtsvx\fP,ZGTSVX)"

.PP
Definition at line 12962 of file lapacke\&.h\&.
.SS "#define LAPACK_zgttrf   \fBLAPACK_GLOBAL\fP(\fBzgttrf\fP,ZGTTRF)"

.PP
Definition at line 12620 of file lapacke\&.h\&.
.SS "#define LAPACK_zgttrs   \fBLAPACK_GLOBAL\fP(\fBzgttrs\fP,ZGTTRS)"

.PP
Definition at line 12678 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbev   \fBLAPACK_GLOBAL\fP(\fBzhbev\fP,ZHBEV)"

.PP
Definition at line 13372 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbev_2stage   \fBLAPACK_GLOBAL\fP(\fBzhbev_2stage\fP,ZHBEV_2STAGE)"

.PP
Definition at line 13376 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbevd   \fBLAPACK_GLOBAL\fP(\fBzhbevd\fP,ZHBEVD)"

.PP
Definition at line 13380 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbevd_2stage   \fBLAPACK_GLOBAL\fP(\fBzhbevd_2stage\fP,ZHBEVD_2STAGE)"

.PP
Definition at line 13384 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbevx   \fBLAPACK_GLOBAL\fP(\fBzhbevx\fP,ZHBEVX)"

.PP
Definition at line 13388 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbevx_2stage   \fBLAPACK_GLOBAL\fP(\fBzhbevx_2stage\fP,ZHBEVX_2STAGE)"

.PP
Definition at line 13392 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbgst   \fBLAPACK_GLOBAL\fP(\fBzhbgst\fP,ZHBGST)"

.PP
Definition at line 13196 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbgv   \fBLAPACK_GLOBAL\fP(\fBzhbgv\fP,ZHBGV)"

.PP
Definition at line 13472 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbgvd   \fBLAPACK_GLOBAL\fP(\fBzhbgvd\fP,ZHBGVD)"

.PP
Definition at line 13476 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbgvx   \fBLAPACK_GLOBAL\fP(\fBzhbgvx\fP,ZHBGVX)"

.PP
Definition at line 13480 of file lapacke\&.h\&.
.SS "#define LAPACK_zhbtrd   \fBLAPACK_GLOBAL\fP(\fBzhbtrd\fP,ZHBTRD)"

.PP
Definition at line 13154 of file lapacke\&.h\&.
.SS "#define LAPACK_zhecon   \fBLAPACK_GLOBAL\fP(\fBzhecon\fP,ZHECON)"

.PP
Definition at line 12762 of file lapacke\&.h\&.
.SS "#define LAPACK_zhecon_3   \fBLAPACK_GLOBAL\fP(\fBzhecon_3\fP,ZHECON_3)"

.PP
Definition at line 13801 of file lapacke\&.h\&.
.SS "#define LAPACK_zheequb   \fBLAPACK_GLOBAL\fP(\fBzheequb\fP,ZHEEQUB)"

.PP
Definition at line 12927 of file lapacke\&.h\&.
.SS "#define LAPACK_zheev   \fBLAPACK_GLOBAL\fP(\fBzheev\fP,ZHEEV)"

.PP
Definition at line 13328 of file lapacke\&.h\&.
.SS "#define LAPACK_zheev_2stage   \fBLAPACK_GLOBAL\fP(\fBzheev_2stage\fP,ZHEEV_2STAGE)"

.PP
Definition at line 13332 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevd   \fBLAPACK_GLOBAL\fP(\fBzheevd\fP,ZHEEVD)"

.PP
Definition at line 13336 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevd_2stage   \fBLAPACK_GLOBAL\fP(\fBzheevd_2stage\fP,ZHEEVD_2STAGE)"

.PP
Definition at line 13340 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevr   \fBLAPACK_GLOBAL\fP(\fBzheevr\fP,ZHEEVR)"

.PP
Definition at line 13352 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevr_2stage   \fBLAPACK_GLOBAL\fP(\fBzheevr_2stage\fP,ZHEEVR_2STAGE)"

.PP
Definition at line 13356 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevx   \fBLAPACK_GLOBAL\fP(\fBzheevx\fP,ZHEEVX)"

.PP
Definition at line 13344 of file lapacke\&.h\&.
.SS "#define LAPACK_zheevx_2stage   \fBLAPACK_GLOBAL\fP(\fBzheevx_2stage\fP,ZHEEVX_2STAGE)"

.PP
Definition at line 13348 of file lapacke\&.h\&.
.SS "#define LAPACK_zhegst   \fBLAPACK_GLOBAL\fP(\fBzhegst\fP,ZHEGST)"

.PP
Definition at line 13188 of file lapacke\&.h\&.
.SS "#define LAPACK_zhegv   \fBLAPACK_GLOBAL\fP(\fBzhegv\fP,ZHEGV)"

.PP
Definition at line 13444 of file lapacke\&.h\&.
.SS "#define LAPACK_zhegv_2stage   \fBLAPACK_GLOBAL\fP(\fBzhegv_2stage\fP,ZHEGV_2STAGE)"

.PP
Definition at line 13448 of file lapacke\&.h\&.
.SS "#define LAPACK_zhegvd   \fBLAPACK_GLOBAL\fP(\fBzhegvd\fP,ZHEGVD)"

.PP
Definition at line 13452 of file lapacke\&.h\&.
.SS "#define LAPACK_zhegvx   \fBLAPACK_GLOBAL\fP(\fBzhegvx\fP,ZHEGVX)"

.PP
Definition at line 13456 of file lapacke\&.h\&.
.SS "#define LAPACK_zherfs   \fBLAPACK_GLOBAL\fP(\fBzherfs\fP,ZHERFS)"

.PP
Definition at line 12830 of file lapacke\&.h\&.
.SS "#define LAPACK_zherfsx   \fBLAPACK_GLOBAL\fP(\fBzherfsx\fP,ZHERFSX)"

.PP
Definition at line 12831 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesv   \fBLAPACK_GLOBAL\fP(\fBzhesv\fP,ZHESV)"

.PP
Definition at line 13014 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesv_aa   \fBLAPACK_GLOBAL\fP(\fBzhesv_aa\fP,ZHESV_AA)"

.PP
Definition at line 13758 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzhesv_aa_2stage\fP,ZHESV_AA_2STAGE)"

.PP
Definition at line 13829 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesv_rk   \fBLAPACK_GLOBAL\fP(\fBzhesv_rk\fP,ZHESV_RK)"

.PP
Definition at line 13777 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesvx   \fBLAPACK_GLOBAL\fP(\fBzhesvx\fP,ZHESVX)"

.PP
Definition at line 13016 of file lapacke\&.h\&.
.SS "#define LAPACK_zhesvxx   \fBLAPACK_GLOBAL\fP(\fBzhesvxx\fP,ZHESVXX)"

.PP
Definition at line 13017 of file lapacke\&.h\&.
.SS "#define LAPACK_zheswapr   \fBLAPACK_GLOBAL\fP(\fBzheswapr\fP,ZHESWAPR)"

.PP
Definition at line 13694 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrd   \fBLAPACK_GLOBAL\fP(\fBzhetrd\fP,ZHETRD)"

.PP
Definition at line 13134 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrf   \fBLAPACK_GLOBAL\fP(\fBzhetrf\fP,ZHETRF)"

.PP
Definition at line 12659 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrf_aa   \fBLAPACK_GLOBAL\fP(\fBzhetrf_aa\fP,ZHETRF_AA)"

.PP
Definition at line 13770 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzhetrf_aa_2stage\fP,ZHETRF_AA_2STAGE)"

.PP
Definition at line 13841 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrf_rk   \fBLAPACK_GLOBAL\fP(\fBzhetrf_rk\fP,ZHETRF_RK)"

.PP
Definition at line 13783 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrf_rook   \fBLAPACK_GLOBAL\fP(\fBzhetrf_rook\fP,ZHETRF_ROOK)"

.PP
Definition at line 12660 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetri   \fBLAPACK_GLOBAL\fP(\fBzhetri\fP,ZHETRI)"

.PP
Definition at line 12872 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetri2   \fBLAPACK_GLOBAL\fP(\fBzhetri2\fP,ZHETRI2)"

.PP
Definition at line 13695 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetri2x   \fBLAPACK_GLOBAL\fP(\fBzhetri2x\fP,ZHETRI2X)"

.PP
Definition at line 13696 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetri_3   \fBLAPACK_GLOBAL\fP(\fBzhetri_3\fP,ZHETRI_3)"

.PP
Definition at line 13795 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs   \fBLAPACK_GLOBAL\fP(\fBzhetrs\fP,ZHETRS)"

.PP
Definition at line 12709 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs2   \fBLAPACK_GLOBAL\fP(\fBzhetrs2\fP,ZHETRS2)"

.PP
Definition at line 13697 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs_3   \fBLAPACK_GLOBAL\fP(\fBzhetrs_3\fP,ZHETRS_3)"

.PP
Definition at line 13789 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs_aa   \fBLAPACK_GLOBAL\fP(\fBzhetrs_aa\fP,ZHETRS_AA)"

.PP
Definition at line 13764 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzhetrs_aa_2stage\fP,ZHETRS_AA_2STAGE)"

.PP
Definition at line 13835 of file lapacke\&.h\&.
.SS "#define LAPACK_zhetrs_rook   \fBLAPACK_GLOBAL\fP(\fBzhetrs_rook\fP,ZHETRS_ROOK)"

.PP
Definition at line 12710 of file lapacke\&.h\&.
.SS "#define LAPACK_zhfrk   \fBLAPACK_GLOBAL\fP(\fBzhfrk\fP,ZHFRK)"

.PP
Definition at line 13507 of file lapacke\&.h\&.
.SS "#define LAPACK_zhgeqz   \fBLAPACK_GLOBAL\fP(\fBzhgeqz\fP,ZHGEQZ)"

.PP
Definition at line 13268 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpcon   \fBLAPACK_GLOBAL\fP(\fBzhpcon\fP,ZHPCON)"

.PP
Definition at line 12768 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpev   \fBLAPACK_GLOBAL\fP(\fBzhpev\fP,ZHPEV)"

.PP
Definition at line 13360 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpevd   \fBLAPACK_GLOBAL\fP(\fBzhpevd\fP,ZHPEVD)"

.PP
Definition at line 13364 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpevx   \fBLAPACK_GLOBAL\fP(\fBzhpevx\fP,ZHPEVX)"

.PP
Definition at line 13368 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpgst   \fBLAPACK_GLOBAL\fP(\fBzhpgst\fP,ZHPGST)"

.PP
Definition at line 13192 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpgv   \fBLAPACK_GLOBAL\fP(\fBzhpgv\fP,ZHPGV)"

.PP
Definition at line 13460 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpgvd   \fBLAPACK_GLOBAL\fP(\fBzhpgvd\fP,ZHPGVD)"

.PP
Definition at line 13464 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpgvx   \fBLAPACK_GLOBAL\fP(\fBzhpgvx\fP,ZHPGVX)"

.PP
Definition at line 13468 of file lapacke\&.h\&.
.SS "#define LAPACK_zhprfs   \fBLAPACK_GLOBAL\fP(\fBzhprfs\fP,ZHPRFS)"

.PP
Definition at line 12838 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpsv   \fBLAPACK_GLOBAL\fP(\fBzhpsv\fP,ZHPSV)"

.PP
Definition at line 13028 of file lapacke\&.h\&.
.SS "#define LAPACK_zhpsvx   \fBLAPACK_GLOBAL\fP(\fBzhpsvx\fP,ZHPSVX)"

.PP
Definition at line 13030 of file lapacke\&.h\&.
.SS "#define LAPACK_zhptrd   \fBLAPACK_GLOBAL\fP(\fBzhptrd\fP,ZHPTRD)"

.PP
Definition at line 13146 of file lapacke\&.h\&.
.SS "#define LAPACK_zhptrf   \fBLAPACK_GLOBAL\fP(\fBzhptrf\fP,ZHPTRF)"

.PP
Definition at line 12666 of file lapacke\&.h\&.
.SS "#define LAPACK_zhptri   \fBLAPACK_GLOBAL\fP(\fBzhptri\fP,ZHPTRI)"

.PP
Definition at line 12878 of file lapacke\&.h\&.
.SS "#define LAPACK_zhptrs   \fBLAPACK_GLOBAL\fP(\fBzhptrs\fP,ZHPTRS)"

.PP
Definition at line 12716 of file lapacke\&.h\&.
.SS "#define LAPACK_zhsein   \fBLAPACK_GLOBAL\fP(\fBzhsein\fP,ZHSEIN)"

.PP
Definition at line 13228 of file lapacke\&.h\&.
.SS "#define LAPACK_zhseqr   \fBLAPACK_GLOBAL\fP(\fBzhseqr\fP,ZHSEQR)"

.PP
Definition at line 13224 of file lapacke\&.h\&.
.SS "#define LAPACK_zlacgv   \fBLAPACK_GLOBAL\fP(\fBzlacgv\fP,ZLACGV)"

.PP
Definition at line 13542 of file lapacke\&.h\&.
.SS "#define LAPACK_zlacn2   \fBLAPACK_GLOBAL\fP(\fBzlacn2\fP,ZLACN2)"

.PP
Definition at line 13554 of file lapacke\&.h\&.
.SS "#define LAPACK_zlacp2   \fBLAPACK_GLOBAL\fP(\fBzlacp2\fP,ZLACP2)"

.PP
Definition at line 13560 of file lapacke\&.h\&.
.SS "#define LAPACK_zlacpy   \fBLAPACK_GLOBAL\fP(\fBzlacpy\fP,ZLACPY)"

.PP
Definition at line 13558 of file lapacke\&.h\&.
.SS "#define LAPACK_zlacrm   \fBLAPACK_GLOBAL\fP(\fBzlacrm\fP,ZLACRM)"

.PP
Definition at line 13578 of file lapacke\&.h\&.
.SS "#define LAPACK_zlag2c   \fBLAPACK_GLOBAL\fP(\fBzlag2c\fP,ZLAG2C)"

.PP
Definition at line 13620 of file lapacke\&.h\&.
.SS "#define LAPACK_zlagge   \fBLAPACK_GLOBAL\fP(zlagge,ZLAGGE)"

.PP
Definition at line 13628 of file lapacke\&.h\&.
.SS "#define LAPACK_zlaghe   \fBLAPACK_GLOBAL\fP(zlaghe,ZLAGHE)"

.PP
Definition at line 13644 of file lapacke\&.h\&.
.SS "#define LAPACK_zlagsy   \fBLAPACK_GLOBAL\fP(zlagsy,ZLAGSY)"

.PP
Definition at line 13642 of file lapacke\&.h\&.
.SS "#define LAPACK_zlange   \fBLAPACK_GLOBAL\fP(\fBzlange\fP,ZLANGE)"

.PP
Definition at line 13572 of file lapacke\&.h\&.
.SS "#define LAPACK_zlanhe   \fBLAPACK_GLOBAL\fP(\fBzlanhe\fP,ZLANHE)"

.PP
Definition at line 13574 of file lapacke\&.h\&.
.SS "#define LAPACK_zlansy   \fBLAPACK_GLOBAL\fP(\fBzlansy\fP,ZLANSY)"

.PP
Definition at line 13582 of file lapacke\&.h\&.
.SS "#define LAPACK_zlantr   \fBLAPACK_GLOBAL\fP(\fBzlantr\fP,ZLANTR)"

.PP
Definition at line 13586 of file lapacke\&.h\&.
.SS "#define LAPACK_zlapmr   \fBLAPACK_GLOBAL\fP(\fBzlapmr\fP,ZLAPMR)"

.PP
Definition at line 13648 of file lapacke\&.h\&.
.SS "#define LAPACK_zlapmt   \fBLAPACK_GLOBAL\fP(\fBzlapmt\fP,ZLAPMT)"

.PP
Definition at line 13652 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarcm   \fBLAPACK_GLOBAL\fP(\fBzlarcm\fP,ZLARCM)"

.PP
Definition at line 13576 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarfb   \fBLAPACK_GLOBAL\fP(\fBzlarfb\fP,ZLARFB)"

.PP
Definition at line 13596 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarfg   \fBLAPACK_GLOBAL\fP(\fBzlarfg\fP,ZLARFG)"

.PP
Definition at line 13600 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarft   \fBLAPACK_GLOBAL\fP(\fBzlarft\fP,ZLARFT)"

.PP
Definition at line 13608 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarfx   \fBLAPACK_GLOBAL\fP(\fBzlarfx\fP,ZLARFX)"

.PP
Definition at line 13612 of file lapacke\&.h\&.
.SS "#define LAPACK_zlarnv   \fBLAPACK_GLOBAL\fP(\fBzlarnv\fP,ZLARNV)"

.PP
Definition at line 13546 of file lapacke\&.h\&.
.SS "#define LAPACK_zlascl   \fBLAPACK_GLOBAL\fP(\fBzlascl\fP,ZLASCL)"

.PP
Definition at line 13632 of file lapacke\&.h\&.
.SS "#define LAPACK_zlaset   \fBLAPACK_GLOBAL\fP(\fBzlaset\fP,ZLASET)"

.PP
Definition at line 13636 of file lapacke\&.h\&.
.SS "#define LAPACK_zlassq   \fBLAPACK_GLOBAL\fP(\fBzlassq\fP,ZLASSQ)"

.PP
Definition at line 13604 of file lapacke\&.h\&.
.SS "#define LAPACK_zlaswp   \fBLAPACK_GLOBAL\fP(\fBzlaswp\fP,ZLASWP)"

.PP
Definition at line 13568 of file lapacke\&.h\&.
.SS "#define LAPACK_zlatms   \fBLAPACK_GLOBAL\fP(zlatms,ZLATMS)"

.PP
Definition at line 13616 of file lapacke\&.h\&.
.SS "#define LAPACK_zlauum   \fBLAPACK_GLOBAL\fP(\fBzlauum\fP,ZLAUUM)"

.PP
Definition at line 13624 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbcon   \fBLAPACK_GLOBAL\fP(\fBzpbcon\fP,ZPBCON)"

.PP
Definition at line 12752 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbequ   \fBLAPACK_GLOBAL\fP(\fBzpbequ\fP,ZPBEQU)"

.PP
Definition at line 12922 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbrfs   \fBLAPACK_GLOBAL\fP(\fBzpbrfs\fP,ZPBRFS)"

.PP
Definition at line 12816 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbstf   \fBLAPACK_GLOBAL\fP(\fBzpbstf\fP,ZPBSTF)"

.PP
Definition at line 13200 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbsv   \fBLAPACK_GLOBAL\fP(\fBzpbsv\fP,ZPBSV)"

.PP
Definition at line 12988 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbsvx   \fBLAPACK_GLOBAL\fP(\fBzpbsvx\fP,ZPBSVX)"

.PP
Definition at line 12992 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbtrf   \fBLAPACK_GLOBAL\fP(\fBzpbtrf\fP,ZPBTRF)"

.PP
Definition at line 12644 of file lapacke\&.h\&.
.SS "#define LAPACK_zpbtrs   \fBLAPACK_GLOBAL\fP(\fBzpbtrs\fP,ZPBTRS)"

.PP
Definition at line 12694 of file lapacke\&.h\&.
.SS "#define LAPACK_zpftrf   \fBLAPACK_GLOBAL\fP(\fBzpftrf\fP,ZPFTRF)"

.PP
Definition at line 12635 of file lapacke\&.h\&.
.SS "#define LAPACK_zpftri   \fBLAPACK_GLOBAL\fP(\fBzpftri\fP,ZPFTRI)"

.PP
Definition at line 12861 of file lapacke\&.h\&.
.SS "#define LAPACK_zpftrs   \fBLAPACK_GLOBAL\fP(\fBzpftrs\fP,ZPFTRS)"

.PP
Definition at line 12685 of file lapacke\&.h\&.
.SS "#define LAPACK_zpocon   \fBLAPACK_GLOBAL\fP(\fBzpocon\fP,ZPOCON)"

.PP
Definition at line 12744 of file lapacke\&.h\&.
.SS "#define LAPACK_zpoequ   \fBLAPACK_GLOBAL\fP(\fBzpoequ\fP,ZPOEQU)"

.PP
Definition at line 12910 of file lapacke\&.h\&.
.SS "#define LAPACK_zpoequb   \fBLAPACK_GLOBAL\fP(\fBzpoequb\fP,ZPOEQUB)"

.PP
Definition at line 12913 of file lapacke\&.h\&.
.SS "#define LAPACK_zporfs   \fBLAPACK_GLOBAL\fP(\fBzporfs\fP,ZPORFS)"

.PP
Definition at line 12804 of file lapacke\&.h\&.
.SS "#define LAPACK_zporfsx   \fBLAPACK_GLOBAL\fP(\fBzporfsx\fP,ZPORFSX)"

.PP
Definition at line 12807 of file lapacke\&.h\&.
.SS "#define LAPACK_zposv   \fBLAPACK_GLOBAL\fP(\fBzposv\fP,ZPOSV)"

.PP
Definition at line 12966 of file lapacke\&.h\&.
.SS "#define LAPACK_zposvx   \fBLAPACK_GLOBAL\fP(\fBzposvx\fP,ZPOSVX)"

.PP
Definition at line 12972 of file lapacke\&.h\&.
.SS "#define LAPACK_zposvxx   \fBLAPACK_GLOBAL\fP(\fBzposvxx\fP,ZPOSVXX)"

.PP
Definition at line 12975 of file lapacke\&.h\&.
.SS "#define LAPACK_zpotrf   \fBLAPACK_GLOBAL\fP(\fBzpotrf\fP,ZPOTRF)"

.PP
Definition at line 12624 of file lapacke\&.h\&.
.SS "#define LAPACK_zpotrf2   \fBLAPACK_GLOBAL\fP(\fBzpotrf2\fP,ZPOTRF2)"

.PP
Definition at line 12628 of file lapacke\&.h\&.
.SS "#define LAPACK_zpotri   \fBLAPACK_GLOBAL\fP(\fBzpotri\fP,ZPOTRI)"

.PP
Definition at line 12858 of file lapacke\&.h\&.
.SS "#define LAPACK_zpotrs   \fBLAPACK_GLOBAL\fP(\fBzpotrs\fP,ZPOTRS)"

.PP
Definition at line 12682 of file lapacke\&.h\&.
.SS "#define LAPACK_zppcon   \fBLAPACK_GLOBAL\fP(\fBzppcon\fP,ZPPCON)"

.PP
Definition at line 12748 of file lapacke\&.h\&.
.SS "#define LAPACK_zppequ   \fBLAPACK_GLOBAL\fP(\fBzppequ\fP,ZPPEQU)"

.PP
Definition at line 12918 of file lapacke\&.h\&.
.SS "#define LAPACK_zpprfs   \fBLAPACK_GLOBAL\fP(\fBzpprfs\fP,ZPPRFS)"

.PP
Definition at line 12812 of file lapacke\&.h\&.
.SS "#define LAPACK_zppsv   \fBLAPACK_GLOBAL\fP(\fBzppsv\fP,ZPPSV)"

.PP
Definition at line 12980 of file lapacke\&.h\&.
.SS "#define LAPACK_zppsvx   \fBLAPACK_GLOBAL\fP(\fBzppsvx\fP,ZPPSVX)"

.PP
Definition at line 12984 of file lapacke\&.h\&.
.SS "#define LAPACK_zpptrf   \fBLAPACK_GLOBAL\fP(\fBzpptrf\fP,ZPPTRF)"

.PP
Definition at line 12640 of file lapacke\&.h\&.
.SS "#define LAPACK_zpptri   \fBLAPACK_GLOBAL\fP(\fBzpptri\fP,ZPPTRI)"

.PP
Definition at line 12866 of file lapacke\&.h\&.
.SS "#define LAPACK_zpptrs   \fBLAPACK_GLOBAL\fP(\fBzpptrs\fP,ZPPTRS)"

.PP
Definition at line 12690 of file lapacke\&.h\&.
.SS "#define LAPACK_zpstrf   \fBLAPACK_GLOBAL\fP(\fBzpstrf\fP,ZPSTRF)"

.PP
Definition at line 12631 of file lapacke\&.h\&.
.SS "#define LAPACK_zptcon   \fBLAPACK_GLOBAL\fP(\fBzptcon\fP,ZPTCON)"

.PP
Definition at line 12756 of file lapacke\&.h\&.
.SS "#define LAPACK_zpteqr   \fBLAPACK_GLOBAL\fP(\fBzpteqr\fP,ZPTEQR)"

.PP
Definition at line 13176 of file lapacke\&.h\&.
.SS "#define LAPACK_zptrfs   \fBLAPACK_GLOBAL\fP(\fBzptrfs\fP,ZPTRFS)"

.PP
Definition at line 12820 of file lapacke\&.h\&.
.SS "#define LAPACK_zptsv   \fBLAPACK_GLOBAL\fP(\fBzptsv\fP,ZPTSV)"

.PP
Definition at line 12996 of file lapacke\&.h\&.
.SS "#define LAPACK_zptsvx   \fBLAPACK_GLOBAL\fP(\fBzptsvx\fP,ZPTSVX)"

.PP
Definition at line 13000 of file lapacke\&.h\&.
.SS "#define LAPACK_zpttrf   \fBLAPACK_GLOBAL\fP(\fBzpttrf\fP,ZPTTRF)"

.PP
Definition at line 12648 of file lapacke\&.h\&.
.SS "#define LAPACK_zpttrs   \fBLAPACK_GLOBAL\fP(\fBzpttrs\fP,ZPTTRS)"

.PP
Definition at line 12698 of file lapacke\&.h\&.
.SS "#define LAPACK_zspcon   \fBLAPACK_GLOBAL\fP(\fBzspcon\fP,ZSPCON)"

.PP
Definition at line 12766 of file lapacke\&.h\&.
.SS "#define LAPACK_zsprfs   \fBLAPACK_GLOBAL\fP(\fBzsprfs\fP,ZSPRFS)"

.PP
Definition at line 12836 of file lapacke\&.h\&.
.SS "#define LAPACK_zspsv   \fBLAPACK_GLOBAL\fP(\fBzspsv\fP,ZSPSV)"

.PP
Definition at line 13022 of file lapacke\&.h\&.
.SS "#define LAPACK_zspsvx   \fBLAPACK_GLOBAL\fP(\fBzspsvx\fP,ZSPSVX)"

.PP
Definition at line 13026 of file lapacke\&.h\&.
.SS "#define LAPACK_zsptrf   \fBLAPACK_GLOBAL\fP(\fBzsptrf\fP,ZSPTRF)"

.PP
Definition at line 12664 of file lapacke\&.h\&.
.SS "#define LAPACK_zsptri   \fBLAPACK_GLOBAL\fP(\fBzsptri\fP,ZSPTRI)"

.PP
Definition at line 12876 of file lapacke\&.h\&.
.SS "#define LAPACK_zsptrs   \fBLAPACK_GLOBAL\fP(\fBzsptrs\fP,ZSPTRS)"

.PP
Definition at line 12714 of file lapacke\&.h\&.
.SS "#define LAPACK_zstedc   \fBLAPACK_GLOBAL\fP(\fBzstedc\fP,ZSTEDC)"

.PP
Definition at line 13168 of file lapacke\&.h\&.
.SS "#define LAPACK_zstegr   \fBLAPACK_GLOBAL\fP(\fBzstegr\fP,ZSTEGR)"

.PP
Definition at line 13172 of file lapacke\&.h\&.
.SS "#define LAPACK_zstein   \fBLAPACK_GLOBAL\fP(\fBzstein\fP,ZSTEIN)"

.PP
Definition at line 13182 of file lapacke\&.h\&.
.SS "#define LAPACK_zstemr   \fBLAPACK_GLOBAL\fP(\fBzstemr\fP,ZSTEMR)"

.PP
Definition at line 13164 of file lapacke\&.h\&.
.SS "#define LAPACK_zsteqr   \fBLAPACK_GLOBAL\fP(\fBzsteqr\fP,ZSTEQR)"

.PP
Definition at line 13160 of file lapacke\&.h\&.
.SS "#define LAPACK_zsycon   \fBLAPACK_GLOBAL\fP(\fBzsycon\fP,ZSYCON)"

.PP
Definition at line 12760 of file lapacke\&.h\&.
.SS "#define LAPACK_zsycon_3   \fBLAPACK_GLOBAL\fP(\fBzsycon_3\fP,ZSYCON_3)"

.PP
Definition at line 13799 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyconv   \fBLAPACK_GLOBAL\fP(\fBzsyconv\fP,ZSYCONV)"

.PP
Definition at line 13698 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyequb   \fBLAPACK_GLOBAL\fP(\fBzsyequb\fP,ZSYEQUB)"

.PP
Definition at line 12925 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyr   \fBLAPACK_GLOBAL\fP(\fBzsyr\fP,ZSYR)"

.PP
Definition at line 13745 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyrfs   \fBLAPACK_GLOBAL\fP(\fBzsyrfs\fP,ZSYRFS)"

.PP
Definition at line 12824 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyrfsx   \fBLAPACK_GLOBAL\fP(\fBzsyrfsx\fP,ZSYRFSX)"

.PP
Definition at line 12827 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysv   \fBLAPACK_GLOBAL\fP(\fBzsysv\fP,ZSYSV)"

.PP
Definition at line 13004 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysv_aa   \fBLAPACK_GLOBAL\fP(\fBzsysv_aa\fP,ZSYSV_AA)"

.PP
Definition at line 13756 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysv_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzsysv_aa_2stage\fP,ZSYSV_AA_2STAGE)"

.PP
Definition at line 13827 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysv_rk   \fBLAPACK_GLOBAL\fP(\fBzsysv_rk\fP,ZSYSV_RK)"

.PP
Definition at line 13775 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysv_rook   \fBLAPACK_GLOBAL\fP(\fBzsysv_rook\fP,ZSYSV_ROOK)"

.PP
Definition at line 13743 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysvx   \fBLAPACK_GLOBAL\fP(\fBzsysvx\fP,ZSYSVX)"

.PP
Definition at line 13008 of file lapacke\&.h\&.
.SS "#define LAPACK_zsysvxx   \fBLAPACK_GLOBAL\fP(\fBzsysvxx\fP,ZSYSVXX)"

.PP
Definition at line 13011 of file lapacke\&.h\&.
.SS "#define LAPACK_zsyswapr   \fBLAPACK_GLOBAL\fP(\fBzsyswapr\fP,ZSYSWAPR)"

.PP
Definition at line 13699 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrf   \fBLAPACK_GLOBAL\fP(\fBzsytrf\fP,ZSYTRF)"

.PP
Definition at line 12655 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrf_aa   \fBLAPACK_GLOBAL\fP(\fBzsytrf_aa\fP,ZSYTRF_AA)"

.PP
Definition at line 13768 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrf_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzsytrf_aa_2stage\fP,ZSYTRF_AA_2STAGE)"

.PP
Definition at line 13839 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrf_rk   \fBLAPACK_GLOBAL\fP(\fBzsytrf_rk\fP,ZSYTRF_RK)"

.PP
Definition at line 13781 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrf_rook   \fBLAPACK_GLOBAL\fP(\fBzsytrf_rook\fP,ZSYTRF_ROOK)"

.PP
Definition at line 12656 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytri   \fBLAPACK_GLOBAL\fP(\fBzsytri\fP,ZSYTRI)"

.PP
Definition at line 12870 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytri2   \fBLAPACK_GLOBAL\fP(\fBzsytri2\fP,ZSYTRI2)"

.PP
Definition at line 13700 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytri2x   \fBLAPACK_GLOBAL\fP(\fBzsytri2x\fP,ZSYTRI2X)"

.PP
Definition at line 13701 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytri_3   \fBLAPACK_GLOBAL\fP(\fBzsytri_3\fP,ZSYTRI_3)"

.PP
Definition at line 13793 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs   \fBLAPACK_GLOBAL\fP(\fBzsytrs\fP,ZSYTRS)"

.PP
Definition at line 12705 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs2   \fBLAPACK_GLOBAL\fP(\fBzsytrs2\fP,ZSYTRS2)"

.PP
Definition at line 13702 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs_3   \fBLAPACK_GLOBAL\fP(\fBzsytrs_3\fP,ZSYTRS_3)"

.PP
Definition at line 13787 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs_aa   \fBLAPACK_GLOBAL\fP(\fBzsytrs_aa\fP,ZSYTRS_AA)"

.PP
Definition at line 13762 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs_aa_2stage   \fBLAPACK_GLOBAL\fP(\fBzsytrs_aa_2stage\fP,ZSYTRS_AA_2STAGE)"

.PP
Definition at line 13833 of file lapacke\&.h\&.
.SS "#define LAPACK_zsytrs_rook   \fBLAPACK_GLOBAL\fP(\fBzsytrs_rook\fP,ZSYTRS_ROOK)"

.PP
Definition at line 12706 of file lapacke\&.h\&.
.SS "#define LAPACK_ztbcon   \fBLAPACK_GLOBAL\fP(\fBztbcon\fP,ZTBCON)"

.PP
Definition at line 12780 of file lapacke\&.h\&.
.SS "#define LAPACK_ztbrfs   \fBLAPACK_GLOBAL\fP(\fBztbrfs\fP,ZTBRFS)"

.PP
Definition at line 12850 of file lapacke\&.h\&.
.SS "#define LAPACK_ztbtrs   \fBLAPACK_GLOBAL\fP(\fBztbtrs\fP,ZTBTRS)"

.PP
Definition at line 12728 of file lapacke\&.h\&.
.SS "#define LAPACK_ztfsm   \fBLAPACK_GLOBAL\fP(\fBztfsm\fP,ZTFSM)"

.PP
Definition at line 13511 of file lapacke\&.h\&.
.SS "#define LAPACK_ztftri   \fBLAPACK_GLOBAL\fP(\fBztftri\fP,ZTFTRI)"

.PP
Definition at line 12885 of file lapacke\&.h\&.
.SS "#define LAPACK_ztfttp   \fBLAPACK_GLOBAL\fP(\fBztfttp\fP,ZTFTTP)"

.PP
Definition at line 13515 of file lapacke\&.h\&.
.SS "#define LAPACK_ztfttr   \fBLAPACK_GLOBAL\fP(\fBztfttr\fP,ZTFTTR)"

.PP
Definition at line 13519 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgevc   \fBLAPACK_GLOBAL\fP(\fBztgevc\fP,ZTGEVC)"

.PP
Definition at line 13272 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgexc   \fBLAPACK_GLOBAL\fP(\fBztgexc\fP,ZTGEXC)"

.PP
Definition at line 13276 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgsen   \fBLAPACK_GLOBAL\fP(\fBztgsen\fP,ZTGSEN)"

.PP
Definition at line 13280 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgsja   \fBLAPACK_GLOBAL\fP(\fBztgsja\fP,ZTGSJA)"

.PP
Definition at line 13300 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgsna   \fBLAPACK_GLOBAL\fP(\fBztgsna\fP,ZTGSNA)"

.PP
Definition at line 13288 of file lapacke\&.h\&.
.SS "#define LAPACK_ztgsyl   \fBLAPACK_GLOBAL\fP(\fBztgsyl\fP,ZTGSYL)"

.PP
Definition at line 13284 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpcon   \fBLAPACK_GLOBAL\fP(\fBztpcon\fP,ZTPCON)"

.PP
Definition at line 12776 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpmqrt   \fBLAPACK_GLOBAL\fP(\fBztpmqrt\fP,ZTPMQRT)"

.PP
Definition at line 13726 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpqrt   \fBLAPACK_GLOBAL\fP(\fBztpqrt\fP,ZTPQRT)"

.PP
Definition at line 13730 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpqrt2   \fBLAPACK_GLOBAL\fP(\fBztpqrt2\fP,ZTPQRT2)"

.PP
Definition at line 13734 of file lapacke\&.h\&.
.SS "#define LAPACK_ztprfb   \fBLAPACK_GLOBAL\fP(\fBztprfb\fP,ZTPRFB)"

.PP
Definition at line 13738 of file lapacke\&.h\&.
.SS "#define LAPACK_ztprfs   \fBLAPACK_GLOBAL\fP(\fBztprfs\fP,ZTPRFS)"

.PP
Definition at line 12846 of file lapacke\&.h\&.
.SS "#define LAPACK_ztptri   \fBLAPACK_GLOBAL\fP(\fBztptri\fP,ZTPTRI)"

.PP
Definition at line 12890 of file lapacke\&.h\&.
.SS "#define LAPACK_ztptrs   \fBLAPACK_GLOBAL\fP(\fBztptrs\fP,ZTPTRS)"

.PP
Definition at line 12724 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpttf   \fBLAPACK_GLOBAL\fP(\fBztpttf\fP,ZTPTTF)"

.PP
Definition at line 13523 of file lapacke\&.h\&.
.SS "#define LAPACK_ztpttr   \fBLAPACK_GLOBAL\fP(\fBztpttr\fP,ZTPTTR)"

.PP
Definition at line 13527 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrcon   \fBLAPACK_GLOBAL\fP(\fBztrcon\fP,ZTRCON)"

.PP
Definition at line 12772 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrevc   \fBLAPACK_GLOBAL\fP(\fBztrevc\fP,ZTREVC)"

.PP
Definition at line 13232 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrexc   \fBLAPACK_GLOBAL\fP(\fBztrexc\fP,ZTREXC)"

.PP
Definition at line 13240 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrrfs   \fBLAPACK_GLOBAL\fP(\fBztrrfs\fP,ZTRRFS)"

.PP
Definition at line 12842 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrsen   \fBLAPACK_GLOBAL\fP(\fBztrsen\fP,ZTRSEN)"

.PP
Definition at line 13244 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrsna   \fBLAPACK_GLOBAL\fP(\fBztrsna\fP,ZTRSNA)"

.PP
Definition at line 13236 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrsyl   \fBLAPACK_GLOBAL\fP(\fBztrsyl\fP,ZTRSYL)"

.PP
Definition at line 13248 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrtri   \fBLAPACK_GLOBAL\fP(\fBztrtri\fP,ZTRTRI)"

.PP
Definition at line 12882 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrtrs   \fBLAPACK_GLOBAL\fP(\fBztrtrs\fP,ZTRTRS)"

.PP
Definition at line 12720 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrttf   \fBLAPACK_GLOBAL\fP(\fBztrttf\fP,ZTRTTF)"

.PP
Definition at line 13531 of file lapacke\&.h\&.
.SS "#define LAPACK_ztrttp   \fBLAPACK_GLOBAL\fP(\fBztrttp\fP,ZTRTTP)"

.PP
Definition at line 13535 of file lapacke\&.h\&.
.SS "#define LAPACK_ztzrzf   \fBLAPACK_GLOBAL\fP(\fBztzrzf\fP,ZTZRZF)"

.PP
Definition at line 13090 of file lapacke\&.h\&.
.SS "#define LAPACK_zunbdb   \fBLAPACK_GLOBAL\fP(\fBzunbdb\fP,ZUNBDB)"

.PP
Definition at line 13703 of file lapacke\&.h\&.
.SS "#define LAPACK_zuncsd   \fBLAPACK_GLOBAL\fP(\fBzuncsd\fP,ZUNCSD)"

.PP
Definition at line 13704 of file lapacke\&.h\&.
.SS "#define LAPACK_zuncsd2by1   \fBLAPACK_GLOBAL\fP(\fBzuncsd2by1\fP,ZUNCSD2BY1)"

.PP
Definition at line 13705 of file lapacke\&.h\&.
.SS "#define LAPACK_zungbr   \fBLAPACK_GLOBAL\fP(\fBzungbr\fP,ZUNGBR)"

.PP
Definition at line 13116 of file lapacke\&.h\&.
.SS "#define LAPACK_zunghr   \fBLAPACK_GLOBAL\fP(\fBzunghr\fP,ZUNGHR)"

.PP
Definition at line 13210 of file lapacke\&.h\&.
.SS "#define LAPACK_zunglq   \fBLAPACK_GLOBAL\fP(\fBzunglq\fP,ZUNGLQ)"

.PP
Definition at line 13060 of file lapacke\&.h\&.
.SS "#define LAPACK_zungql   \fBLAPACK_GLOBAL\fP(\fBzungql\fP,ZUNGQL)"

.PP
Definition at line 13070 of file lapacke\&.h\&.
.SS "#define LAPACK_zungqr   \fBLAPACK_GLOBAL\fP(\fBzungqr\fP,ZUNGQR)"

.PP
Definition at line 13048 of file lapacke\&.h\&.
.SS "#define LAPACK_zungrq   \fBLAPACK_GLOBAL\fP(\fBzungrq\fP,ZUNGRQ)"

.PP
Definition at line 13082 of file lapacke\&.h\&.
.SS "#define LAPACK_zungtr   \fBLAPACK_GLOBAL\fP(\fBzungtr\fP,ZUNGTR)"

.PP
Definition at line 13136 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmbr   \fBLAPACK_GLOBAL\fP(\fBzunmbr\fP,ZUNMBR)"

.PP
Definition at line 13118 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmhr   \fBLAPACK_GLOBAL\fP(\fBzunmhr\fP,ZUNMHR)"

.PP
Definition at line 13212 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmlq   \fBLAPACK_GLOBAL\fP(\fBzunmlq\fP,ZUNMLQ)"

.PP
Definition at line 13062 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmql   \fBLAPACK_GLOBAL\fP(\fBzunmql\fP,ZUNMQL)"

.PP
Definition at line 13074 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmqr   \fBLAPACK_GLOBAL\fP(\fBzunmqr\fP,ZUNMQR)"

.PP
Definition at line 13050 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmrq   \fBLAPACK_GLOBAL\fP(\fBzunmrq\fP,ZUNMRQ)"

.PP
Definition at line 13086 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmrz   \fBLAPACK_GLOBAL\fP(\fBzunmrz\fP,ZUNMRZ)"

.PP
Definition at line 13094 of file lapacke\&.h\&.
.SS "#define LAPACK_zunmtr   \fBLAPACK_GLOBAL\fP(\fBzunmtr\fP,ZUNMTR)"

.PP
Definition at line 13138 of file lapacke\&.h\&.
.SS "#define LAPACK_zupgtr   \fBLAPACK_GLOBAL\fP(\fBzupgtr\fP,ZUPGTR)"

.PP
Definition at line 13148 of file lapacke\&.h\&.
.SS "#define LAPACK_zupmtr   \fBLAPACK_GLOBAL\fP(\fBzupmtr\fP,ZUPMTR)"

.PP
Definition at line 13150 of file lapacke\&.h\&.
.SS "#define LAPACKE_free(p)   free( p )"

.PP
Definition at line 113 of file lapacke\&.h\&.
.SS "#define LAPACKE_malloc(size)   malloc( size )"

.PP
Definition at line 110 of file lapacke\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBlapack_logical\fP(* LAPACK_C_SELECT1) (const \fBlapack_complex_float\fP *)"

.PP
Definition at line 136 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_C_SELECT2) (const \fBlapack_complex_float\fP *, const \fBlapack_complex_float\fP *)"

.PP
Definition at line 138 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_D_SELECT2) (const double *, const double *)"

.PP
Definition at line 132 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_D_SELECT3) (const double *, const double *, const double *)"

.PP
Definition at line 134 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_S_SELECT2) (const float *, const float *)"

.PP
Definition at line 129 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_S_SELECT3) (const float *, const float *, const float *)"

.PP
Definition at line 131 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_Z_SELECT1) (const \fBlapack_complex_double\fP *)"

.PP
Definition at line 139 of file lapacke\&.h\&.
.SS "typedef \fBlapack_logical\fP(* LAPACK_Z_SELECT2) (const \fBlapack_complex_double\fP *, const \fBlapack_complex_double\fP *)"

.PP
Definition at line 141 of file lapacke\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void LAPACK_cbbcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, float * theta, float * phi, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP * ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cbdsqr (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ncvt, \fBlapack_int\fP * nru, \fBlapack_int\fP * ncc, float * d, float * e, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbbrd (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ncc, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * pt, \fBlapack_int\fP * ldpt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbcon (char * norm, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbrfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbsv (\fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbsvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbtrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgbtrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgebak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const float * scale, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgebal (char * job, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgebrd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * d, float * e, \fBlapack_complex_float\fP * tauq, \fBlapack_complex_float\fP * taup, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgecon (char * norm, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgees (char * jobvs, char * sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP * ldvs, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeesx (char * jobvs, char * sort, \fBLAPACK_C_SELECT1\fP select, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP * ldvs, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgehrd (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgejsv (char * joba, char * jobu, char * jobv, char * jobr, char * jobt, char * jobp, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * sva, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * cwork, \fBlapack_int\fP * lwork, float * work, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelq2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgels (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelsd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * s, float * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelss (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * s, float * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgelsy (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * jpvt, float * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgemlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgemqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgemqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqlf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqp3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqpf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqr2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqrfp (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgeqrt3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgerfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgerfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgerqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesdd (char * jobz, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesvd (char * jobu, char * jobvt, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesvdx (char * jobu, char * jobvt, char * range, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesvj (char * joba, char * jobu, char * jobv, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * sva, \fBlapack_int\fP * mv, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * cwork, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgesvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetrf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetri (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgetsls (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggbak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const float * lscale, const float * rscale, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggbal (char * job, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgges (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP * ldvsr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgges3 (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP * ldvsr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggesx (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_C_SELECT2\fP selctg, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP * ldvsr, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggev3 (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggglm (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x, \fBlapack_complex_float\fP * y, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgghd3 (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgghrd (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgglse (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * c, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggqrf (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * taub, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggrqf (\fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * taub, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggsvd (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggsvd3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggsvp (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, float * rwork, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cggsvp3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, float * rwork, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgtcon (char * norm, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgtrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * dlf, const \fBlapack_complex_float\fP * df, const \fBlapack_complex_float\fP * duf, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgtsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgtsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * dlf, \fBlapack_complex_float\fP * df, \fBlapack_complex_float\fP * duf, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgttrf (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cgttrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbgst (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_float\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbgv (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP * ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbgvd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP * ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbgvx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chbtrd (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_checon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_checon_3 (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheequb (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevr (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevr_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chegst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chegv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chegv_2stage (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chegvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chegvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_cherfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cherfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chesvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cheswapr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_chetrd (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * d, float * e, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrf_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrf_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrf_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetri2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetri2x (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetri_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chetrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chfrk (char * transr, char * uplo, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * alpha, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * beta, \fBlapack_complex_float\fP * c)"

.SS "void LAPACK_chgeqz (char * job, char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpgst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * bp, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpgv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpgvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpgvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_chprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chpsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_chptrd (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, float * d, float * e, \fBlapack_complex_float\fP * tau, \fBlapack_int\fP * info)"

.SS "void LAPACK_chptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_chptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_chptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_chsein (char * job, char * eigsrc, char * initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr, \fBlapack_int\fP * info)"

.SS "void LAPACK_chseqr (char * job, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_clacgv (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * incx)"

.SS "void LAPACK_clacn2 (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP * x, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.SS "void LAPACK_clacp2 (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_clacpy (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_clacrm (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, float * work)"

.SS "void LAPACK_clag2z (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * sa, \fBlapack_int\fP * ldsa, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_clagge (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_claghe (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_clagsy (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "float LAPACK_clange (char * norm, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * work)"

.SS "float LAPACK_clanhe (char * norm, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * work)"

.SS "float LAPACK_clansy (char * norm, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * work)"

.SS "float LAPACK_clantr (char * norm, char * uplo, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * work)"

.SS "void LAPACK_clapmr (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_clapmt (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_clarcm (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, float * work)"

.SS "void LAPACK_clarfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_clarfg (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * incx, \fBlapack_complex_float\fP * tau)"

.SS "void LAPACK_clarft (char * direct, char * storev, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt)"

.SS "void LAPACK_clarfx (char * side, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work)"

.SS "void LAPACK_clarnv (\fBlapack_int\fP * idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * x)"

.SS "void LAPACK_clascl (char * type, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, float * cfrom, float * cto, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_claset (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_classq (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * incx, float * scale, float * sumsq)"

.SS "void LAPACK_claswp (\fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * k1, \fBlapack_int\fP * k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP * incx)"

.SS "void LAPACK_clatms (\fBlapack_int\fP * m, \fBlapack_int\fP * n, char * dist, \fBlapack_int\fP * iseed, char * sym, float * d, \fBlapack_int\fP * mode, float * cond, float * dmax, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, char * pack, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_clauum (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbcon (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbequ (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbstf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kb, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP * ldafb, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbtrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpbtrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpftrf (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpftri (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpftrs (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpocon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpoequ (\fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpoequb (\fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cporfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cporfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cposvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cposvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpotrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpotrf2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpotri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpotrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cppcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cppequ (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cppsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cppsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpstrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float * tol, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cptcon (\fBlapack_int\fP * n, const float * d, const \fBlapack_complex_float\fP * e, float * anorm, float * rcond, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpteqr (char * compz, \fBlapack_int\fP * n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cptrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const \fBlapack_complex_float\fP * e, const float * df, const \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cptsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * d, \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cptsvx (char * fact, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const \fBlapack_complex_float\fP * e, float * df, \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpttrf (\fBlapack_int\fP * n, float * d, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_cpttrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cspcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cspsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cspsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_csptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_cstedc (char * compz, \fBlapack_int\fP * n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cstegr (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cstein (\fBlapack_int\fP * n, const float * d, const float * e, \fBlapack_int\fP * m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv, \fBlapack_int\fP * info)"

.SS "void LAPACK_cstemr (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csteqr (char * compz, \fBlapack_int\fP * n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csycon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csycon_3 (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csyconv (char * uplo, char * way, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_csyequb (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csyr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * alpha, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP * incx, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_csyrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csyrfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysv_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csysvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csyswapr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_csytrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrf_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrf_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrf_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytri2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytri2x (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytri_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_csytrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctbcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctbrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctbtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctfsm (char * transr, char * side, char * uplo, char * trans, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * alpha, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_ctftri (char * transr, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctfttp (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctfttr (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * s, \fBlapack_int\fP * lds, const \fBlapack_complex_float\fP * p, \fBlapack_int\fP * ldp, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgexc (\fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgsen (\fBlapack_int\fP * ijob, \fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgsja (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * ncycle, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, float * s, float * dif, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctgsyl (char * trans, \fBlapack_int\fP * ijob, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, const \fBlapack_complex_float\fP * d, \fBlapack_int\fP * ldd, const \fBlapack_complex_float\fP * e, \fBlapack_int\fP * lde, \fBlapack_complex_float\fP * f, \fBlapack_int\fP * ldf, float * scale, float * dif, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpmqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctprfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_ctprfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctptri (char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctptrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpttf (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctpttr (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, float * rcond, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrexc (char * compq, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrsen (char * job, char * compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * w, \fBlapack_int\fP * m, float * s, float * sep, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP * ldt, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP * ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP * ldvr, float * s, float * sep, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * ldwork, float * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrsyl (char * trana, char * tranb, \fBlapack_int\fP * isgn, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, float * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrtri (char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrttf (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctrttp (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ctzrzf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunbdb (char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP * ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP * ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP * ldx22, float * theta, float * phi, \fBlapack_complex_float\fP * taup1, \fBlapack_complex_float\fP * taup2, \fBlapack_complex_float\fP * tauq1, \fBlapack_complex_float\fP * tauq2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cuncsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP * ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP * ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP * ldx22, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP * ldv2t, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cuncsd2by1 (char * jobu1, char * jobu2, char * jobv1t, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP * ldx21, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, float * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cungbr (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunghr (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunglq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cungql (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cungqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cungrq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cungtr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmbr (char * vect, char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmhr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmql (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmrq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmrz (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cunmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_cupgtr (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_cupmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dbbcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, double * theta, double * phi, double * u1, \fBlapack_int\fP * ldu1, double * u2, \fBlapack_int\fP * ldu2, double * v1t, \fBlapack_int\fP * ldv1t, double * v2t, \fBlapack_int\fP * ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dbdsdc (char * uplo, char * compq, \fBlapack_int\fP * n, double * d, double * e, double * u, \fBlapack_int\fP * ldu, double * vt, \fBlapack_int\fP * ldvt, double * q, \fBlapack_int\fP * iq, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dbdsqr (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ncvt, \fBlapack_int\fP * nru, \fBlapack_int\fP * ncc, double * d, double * e, double * vt, \fBlapack_int\fP * ldvt, double * u, \fBlapack_int\fP * ldu, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dbdsvdx (char * uplo, char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, double * s, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ddisna (char * job, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * d, double * sep, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbbrd (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ncc, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, double * ab, \fBlapack_int\fP * ldab, double * d, double * e, double * q, \fBlapack_int\fP * ldq, double * pt, \fBlapack_int\fP * ldpt, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbcon (char * norm, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const double * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const double * ab, \fBlapack_int\fP * ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const double * ab, \fBlapack_int\fP * ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, const double * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbrfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, const double * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbsv (\fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, double * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, double * ab, \fBlapack_int\fP * ldab, double * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbsvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, double * ab, \fBlapack_int\fP * ldab, double * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbtrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, double * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgbtrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgebak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const double * scale, \fBlapack_int\fP * m, double * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgebal (char * job, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgebrd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * d, double * e, double * tauq, double * taup, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgecon (char * norm, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgees (char * jobvs, char * sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP * ldvs, double * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeesx (char * jobvs, char * sort, \fBLAPACK_D_SELECT2\fP select, char * sense, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP * ldvs, double * rconde, double * rcondv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * wr, double * wi, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * wr, double * wi, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgehrd (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgejsv (char * joba, char * jobu, char * jobv, char * jobr, char * jobt, char * jobp, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * sva, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * t, \fBlapack_int\fP * tsize, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelq2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgels (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelsd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * s, double * rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelss (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * s, double * rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgelsy (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * jpvt, double * rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgemlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * t, \fBlapack_int\fP * tsize, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgemqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * t, \fBlapack_int\fP * tsize, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgemqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * nb, const double * v, \fBlapack_int\fP * ldv, const double * t, \fBlapack_int\fP * ldt, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqlf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqp3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqpf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, double * tau, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * t, \fBlapack_int\fP * tsize, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqr2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqrfp (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nb, double * a, \fBlapack_int\fP * lda, double * t, \fBlapack_int\fP * ldt, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgeqrt3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgerfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgerfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgerqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesdd (char * jobz, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * s, double * u, \fBlapack_int\fP * ldu, double * vt, \fBlapack_int\fP * ldvt, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesvd (char * jobu, char * jobvt, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * s, double * u, \fBlapack_int\fP * ldu, double * vt, \fBlapack_int\fP * ldvt, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesvdx (char * jobu, char * jobvt, char * range, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, double * s, double * u, \fBlapack_int\fP * ldu, double * vt, \fBlapack_int\fP * ldvt, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesvj (char * joba, char * jobu, char * jobv, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * sva, \fBlapack_int\fP * mv, double * v, \fBlapack_int\fP * ldv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgesvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetrf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetri (\fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgetsls (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggbak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const double * lscale, const double * rscale, \fBlapack_int\fP * m, double * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggbal (char * job, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgges (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP * ldvsl, double * vsr, \fBlapack_int\fP * ldvsr, double * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgges3 (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP * ldvsl, double * vsr, \fBlapack_int\fP * ldvsr, double * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggesx (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_D_SELECT3\fP selctg, char * sense, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP * ldvsl, double * vsr, \fBlapack_int\fP * ldvsr, double * rconde, double * rcondv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggev3 (char * jobvl, char * jobvr, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggglm (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * d, double * x, double * y, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgghd3 (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * q, \fBlapack_int\fP * ldq, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgghrd (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * q, \fBlapack_int\fP * ldq, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgglse (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * c, double * d, double * x, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggqrf (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, double * a, \fBlapack_int\fP * lda, double * taua, double * b, \fBlapack_int\fP * ldb, double * taub, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggrqf (\fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * taua, double * b, \fBlapack_int\fP * ldb, double * taub, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggsvd (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * q, \fBlapack_int\fP * ldq, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggsvd3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * q, \fBlapack_int\fP * ldq, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggsvp (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, double * tau, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dggsvp3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgtcon (char * norm, \fBlapack_int\fP * n, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgtrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * dl, const double * d, const double * du, const double * dlf, const double * df, const double * duf, const double * du2, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgtsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * dl, double * d, double * du, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgtsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * dl, const double * d, const double * du, double * dlf, double * df, double * duf, double * du2, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgttrf (\fBlapack_int\fP * n, double * dl, double * d, double * du, double * du2, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dgttrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dhgeqz (char * job, char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * h, \fBlapack_int\fP * ldh, double * t, \fBlapack_int\fP * ldt, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP * ldq, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dhsein (char * job, char * eigsrc, char * initv, \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const double * h, \fBlapack_int\fP * ldh, double * wr, const double * wi, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr, \fBlapack_int\fP * info)"

.SS "void LAPACK_dhseqr (char * job, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * h, \fBlapack_int\fP * ldh, double * wr, double * wi, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlacn2 (\fBlapack_int\fP * n, double * v, double * x, \fBlapack_int\fP * isgn, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.SS "void LAPACK_dlacpy (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_dlag2s (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, float * sa, \fBlapack_int\fP * ldsa, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlagge (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const double * d, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlagsy (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * d, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, double * work, \fBlapack_int\fP * info)"

.SS "double LAPACK_dlamch (char * cmach)"

.SS "double LAPACK_dlange (char * norm, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * work)"

.SS "double LAPACK_dlansy (char * norm, char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * work)"

.SS "double LAPACK_dlantr (char * norm, char * uplo, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * work)"

.SS "void LAPACK_dlapmr (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_dlapmt (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "double LAPACK_dlapy2 (double * x, double * y)"

.SS "double LAPACK_dlapy3 (double * x, double * y, double * z)"

.SS "void LAPACK_dlarfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * v, \fBlapack_int\fP * ldv, const double * t, \fBlapack_int\fP * ldt, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_dlarfg (\fBlapack_int\fP * n, double * alpha, double * x, \fBlapack_int\fP * incx, double * tau)"

.SS "void LAPACK_dlarft (char * direct, char * storev, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * v, \fBlapack_int\fP * ldv, const double * tau, double * t, \fBlapack_int\fP * ldt)"

.SS "void LAPACK_dlarfx (char * side, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * v, double * tau, double * c, \fBlapack_int\fP * ldc, double * work)"

.SS "void LAPACK_dlarnv (\fBlapack_int\fP * idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP * n, double * x)"

.SS "void LAPACK_dlartgp (double * f, double * g, double * cs, double * sn, double * r)"

.SS "void LAPACK_dlartgs (double * x, double * y, double * sigma, double * cs, double * sn)"

.SS "void LAPACK_dlascl (char * type, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, double * cfrom, double * cto, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlaset (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * alpha, double * beta, double * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_dlasrt (char * id, \fBlapack_int\fP * n, double * d, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlassq (\fBlapack_int\fP * n, double * x, \fBlapack_int\fP * incx, double * scale, double * sumsq)"

.SS "void LAPACK_dlaswp (\fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * k1, \fBlapack_int\fP * k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP * incx)"

.SS "void LAPACK_dlatms (\fBlapack_int\fP * m, \fBlapack_int\fP * n, char * dist, \fBlapack_int\fP * iseed, char * sym, double * d, \fBlapack_int\fP * mode, double * cond, double * dmax, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, char * pack, double * a, \fBlapack_int\fP * lda, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dlauum (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dopgtr (char * uplo, \fBlapack_int\fP * n, const double * ap, const double * tau, double * q, \fBlapack_int\fP * ldq, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dopmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * ap, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorbdb (char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, double * x11, \fBlapack_int\fP * ldx11, double * x12, \fBlapack_int\fP * ldx12, double * x21, \fBlapack_int\fP * ldx21, double * x22, \fBlapack_int\fP * ldx22, double * theta, double * phi, double * taup1, double * taup2, double * tauq1, double * tauq2, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, double * x11, \fBlapack_int\fP * ldx11, double * x12, \fBlapack_int\fP * ldx12, double * x21, \fBlapack_int\fP * ldx21, double * x22, \fBlapack_int\fP * ldx22, double * theta, double * u1, \fBlapack_int\fP * ldu1, double * u2, \fBlapack_int\fP * ldu2, double * v1t, \fBlapack_int\fP * ldv1t, double * v2t, \fBlapack_int\fP * ldv2t, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorcsd2by1 (char * jobu1, char * jobu2, char * jobv1t, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, double * x11, \fBlapack_int\fP * ldx11, double * x21, \fBlapack_int\fP * ldx21, double * theta, double * u1, \fBlapack_int\fP * ldu1, double * u2, \fBlapack_int\fP * ldu2, double * v1t, \fBlapack_int\fP * ldv1t, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorgbr (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorghr (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorglq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorgql (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorgqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorgrq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dorgtr (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormbr (char * vect, char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormhr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormql (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormrq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormrz (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dormtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const double * tau, double * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbcon (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const double * ab, \fBlapack_int\fP * ldab, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbequ (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const double * ab, \fBlapack_int\fP * ldab, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, const double * afb, \fBlapack_int\fP * ldafb, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbstf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kb, double * bb, \fBlapack_int\fP * ldbb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, double * ab, \fBlapack_int\fP * ldab, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, double * ab, \fBlapack_int\fP * ldab, double * afb, \fBlapack_int\fP * ldafb, char * equed, double * s, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbtrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpbtrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpftrf (char * transr, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpftri (char * transr, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpftrs (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpocon (char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpoequ (\fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpoequb (\fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dporfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dporfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const double * s, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dposvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, char * equed, double * s, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dposvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, char * equed, double * s, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpotrf (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpotrf2 (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpotri (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpotrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dppcon (char * uplo, \fBlapack_int\fP * n, const double * ap, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dppequ (char * uplo, \fBlapack_int\fP * n, const double * ap, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, const double * afp, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dppsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * ap, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dppsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * ap, double * afp, char * equed, double * s, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpptrf (char * uplo, \fBlapack_int\fP * n, double * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpptri (char * uplo, \fBlapack_int\fP * n, double * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpstrf (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double * tol, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dptcon (\fBlapack_int\fP * n, const double * d, const double * e, double * anorm, double * rcond, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpteqr (char * compz, \fBlapack_int\fP * n, double * d, double * e, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dptrfs (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const double * e, const double * df, const double * ef, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dptsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * d, double * e, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dptsvx (char * fact, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const double * e, double * df, double * ef, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpttrf (\fBlapack_int\fP * n, double * d, double * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_dpttrs (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const double * e, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbgst (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, double * ab, \fBlapack_int\fP * ldab, const double * bb, \fBlapack_int\fP * ldbb, double * x, \fBlapack_int\fP * ldx, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbgv (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, double * ab, \fBlapack_int\fP * ldab, double * bb, \fBlapack_int\fP * ldbb, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbgvd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, double * ab, \fBlapack_int\fP * ldab, double * bb, \fBlapack_int\fP * ldbb, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbgvx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, double * ab, \fBlapack_int\fP * ldab, double * bb, \fBlapack_int\fP * ldbb, double * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsbtrd (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, double * ab, \fBlapack_int\fP * ldab, double * d, double * e, double * q, \fBlapack_int\fP * ldq, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsfrk (char * transr, char * uplo, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * alpha, const double * a, \fBlapack_int\fP * lda, double * beta, double * c)"

.SS "void LAPACK_dsgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * work, float * swork, \fBlapack_int\fP * iter, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspcon (char * uplo, \fBlapack_int\fP * n, const double * ap, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspev (char * jobz, char * uplo, \fBlapack_int\fP * n, double * ap, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspevd (char * jobz, char * uplo, \fBlapack_int\fP * n, double * ap, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * ap, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspgst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, double * ap, const double * bp, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspgv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspgvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspgvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * ap, double * bp, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * work, float * swork, \fBlapack_int\fP * iter, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, const double * afp, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * ap, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dspsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, double * afp, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsptrd (char * uplo, \fBlapack_int\fP * n, double * ap, double * d, double * e, double * tau, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsptrf (char * uplo, \fBlapack_int\fP * n, double * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsptri (char * uplo, \fBlapack_int\fP * n, double * ap, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstebz (char * range, char * order, \fBlapack_int\fP * n, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, const double * d, const double * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, double * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstedc (char * compz, \fBlapack_int\fP * n, double * d, double * e, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstegr (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstein (\fBlapack_int\fP * n, const double * d, const double * e, \fBlapack_int\fP * m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstemr (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsteqr (char * compz, \fBlapack_int\fP * n, double * d, double * e, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsterf (\fBlapack_int\fP * n, double * d, double * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstev (char * jobz, \fBlapack_int\fP * n, double * d, double * e, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstevd (char * jobz, \fBlapack_int\fP * n, double * d, double * e, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstevr (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dstevx (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsycon (char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsycon_3 (char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const double * e, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyconv (char * uplo, char * way, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyequb (char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyev (char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevd (char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevr (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevr_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsygst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsygv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsygv_2stage (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsygvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * w, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsygvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyrfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * s, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * e, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysv_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsysvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, double * b, \fBlapack_int\fP * ldb, double * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsyswapr (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_dsytrd (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * d, double * e, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrf (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrf_aa (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrf_rk (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * e, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrf_rook (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytri (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytri2 (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytri2x (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytri_3 (char * uplo, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, const double * e, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * e, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * a, \fBlapack_int\fP * lda, double * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dsytrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtbcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const double * ab, \fBlapack_int\fP * ldab, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtbrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, const double * b, \fBlapack_int\fP * ldb, const double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtbtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const double * ab, \fBlapack_int\fP * ldab, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtfsm (char * transr, char * side, char * uplo, char * trans, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, double * alpha, const double * a, double * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_dtftri (char * transr, char * uplo, char * diag, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtfttp (char * transr, char * uplo, \fBlapack_int\fP * n, const double * arf, double * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtfttr (char * transr, char * uplo, \fBlapack_int\fP * n, const double * arf, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const double * s, \fBlapack_int\fP * lds, const double * p, \fBlapack_int\fP * ldp, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgexc (\fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * q, \fBlapack_int\fP * ldq, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgsen (\fBlapack_int\fP * ijob, \fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP * ldq, double * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgsja (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, double * alpha, double * beta, double * u, \fBlapack_int\fP * ldu, double * v, \fBlapack_int\fP * ldv, double * q, \fBlapack_int\fP * ldq, double * work, \fBlapack_int\fP * ncycle, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, const double * vl, \fBlapack_int\fP * ldvl, const double * vr, \fBlapack_int\fP * ldvr, double * s, double * dif, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtgsyl (char * trans, \fBlapack_int\fP * ijob, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, double * c, \fBlapack_int\fP * ldc, const double * d, \fBlapack_int\fP * ldd, const double * e, \fBlapack_int\fP * lde, double * f, \fBlapack_int\fP * ldf, double * scale, double * dif, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const double * ap, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpmqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, const double * v, \fBlapack_int\fP * ldv, const double * t, \fBlapack_int\fP * ldt, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * t, \fBlapack_int\fP * ldt, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, double * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtprfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const double * v, \fBlapack_int\fP * ldv, const double * t, \fBlapack_int\fP * ldt, double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, const double * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_dtprfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, const double * b, \fBlapack_int\fP * ldb, const double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtptri (char * uplo, char * diag, \fBlapack_int\fP * n, double * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtptrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * ap, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpttf (char * transr, char * uplo, \fBlapack_int\fP * n, const double * ap, double * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtpttr (char * uplo, \fBlapack_int\fP * n, const double * ap, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * rcond, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrevc (char * side, char * howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const double * t, \fBlapack_int\fP * ldt, double * vl, \fBlapack_int\fP * ldvl, double * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrexc (char * compq, \fBlapack_int\fP * n, double * t, \fBlapack_int\fP * ldt, double * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, const double * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrsen (char * job, char * compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, double * t, \fBlapack_int\fP * ldt, double * q, \fBlapack_int\fP * ldq, double * wr, double * wi, \fBlapack_int\fP * m, double * s, double * sep, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const double * t, \fBlapack_int\fP * ldt, const double * vl, \fBlapack_int\fP * ldvl, const double * vr, \fBlapack_int\fP * ldvr, double * s, double * sep, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * ldwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrsyl (char * trana, char * tranb, \fBlapack_int\fP * isgn, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, double * c, \fBlapack_int\fP * ldc, double * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrtri (char * uplo, char * diag, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * a, \fBlapack_int\fP * lda, double * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrttf (char * transr, char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtrttp (char * uplo, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, double * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_dtzrzf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, double * a, \fBlapack_int\fP * lda, double * tau, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ilaver (const \fBlapack_int\fP * vers_major, const \fBlapack_int\fP * vers_minor, const \fBlapack_int\fP * vers_patch)"

.SS "\fBlapack_logical\fP LAPACK_lsame (char * ca, char * cb, \fBlapack_int\fP lca, \fBlapack_int\fP lcb)"

.SS "\fBlapack_complex_double\fP lapack_make_complex_double (double re, double im)"

.PP
Definition at line 37 of file lapacke_make_complex_double\&.c\&.
.SS "\fBlapack_complex_float\fP lapack_make_complex_float (float re, float im)"

.PP
Definition at line 37 of file lapacke_make_complex_float\&.c\&.
.SS "void LAPACK_sbbcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, float * theta, float * phi, float * u1, \fBlapack_int\fP * ldu1, float * u2, \fBlapack_int\fP * ldu2, float * v1t, \fBlapack_int\fP * ldv1t, float * v2t, \fBlapack_int\fP * ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sbdsdc (char * uplo, char * compq, \fBlapack_int\fP * n, float * d, float * e, float * u, \fBlapack_int\fP * ldu, float * vt, \fBlapack_int\fP * ldvt, float * q, \fBlapack_int\fP * iq, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sbdsqr (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ncvt, \fBlapack_int\fP * nru, \fBlapack_int\fP * ncc, float * d, float * e, float * vt, \fBlapack_int\fP * ldvt, float * u, \fBlapack_int\fP * ldu, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sbdsvdx (char * uplo, char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, float * s, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sdisna (char * job, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * d, float * sep, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbbrd (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ncc, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, float * ab, \fBlapack_int\fP * ldab, float * d, float * e, float * q, \fBlapack_int\fP * ldq, float * pt, \fBlapack_int\fP * ldpt, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbcon (char * norm, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const float * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const float * ab, \fBlapack_int\fP * ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const float * ab, \fBlapack_int\fP * ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, const float * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbrfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, const float * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbsv (\fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, float * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, float * ab, \fBlapack_int\fP * ldab, float * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbsvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, float * ab, \fBlapack_int\fP * ldab, float * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbtrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, float * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgbtrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgebak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const float * scale, \fBlapack_int\fP * m, float * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgebal (char * job, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgebrd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * d, float * e, float * tauq, float * taup, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgecon (char * norm, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgees (char * jobvs, char * sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP * ldvs, float * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeesx (char * jobvs, char * sort, \fBLAPACK_S_SELECT2\fP select, char * sense, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP * ldvs, float * rconde, float * rcondv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * wr, float * wi, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * wr, float * wi, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgehrd (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgejsv (char * joba, char * jobu, char * jobv, char * jobr, char * jobt, char * jobp, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * sva, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * t, \fBlapack_int\fP * tsize, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelq2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgels (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelsd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * s, float * rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelss (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * s, float * rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgelsy (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * jpvt, float * rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgemlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * t, \fBlapack_int\fP * tsize, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgemqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * t, \fBlapack_int\fP * tsize, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgemqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * nb, const float * v, \fBlapack_int\fP * ldv, const float * t, \fBlapack_int\fP * ldt, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqlf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqp3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqpf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, float * tau, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * t, \fBlapack_int\fP * tsize, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqr2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqrfp (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nb, float * a, \fBlapack_int\fP * lda, float * t, \fBlapack_int\fP * ldt, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgeqrt3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgerfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgerfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgerqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesdd (char * jobz, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * s, float * u, \fBlapack_int\fP * ldu, float * vt, \fBlapack_int\fP * ldvt, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesvd (char * jobu, char * jobvt, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * s, float * u, \fBlapack_int\fP * ldu, float * vt, \fBlapack_int\fP * ldvt, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesvdx (char * jobu, char * jobvt, char * range, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, float * s, float * u, \fBlapack_int\fP * ldu, float * vt, \fBlapack_int\fP * ldvt, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesvj (char * joba, char * jobu, char * jobv, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * sva, \fBlapack_int\fP * mv, float * v, \fBlapack_int\fP * ldv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgesvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetrf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetri (\fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgetsls (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggbak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const float * lscale, const float * rscale, \fBlapack_int\fP * m, float * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggbal (char * job, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgges (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP * ldvsl, float * vsr, \fBlapack_int\fP * ldvsr, float * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgges3 (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP * ldvsl, float * vsr, \fBlapack_int\fP * ldvsr, float * work, \fBlapack_int\fP * lwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggesx (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_S_SELECT3\fP selctg, char * sense, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP * ldvsl, float * vsr, \fBlapack_int\fP * ldvsr, float * rconde, float * rcondv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggev3 (char * jobvl, char * jobvr, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggglm (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * d, float * x, float * y, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgghd3 (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * q, \fBlapack_int\fP * ldq, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgghrd (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * q, \fBlapack_int\fP * ldq, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgglse (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * c, float * d, float * x, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggqrf (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, float * a, \fBlapack_int\fP * lda, float * taua, float * b, \fBlapack_int\fP * ldb, float * taub, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggrqf (\fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * taua, float * b, \fBlapack_int\fP * ldb, float * taub, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggsvd (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * q, \fBlapack_int\fP * ldq, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggsvd3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * q, \fBlapack_int\fP * ldq, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggsvp (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, float * tau, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sggsvp3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgtcon (char * norm, \fBlapack_int\fP * n, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgtrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * dl, const float * d, const float * du, const float * dlf, const float * df, const float * duf, const float * du2, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgtsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * dl, float * d, float * du, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgtsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * dl, const float * d, const float * du, float * dlf, float * df, float * duf, float * du2, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgttrf (\fBlapack_int\fP * n, float * dl, float * d, float * du, float * du2, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sgttrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_shgeqz (char * job, char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * h, \fBlapack_int\fP * ldh, float * t, \fBlapack_int\fP * ldt, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP * ldq, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_shsein (char * job, char * eigsrc, char * initv, \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const float * h, \fBlapack_int\fP * ldh, float * wr, const float * wi, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr, \fBlapack_int\fP * info)"

.SS "void LAPACK_shseqr (char * job, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * h, \fBlapack_int\fP * ldh, float * wr, float * wi, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_slacn2 (\fBlapack_int\fP * n, float * v, float * x, \fBlapack_int\fP * isgn, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.SS "void LAPACK_slacpy (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_slag2d (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * sa, \fBlapack_int\fP * ldsa, double * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_slagge (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const float * d, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_slagsy (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * d, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, float * work, \fBlapack_int\fP * info)"

.SS "float LAPACK_slamch (char * cmach)"

.SS "float LAPACK_slange (char * norm, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * work)"

.SS "float LAPACK_slansy (char * norm, char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * work)"

.SS "float LAPACK_slantr (char * norm, char * uplo, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * work)"

.SS "void LAPACK_slapmr (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_slapmt (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "float LAPACK_slapy2 (float * x, float * y)"

.SS "float LAPACK_slapy3 (float * x, float * y, float * z)"

.SS "void LAPACK_slarfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * v, \fBlapack_int\fP * ldv, const float * t, \fBlapack_int\fP * ldt, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_slarfg (\fBlapack_int\fP * n, float * alpha, float * x, \fBlapack_int\fP * incx, float * tau)"

.SS "void LAPACK_slarft (char * direct, char * storev, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * v, \fBlapack_int\fP * ldv, const float * tau, float * t, \fBlapack_int\fP * ldt)"

.SS "void LAPACK_slarfx (char * side, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * v, float * tau, float * c, \fBlapack_int\fP * ldc, float * work)"

.SS "void LAPACK_slarnv (\fBlapack_int\fP * idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP * n, float * x)"

.SS "void LAPACK_slartgp (float * f, float * g, float * cs, float * sn, float * r)"

.SS "void LAPACK_slartgs (float * x, float * y, float * sigma, float * cs, float * sn)"

.SS "void LAPACK_slascl (char * type, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, float * cfrom, float * cto, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_slaset (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * alpha, float * beta, float * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_slasrt (char * id, \fBlapack_int\fP * n, float * d, \fBlapack_int\fP * info)"

.SS "void LAPACK_slassq (\fBlapack_int\fP * n, float * x, \fBlapack_int\fP * incx, float * scale, float * sumsq)"

.SS "void LAPACK_slaswp (\fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * k1, \fBlapack_int\fP * k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP * incx)"

.SS "void LAPACK_slatms (\fBlapack_int\fP * m, \fBlapack_int\fP * n, char * dist, \fBlapack_int\fP * iseed, char * sym, float * d, \fBlapack_int\fP * mode, float * cond, float * dmax, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, char * pack, float * a, \fBlapack_int\fP * lda, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_slauum (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_sopgtr (char * uplo, \fBlapack_int\fP * n, const float * ap, const float * tau, float * q, \fBlapack_int\fP * ldq, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sopmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * ap, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorbdb (char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, float * x11, \fBlapack_int\fP * ldx11, float * x12, \fBlapack_int\fP * ldx12, float * x21, \fBlapack_int\fP * ldx21, float * x22, \fBlapack_int\fP * ldx22, float * theta, float * phi, float * taup1, float * taup2, float * tauq1, float * tauq2, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, float * x11, \fBlapack_int\fP * ldx11, float * x12, \fBlapack_int\fP * ldx12, float * x21, \fBlapack_int\fP * ldx21, float * x22, \fBlapack_int\fP * ldx22, float * theta, float * u1, \fBlapack_int\fP * ldu1, float * u2, \fBlapack_int\fP * ldu2, float * v1t, \fBlapack_int\fP * ldv1t, float * v2t, \fBlapack_int\fP * ldv2t, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorcsd2by1 (char * jobu1, char * jobu2, char * jobv1t, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, float * x11, \fBlapack_int\fP * ldx11, float * x21, \fBlapack_int\fP * ldx21, float * theta, float * u1, \fBlapack_int\fP * ldu1, float * u2, \fBlapack_int\fP * ldu2, float * v1t, \fBlapack_int\fP * ldv1t, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorgbr (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorghr (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorglq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorgql (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorgqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorgrq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sorgtr (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormbr (char * vect, char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormhr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormql (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormrq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormrz (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sormtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const float * tau, float * c, \fBlapack_int\fP * ldc, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbcon (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const float * ab, \fBlapack_int\fP * ldab, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbequ (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const float * ab, \fBlapack_int\fP * ldab, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, const float * afb, \fBlapack_int\fP * ldafb, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbstf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kb, float * bb, \fBlapack_int\fP * ldbb, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, float * ab, \fBlapack_int\fP * ldab, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, float * ab, \fBlapack_int\fP * ldab, float * afb, \fBlapack_int\fP * ldafb, char * equed, float * s, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbtrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * info)"

.SS "void LAPACK_spbtrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_spftrf (char * transr, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_spftri (char * transr, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_spftrs (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_spocon (char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spoequ (\fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_spoequb (\fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_sporfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sporfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const float * s, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sposvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, char * equed, float * s, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sposvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, char * equed, float * s, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spotrf (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_spotrf2 (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_spotri (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_spotrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sppcon (char * uplo, \fBlapack_int\fP * n, const float * ap, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sppequ (char * uplo, \fBlapack_int\fP * n, const float * ap, float * s, float * scond, float * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_spprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, const float * afp, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sppsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * ap, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sppsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * ap, float * afp, char * equed, float * s, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_spptrf (char * uplo, \fBlapack_int\fP * n, float * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_spptri (char * uplo, \fBlapack_int\fP * n, float * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_spptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_spstrf (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float * tol, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sptcon (\fBlapack_int\fP * n, const float * d, const float * e, float * anorm, float * rcond, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_spteqr (char * compz, \fBlapack_int\fP * n, float * d, float * e, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sptrfs (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const float * e, const float * df, const float * ef, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sptsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * d, float * e, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sptsvx (char * fact, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const float * e, float * df, float * ef, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_spttrf (\fBlapack_int\fP * n, float * d, float * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_spttrs (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * d, const float * e, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbgst (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, float * ab, \fBlapack_int\fP * ldab, const float * bb, \fBlapack_int\fP * ldbb, float * x, \fBlapack_int\fP * ldx, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbgv (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, float * ab, \fBlapack_int\fP * ldab, float * bb, \fBlapack_int\fP * ldbb, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbgvd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, float * ab, \fBlapack_int\fP * ldab, float * bb, \fBlapack_int\fP * ldbb, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbgvx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, float * ab, \fBlapack_int\fP * ldab, float * bb, \fBlapack_int\fP * ldbb, float * q, \fBlapack_int\fP * ldq, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssbtrd (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, float * ab, \fBlapack_int\fP * ldab, float * d, float * e, float * q, \fBlapack_int\fP * ldq, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssfrk (char * transr, char * uplo, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * k, float * alpha, const float * a, \fBlapack_int\fP * lda, float * beta, float * c)"

.SS "void LAPACK_sspcon (char * uplo, \fBlapack_int\fP * n, const float * ap, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspev (char * jobz, char * uplo, \fBlapack_int\fP * n, float * ap, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspevd (char * jobz, char * uplo, \fBlapack_int\fP * n, float * ap, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * ap, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspgst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, float * ap, const float * bp, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspgv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspgvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspgvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * ap, float * bp, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, const float * afp, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * ap, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sspsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, float * afp, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssptrd (char * uplo, \fBlapack_int\fP * n, float * ap, float * d, float * e, float * tau, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssptrf (char * uplo, \fBlapack_int\fP * n, float * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssptri (char * uplo, \fBlapack_int\fP * n, float * ap, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstebz (char * range, char * order, \fBlapack_int\fP * n, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, const float * d, const float * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, float * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstedc (char * compz, \fBlapack_int\fP * n, float * d, float * e, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstegr (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstein (\fBlapack_int\fP * n, const float * d, const float * e, \fBlapack_int\fP * m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstemr (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssteqr (char * compz, \fBlapack_int\fP * n, float * d, float * e, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssterf (\fBlapack_int\fP * n, float * d, float * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstev (char * jobz, \fBlapack_int\fP * n, float * d, float * e, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstevd (char * jobz, \fBlapack_int\fP * n, float * d, float * e, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstevr (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_sstevx (char * jobz, char * range, \fBlapack_int\fP * n, float * d, float * e, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssycon (char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssycon_3 (char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const float * e, const \fBlapack_int\fP * ipiv, float * anorm, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyconv (char * uplo, char * way, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyequb (char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * s, float * scond, float * amax, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyev (char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevd (char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevr (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevr_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssygst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssygv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssygv_2stage (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssygvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * w, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssygvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * vl, float * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, float * abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP * ldz, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyrfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const float * s, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * e, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysv_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssysvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, float * b, \fBlapack_int\fP * ldb, float * x, \fBlapack_int\fP * ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP * n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP * nparams, float * params, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssyswapr (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_ssytrd (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * d, float * e, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrf (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrf_aa (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrf_rk (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * e, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrf_rook (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytri (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytri2 (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytri2x (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytri_3 (char * uplo, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, const float * e, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * e, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, float * a, \fBlapack_int\fP * lda, float * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ssytrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_stbcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const float * ab, \fBlapack_int\fP * ldab, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stbrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, const float * b, \fBlapack_int\fP * ldb, const float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stbtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const float * ab, \fBlapack_int\fP * ldab, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_stfsm (char * transr, char * side, char * uplo, char * trans, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, float * alpha, const float * a, float * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_stftri (char * transr, char * uplo, char * diag, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_stfttp (char * transr, char * uplo, \fBlapack_int\fP * n, const float * arf, float * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_stfttr (char * transr, char * uplo, \fBlapack_int\fP * n, const float * arf, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const float * s, \fBlapack_int\fP * lds, const float * p, \fBlapack_int\fP * ldp, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgexc (\fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * q, \fBlapack_int\fP * ldq, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgsen (\fBlapack_int\fP * ijob, \fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP * ldq, float * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgsja (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * tola, float * tolb, float * alpha, float * beta, float * u, \fBlapack_int\fP * ldu, float * v, \fBlapack_int\fP * ldv, float * q, \fBlapack_int\fP * ldq, float * work, \fBlapack_int\fP * ncycle, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, const float * vl, \fBlapack_int\fP * ldvl, const float * vr, \fBlapack_int\fP * ldvr, float * s, float * dif, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stgsyl (char * trans, \fBlapack_int\fP * ijob, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, float * c, \fBlapack_int\fP * ldc, const float * d, \fBlapack_int\fP * ldd, const float * e, \fBlapack_int\fP * lde, float * f, \fBlapack_int\fP * ldf, float * scale, float * dif, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const float * ap, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpmqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, const float * v, \fBlapack_int\fP * ldv, const float * t, \fBlapack_int\fP * ldt, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * t, \fBlapack_int\fP * ldt, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, float * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_stprfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const float * v, \fBlapack_int\fP * ldv, const float * t, \fBlapack_int\fP * ldt, float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, const float * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_stprfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, const float * b, \fBlapack_int\fP * ldb, const float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_stptri (char * uplo, char * diag, \fBlapack_int\fP * n, float * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_stptrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * ap, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpttf (char * transr, char * uplo, \fBlapack_int\fP * n, const float * ap, float * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_stpttr (char * uplo, \fBlapack_int\fP * n, const float * ap, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_strcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * rcond, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_strevc (char * side, char * howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const float * t, \fBlapack_int\fP * ldt, float * vl, \fBlapack_int\fP * ldvl, float * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_strexc (char * compq, \fBlapack_int\fP * n, float * t, \fBlapack_int\fP * ldt, float * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, float * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_strrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, const float * x, \fBlapack_int\fP * ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_strsen (char * job, char * compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, float * t, \fBlapack_int\fP * ldt, float * q, \fBlapack_int\fP * ldq, float * wr, float * wi, \fBlapack_int\fP * m, float * s, float * sep, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_strsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const float * t, \fBlapack_int\fP * ldt, const float * vl, \fBlapack_int\fP * ldvl, const float * vr, \fBlapack_int\fP * ldvr, float * s, float * sep, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * ldwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_strsyl (char * trana, char * tranb, \fBlapack_int\fP * isgn, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, const float * b, \fBlapack_int\fP * ldb, float * c, \fBlapack_int\fP * ldc, float * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_strtri (char * uplo, char * diag, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_strtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const float * a, \fBlapack_int\fP * lda, float * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_strttf (char * transr, char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_strttp (char * uplo, \fBlapack_int\fP * n, const float * a, \fBlapack_int\fP * lda, float * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_stzrzf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, float * a, \fBlapack_int\fP * lda, float * tau, float * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zbbcsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, double * theta, double * phi, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP * ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zbdsqr (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ncvt, \fBlapack_int\fP * nru, \fBlapack_int\fP * ncc, double * d, double * e, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zcgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, \fBlapack_complex_double\fP * work, \fBlapack_complex_float\fP * swork, double * rwork, \fBlapack_int\fP * iter, \fBlapack_int\fP * info)"

.SS "void LAPACK_zcposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, \fBlapack_complex_double\fP * work, \fBlapack_complex_float\fP * swork, double * rwork, \fBlapack_int\fP * iter, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbbrd (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ncc, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * pt, \fBlapack_int\fP * ldpt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbcon (char * norm, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbrfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbsv (\fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbsvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbtrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgbtrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgebak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const double * scale, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgebal (char * job, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgebrd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * d, double * e, \fBlapack_complex_double\fP * tauq, \fBlapack_complex_double\fP * taup, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgecon (char * norm, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeequ (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeequb (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgees (char * jobvs, char * sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP * ldvs, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeesx (char * jobvs, char * sort, \fBLAPACK_Z_SELECT1\fP select, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP * ldvs, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgehrd (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgejsv (char * joba, char * jobu, char * jobv, char * jobr, char * jobt, char * jobp, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * sva, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * cwork, \fBlapack_int\fP * lwork, double * work, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelq2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgels (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelsd (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * s, double * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelss (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * s, double * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgelsy (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * jpvt, double * rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgemlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgemqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgemqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqlf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqp3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqpf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * tsize, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqr2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqrfp (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgeqrt3 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgerfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgerfsx (char * trans, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgerqf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesdd (char * jobz, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesvd (char * jobu, char * jobvt, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesvdx (char * jobu, char * jobvt, char * range, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * ns, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP * ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesvj (char * joba, char * jobu, char * jobv, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * sva, \fBlapack_int\fP * mv, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * cwork, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgesvxx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetrf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetrf2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetri (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgetsls (char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggbak (char * job, char * side, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const double * lscale, const double * rscale, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggbal (char * job, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgges (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP * ldvsr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgges3 (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP * ldvsr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggesx (char * jobvsl, char * jobvsr, char * sort, \fBLAPACK_Z_SELECT2\fP selctg, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP * ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP * ldvsr, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggev (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggev3 (char * jobvl, char * jobvr, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggevx (char * balanc, char * jobvl, char * jobvr, char * sense, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggglm (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x, \fBlapack_complex_double\fP * y, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgghd3 (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgghrd (char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgglse (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * c, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggqrf (\fBlapack_int\fP * n, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * taub, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggrqf (\fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * taub, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggsvd (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggsvd3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggsvp (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, double * rwork, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zggsvp3 (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * iwork, double * rwork, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgtcon (char * norm, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgtrfs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * dlf, const \fBlapack_complex_double\fP * df, const \fBlapack_complex_double\fP * duf, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgtsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgtsvx (char * fact, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * dlf, \fBlapack_complex_double\fP * df, \fBlapack_complex_double\fP * duf, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgttrf (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zgttrs (char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbgst (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_double\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbgv (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP * ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbgvd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP * ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbgvx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * ka, \fBlapack_int\fP * kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhbtrd (char * vect, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhecon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhecon_3 (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheequb (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheev_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevd_2stage (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevr (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevr_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheevx_2stage (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhegst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhegv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhegv_2stage (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhegvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhegvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zherfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zherfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhesvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zheswapr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_zhetrd (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * d, double * e, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrf_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrf_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrf_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetri2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetri2x (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetri_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhetrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhfrk (char * transr, char * uplo, char * trans, \fBlapack_int\fP * n, \fBlapack_int\fP * k, double * alpha, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * beta, \fBlapack_complex_double\fP * c)"

.SS "void LAPACK_zhgeqz (char * job, char * compq, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpev (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpevd (char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpevx (char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpgst (\fBlapack_int\fP * itype, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * bp, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpgv (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpgvd (\fBlapack_int\fP * itype, char * jobz, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpgvx (\fBlapack_int\fP * itype, char * jobz, char * range, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhpsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhptrd (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, double * d, double * e, \fBlapack_complex_double\fP * tau, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhsein (char * job, char * eigsrc, char * initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr, \fBlapack_int\fP * info)"

.SS "void LAPACK_zhseqr (char * job, char * compz, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP * ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlacgv (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * incx)"

.SS "void LAPACK_zlacn2 (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP * x, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.SS "void LAPACK_zlacp2 (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_zlacpy (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_zlacrm (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const double * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, double * work)"

.SS "void LAPACK_zlag2c (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_float\fP * sa, \fBlapack_int\fP * ldsa, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlagge (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlaghe (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlagsy (\fBlapack_int\fP * n, \fBlapack_int\fP * k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "double LAPACK_zlange (char * norm, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * work)"

.SS "double LAPACK_zlanhe (char * norm, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * work)"

.SS "double LAPACK_zlansy (char * norm, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * work)"

.SS "double LAPACK_zlantr (char * norm, char * uplo, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * work)"

.SS "void LAPACK_zlapmr (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_zlapmt (\fBlapack_logical\fP * forwrd, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, \fBlapack_int\fP * k)"

.SS "void LAPACK_zlarcm (\fBlapack_int\fP * m, \fBlapack_int\fP * n, const double * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, double * work)"

.SS "void LAPACK_zlarfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_zlarfg (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * incx, \fBlapack_complex_double\fP * tau)"

.SS "void LAPACK_zlarft (char * direct, char * storev, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt)"

.SS "void LAPACK_zlarfx (char * side, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work)"

.SS "void LAPACK_zlarnv (\fBlapack_int\fP * idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * x)"

.SS "void LAPACK_zlascl (char * type, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, double * cfrom, double * cto, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlaset (char * uplo, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_zlassq (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * incx, double * scale, double * sumsq)"

.SS "void LAPACK_zlaswp (\fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * k1, \fBlapack_int\fP * k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP * incx)"

.SS "void LAPACK_zlatms (\fBlapack_int\fP * m, \fBlapack_int\fP * n, char * dist, \fBlapack_int\fP * iseed, char * sym, double * d, \fBlapack_int\fP * mode, double * cond, double * dmax, \fBlapack_int\fP * kl, \fBlapack_int\fP * ku, char * pack, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zlauum (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbcon (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbequ (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbstf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kb, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP * ldbb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP * ldafb, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbtrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpbtrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpftrf (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpftri (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpftrs (char * transr, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpocon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpoequ (\fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpoequb (\fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zporfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zporfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zposv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zposvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zposvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpotrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpotrf2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpotri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpotrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zppcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zppequ (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, double * s, double * scond, double * amax, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zppsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zppsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpstrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double * tol, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zptcon (\fBlapack_int\fP * n, const double * d, const \fBlapack_complex_double\fP * e, double * anorm, double * rcond, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpteqr (char * compz, \fBlapack_int\fP * n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zptrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const \fBlapack_complex_double\fP * e, const double * df, const \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zptsv (\fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, double * d, \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zptsvx (char * fact, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const \fBlapack_complex_double\fP * e, double * df, \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpttrf (\fBlapack_int\fP * n, double * d, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_zpttrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const double * d, const \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zspcon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsprfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zspsv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zspsvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsptrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsptri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsptrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zstedc (char * compz, \fBlapack_int\fP * n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zstegr (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, double * abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zstein (\fBlapack_int\fP * n, const double * d, const double * e, \fBlapack_int\fP * m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv, \fBlapack_int\fP * info)"

.SS "void LAPACK_zstemr (char * jobz, char * range, \fBlapack_int\fP * n, double * d, double * e, double * vl, double * vu, \fBlapack_int\fP * il, \fBlapack_int\fP * iu, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, double * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsteqr (char * compz, \fBlapack_int\fP * n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, double * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsycon (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsycon_3 (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double * anorm, double * rcond, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsyconv (char * uplo, char * way, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsyequb (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * s, double * scond, double * amax, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsyr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * alpha, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP * incx, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda)"

.SS "void LAPACK_zsyrfs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsyrfsx (char * uplo, char * equed, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysv (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysv_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysv_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysv_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysv_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysvx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsysvxx (char * fact, char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP * ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP * n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP * nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsyswapr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * i1, \fBlapack_int\fP * i2)"

.SS "void LAPACK_zsytrf (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrf_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrf_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrf_rk (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrf_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytri (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytri2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytri2x (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * nb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytri_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs2 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs_3 (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs_aa (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs_aa_2stage (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP * ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_zsytrs_rook (char * uplo, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztbcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztbrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztbtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * kd, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP * ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztfsm (char * transr, char * side, char * uplo, char * trans, char * diag, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * alpha, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb)"

.SS "void LAPACK_ztftri (char * transr, char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztfttp (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztfttr (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * s, \fBlapack_int\fP * lds, const \fBlapack_complex_double\fP * p, \fBlapack_int\fP * ldp, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgexc (\fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgsen (\fBlapack_int\fP * ijob, \fBlapack_logical\fP * wantq, \fBlapack_logical\fP * wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP * ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * liwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgsja (char * jobu, char * jobv, char * jobq, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, double * tola, double * tolb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP * ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * ncycle, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, double * s, double * dif, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztgsyl (char * trans, \fBlapack_int\fP * ijob, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, const \fBlapack_complex_double\fP * d, \fBlapack_int\fP * ldd, const \fBlapack_complex_double\fP * e, \fBlapack_int\fP * lde, \fBlapack_complex_double\fP * f, \fBlapack_int\fP * ldf, double * scale, double * dif, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpmqrt (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpqrt (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_int\fP * nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpqrt2 (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztprfb (char * side, char * trans, char * direct, char * storev, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP * ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * ldwork)"

.SS "void LAPACK_ztprfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztptri (char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztptrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpttf (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztpttr (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrcon (char * norm, char * uplo, char * diag, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, double * rcond, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrevc (char * side, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrexc (char * compq, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrrfs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP * ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrsen (char * job, char * compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * w, \fBlapack_int\fP * m, double * s, double * sep, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrsna (char * job, char * howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP * ldt, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP * ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP * ldvr, double * s, double * sep, \fBlapack_int\fP * mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * ldwork, double * rwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrsyl (char * trana, char * tranb, \fBlapack_int\fP * isgn, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, double * scale, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrtri (char * uplo, char * diag, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrtrs (char * uplo, char * trans, char * diag, \fBlapack_int\fP * n, \fBlapack_int\fP * nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP * ldb, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrttf (char * transr, char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * arf, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztrttp (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * info)"

.SS "void LAPACK_ztzrzf (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunbdb (char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP * ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP * ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP * ldx22, double * theta, double * phi, \fBlapack_complex_double\fP * taup1, \fBlapack_complex_double\fP * taup2, \fBlapack_complex_double\fP * tauq1, \fBlapack_complex_double\fP * tauq2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zuncsd (char * jobu1, char * jobu2, char * jobv1t, char * jobv2t, char * trans, char * signs, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP * ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP * ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP * ldx22, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP * ldv2t, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zuncsd2by1 (char * jobu1, char * jobu2, char * jobv1t, \fBlapack_int\fP * m, \fBlapack_int\fP * p, \fBlapack_int\fP * q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP * ldx11, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP * ldx21, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP * ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP * ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP * ldv1t, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, double * rwork, \fBlapack_int\fP * lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zungbr (char * vect, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunghr (\fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunglq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zungql (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zungqr (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zungrq (\fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zungtr (char * uplo, \fBlapack_int\fP * n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmbr (char * vect, char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmhr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmlq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmql (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmqr (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmrq (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmrz (char * side, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, \fBlapack_int\fP * k, \fBlapack_int\fP * l, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zunmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP * lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * lwork, \fBlapack_int\fP * info)"

.SS "void LAPACK_zupgtr (char * uplo, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * q, \fBlapack_int\fP * ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "void LAPACK_zupmtr (char * side, char * uplo, char * trans, \fBlapack_int\fP * m, \fBlapack_int\fP * n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP * ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * info)"

.SS "\fBlapack_int\fP LAPACKE_cbbcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * theta, float * phi, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e)"

.PP
Definition at line 36 of file lapacke_cbbcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cbbcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * theta, float * phi, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e, float * rwork, \fBlapack_int\fP lrwork)"

.PP
Definition at line 36 of file lapacke_cbbcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cbdsqr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float * d, float * e, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cbdsqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cbdsqr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float * d, float * e, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_cbdsqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbbrd (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * pt, \fBlapack_int\fP ldpt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cgbbrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbbrd_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * pt, \fBlapack_int\fP ldpt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbbrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbcon (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cgbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbcon_work (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgbequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgbequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cgbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbrfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cgbrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbrfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * rpivot)"

.PP
Definition at line 36 of file lapacke_cgbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cgbsvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbsvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgbsvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbtrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbtrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbtrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgbtrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * scale, \fBlapack_int\fP m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_cgebak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * scale, \fBlapack_int\fP m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_cgebak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebal (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale)"

.PP
Definition at line 36 of file lapacke_cgebal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebal_work (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale)"

.PP
Definition at line 36 of file lapacke_cgebal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebrd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * d, float * e, \fBlapack_complex_float\fP * tauq, \fBlapack_complex_float\fP * taup)"

.PP
Definition at line 36 of file lapacke_cgebrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgebrd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * d, float * e, \fBlapack_complex_float\fP * tauq, \fBlapack_complex_float\fP * taup, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgebrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgecon (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cgecon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgecon_work (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgecon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgeequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgeequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgeequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_cgeequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgees (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP ldvs)"

.PP
Definition at line 36 of file lapacke_cgees\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgees_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP ldvs, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cgees_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeesx (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP ldvs, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_cgeesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeesx_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_C_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vs, \fBlapack_int\fP ldvs, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cgeesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_cgeev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgeev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_cgeevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgeevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgehrd (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgehrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgehrd_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgehrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgejsv (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * sva, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, float * stat, \fBlapack_int\fP * istat)"

.PP
Definition at line 36 of file lapacke_cgejsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgejsv_work (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * sva, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * cwork, \fBlapack_int\fP lwork, float * work, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cgejsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_cgelq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelq2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgelq2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelq2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cgelq2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgelq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgelqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgelqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgels (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgels\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgels_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgels_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelsd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_cgelsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelsd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cgelsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelss (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_cgelss\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelss_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgelss_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelsy (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_cgelsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgelsy_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, float rcond, \fBlapack_int\fP * rank, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgelsy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cgemlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgemlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cgemqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgemqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cgemqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgemqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cgemqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqlf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqlf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqlf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgeqlf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqp3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqp3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgeqp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqpf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqpf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqpf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgeqpf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_cgeqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqr2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqr2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqr2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cgeqr2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgeqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgeqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrfp (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgeqrfp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrfp_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgeqrfp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_cgeqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_cgeqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_cgeqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_cgeqrt3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_cgeqrt3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgeqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cgeqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cgerfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgerfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cgerfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgerfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cgerqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgerqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgerqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesdd (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt)"

.PP
Definition at line 36 of file lapacke_cgesdd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesdd_work (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cgesdd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvd (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, float * superb)"

.PP
Definition at line 36 of file lapacke_cgesvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvd_work (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgesvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvdx (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_cgesvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvdx_work (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cgesvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvj (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * sva, \fBlapack_int\fP mv, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, float * stat)"

.PP
Definition at line 36 of file lapacke_cgesvj\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvj_work (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * sva, \fBlapack_int\fP mv, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * cwork, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork)"

.PP
Definition at line 36 of file lapacke_cgesvj_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * rpivot)"

.PP
Definition at line 36 of file lapacke_cgesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cgesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgesvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetri (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetri_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetsls (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgetsls\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgetsls_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgetsls_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggbak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * lscale, const float * rscale, \fBlapack_int\fP m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_cggbak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggbak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * lscale, const float * rscale, \fBlapack_int\fP m, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_cggbak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggbal (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale)"

.PP
Definition at line 36 of file lapacke_cggbal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggbal_work (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * work)"

.PP
Definition at line 36 of file lapacke_cggbal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgges (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_cgges\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgges3 (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_cgges3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgges3_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cgges3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgges_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cgges_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggesx (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_cggesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggesx_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_C_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_float\fP * vsr, \fBlapack_int\fP ldvsr, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cggesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_cggev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggev3 (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_cggev3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggev3_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cggev3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cggev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_cggevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_cggevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggglm (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x, \fBlapack_complex_float\fP * y)"

.PP
Definition at line 36 of file lapacke_cggglm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggglm_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x, \fBlapack_complex_float\fP * y, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cggglm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgghd3 (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_cgghd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgghd3_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgghd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgghrd (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_cgghrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgghrd_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_cgghrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgglse (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x)"

.PP
Definition at line 36 of file lapacke_cgglse\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgglse_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * x, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cgglse_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggqrf (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * taub)"

.PP
Definition at line 36 of file lapacke_cggqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggqrf_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * taub, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cggqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggrqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * taub)"

.PP
Definition at line 36 of file lapacke_cggrqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggrqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * taua, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * taub, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cggrqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvd (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cggsvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvd3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cggsvd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvd3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cggsvd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvd_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cggsvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvp (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_cggsvp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvp3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_cggsvp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvp3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, float * rwork, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cggsvp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cggsvp_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, float * rwork, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cggsvp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtcon (char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cgtcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtcon_work (char norm, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cgtcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * dlf, const \fBlapack_complex_float\fP * df, const \fBlapack_complex_float\fP * duf, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cgtrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * dlf, const \fBlapack_complex_float\fP * df, const \fBlapack_complex_float\fP * duf, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgtrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgtsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgtsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * dlf, \fBlapack_complex_float\fP * df, \fBlapack_complex_float\fP * duf, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cgtsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgtsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * dlf, \fBlapack_complex_float\fP * df, \fBlapack_complex_float\fP * duf, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cgtsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgttrf (\fBlapack_int\fP n, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgttrf_work (\fBlapack_int\fP n, \fBlapack_complex_float\fP * dl, \fBlapack_complex_float\fP * d, \fBlapack_complex_float\fP * du, \fBlapack_complex_float\fP * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_cgttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgttrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cgttrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * dl, const \fBlapack_complex_float\fP * d, const \fBlapack_complex_float\fP * du, const \fBlapack_complex_float\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cgttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_chbev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chbev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chbevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chbevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgst (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx)"

.PP
Definition at line 36 of file lapacke_chbgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgst_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chbgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgv (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgv_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chbgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgvd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chbgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgvd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chbgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgvx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbgvx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chbgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbtrd (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_chbtrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chbtrd_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * d, float * e, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_chbtrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_checon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_checon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_checon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_checon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_checon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_checon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_checon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_checon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cheequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cheequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_cheev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_cheev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cheev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_cheev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_cheevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_cheevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cheevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cheevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevr (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_cheevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevr_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_cheevr_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevr_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cheevr_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevr_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cheevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_cheevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_cheevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_cheevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_cheevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chegst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chegst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_chegv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegv_2stage (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_chegv_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegv_2stage_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_chegv_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_chegv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_chegvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float * w, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chegvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chegvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chegvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chegvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cherfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cherfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cherfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cherfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cherfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cherfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cherfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cherfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chesv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chesv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chesv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chesv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chesv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chesv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_chesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_chesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_chesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chesvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_cheswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cheswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_cheswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrd (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * d, float * e, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_chetrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * d, float * e, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_chetrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_chetri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_chetri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chetri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_chetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_chetrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chetrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chetrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chfrk (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float beta, \fBlapack_complex_float\fP * c)"

.PP
Definition at line 36 of file lapacke_chfrk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chfrk_work (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float beta, \fBlapack_complex_float\fP * c)"

.PP
Definition at line 36 of file lapacke_chfrk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chgeqz (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chgeqz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chgeqz_work (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_chgeqz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_chpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_chpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chpev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chpev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chpevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chpevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chpevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chpevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * bp)"

.PP
Definition at line 36 of file lapacke_chpgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * bp)"

.PP
Definition at line 36 of file lapacke_chpgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chpgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chpgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chpgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_chpgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chpgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpgvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_chpgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_chprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chpsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chpsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_chpsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chpsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_chpsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrd (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * d, float * e, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_chptrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, float * d, float * e, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_chptrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_chptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_chptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_chptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chsein (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_chsein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chsein_work (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_chsein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chseqr (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_chseqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_chseqr_work (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_float\fP * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_chseqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacgv (\fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_clacgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacgv_work (\fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_clacgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacn2 (\fBlapack_int\fP n, \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP * x, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_clacn2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacn2_work (\fBlapack_int\fP n, \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP * x, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_clacn2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacp2 (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_clacp2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacp2_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_clacp2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacpy (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_clacpy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacpy_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_clacpy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacrm (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_clacrm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clacrm_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_clacrm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clag2z (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * sa, \fBlapack_int\fP ldsa, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clag2z\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clag2z_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * sa, \fBlapack_int\fP ldsa, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clag2z_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clagge (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_clagge\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clagge_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_clagge_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claghe (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_claghe\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claghe_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_claghe_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clagsy (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_clagsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clagsy_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_clagsy_work\&.c\&.
.SS "float LAPACKE_clange (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clange\&.c\&.
.SS "float LAPACKE_clange_work (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_clange_work\&.c\&.
.SS "float LAPACKE_clanhe (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clanhe\&.c\&.
.SS "float LAPACKE_clanhe_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_clanhe_work\&.c\&.
.SS "float LAPACKE_clansy (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clansy\&.c\&.
.SS "float LAPACKE_clansy_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_clansy_work\&.c\&.
.SS "float LAPACKE_clantr (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clantr\&.c\&.
.SS "float LAPACKE_clantr_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_clantr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clapmr (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_clapmr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clapmr_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_clapmr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clapmt (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_clapmt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clapmt_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_clapmt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarcm (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_clarcm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarcm_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_clarcm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_clarfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_clarfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfg (\fBlapack_int\fP n, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_clarfg\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfg_work (\fBlapack_int\fP n, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_clarfg_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarft (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_clarft\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarft_work (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_clarft_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfx (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_clarfx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarfx_work (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * v, \fBlapack_complex_float\fP tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_clarfx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarnv (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x)"

.PP
Definition at line 36 of file lapacke_clarnv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clarnv_work (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, \fBlapack_complex_float\fP * x)"

.PP
Definition at line 36 of file lapacke_clarnv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clascl (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clascl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clascl_work (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clascl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claset (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, \fBlapack_complex_float\fP beta, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_claset\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claset_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, \fBlapack_complex_float\fP beta, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_claset_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_classq (\fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, float * scale, float * sumsq)"

.PP
Definition at line 36 of file lapacke_classq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_classq_work (\fBlapack_int\fP n, \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, float * scale, float * sumsq)"

.PP
Definition at line 36 of file lapacke_classq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claswp (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_claswp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_claswp_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_claswp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clatms (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, float * d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clatms\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clatms_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, float * d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_clatms_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clauum (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clauum\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_clauum_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_clauum_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbcon (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cpbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cpbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbequ (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cpbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cpbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbstf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_cpbstf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbstf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_float\fP * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_cpbstf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cpbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * afb, \fBlapack_int\fP ldafb, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cpbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbtrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_cpbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbtrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_cpbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbtrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpbtrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftrf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_cpftrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftrf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_cpftrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftri (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_cpftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftri_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_cpftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftrs (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpftrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpftrs_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpftrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpocon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cpocon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpocon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cpocon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpoequ (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpoequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpoequ_work (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpoequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpoequb (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpoequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpoequb_work (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cpoequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cporfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cporfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cporfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cporfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cporfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cporfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cporfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cporfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cposvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cposvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_cposvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cposvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cposvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrf2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrf2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_cpotri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpotrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpotrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpotrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cppcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float anorm, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cppcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppequ (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cppequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_cppequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cpprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cpprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cppsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cppsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cppsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cppsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cppsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_cpptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_cpptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_cpptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_cpptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpstrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float tol)"

.PP
Definition at line 36 of file lapacke_cpstrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpstrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float tol, float * work)"

.PP
Definition at line 36 of file lapacke_cpstrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptcon (\fBlapack_int\fP n, const float * d, const \fBlapack_complex_float\fP * e, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cptcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptcon_work (\fBlapack_int\fP n, const float * d, const \fBlapack_complex_float\fP * e, float anorm, float * rcond, float * work)"

.PP
Definition at line 36 of file lapacke_cptcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpteqr (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_cpteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_cpteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, const float * df, const \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cptrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, const float * df, const \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cptrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * d, \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cptsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * d, \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cptsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptsvx (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, float * df, \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cptsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cptsvx_work (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, float * df, \fBlapack_complex_float\fP * ef, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cptsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpttrf (\fBlapack_int\fP n, float * d, \fBlapack_complex_float\fP * e)"

.PP
Definition at line 36 of file lapacke_cpttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpttrf_work (\fBlapack_int\fP n, float * d, \fBlapack_complex_float\fP * e)"

.PP
Definition at line 36 of file lapacke_cpttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpttrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cpttrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const \fBlapack_complex_float\fP * e, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cpttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_cspcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cspcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_csprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_csprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cspsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_cspsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_cspsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cspsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_cspsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstedc (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_cstedc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstedc_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cstedc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstegr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_cstegr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstegr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cstegr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstein (int matrix_layout, \fBlapack_int\fP n, const float * d, const float * e, \fBlapack_int\fP m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_cstein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstein_work (int matrix_layout, \fBlapack_int\fP n, const float * d, const float * e, \fBlapack_int\fP m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_cstein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstemr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac)"

.PP
Definition at line 36 of file lapacke_cstemr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cstemr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, float * w, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_cstemr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csteqr (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_csteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_csteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csycon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_csycon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csycon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_csycon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csycon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csycon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csycon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csycon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyconv (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * e)"

.PP
Definition at line 36 of file lapacke_csyconv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyconv_work (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * e)"

.PP
Definition at line 36 of file lapacke_csyconv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_csyequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csyequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_csyr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_csyr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_csyrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_csyrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyrfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_csyrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyrfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_csyrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csysv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csysv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csysv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csysv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csysv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csysv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csysv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csysv_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csysv_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csysv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_csysvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_csysvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_csysvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csysvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_csysvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_csyswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csyswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_csyswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_csytrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_csytri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_csytri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_csytri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csytri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_csytrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_csytrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_csytrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_csytrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * rcond)"

.PP
Definition at line 36 of file lapacke_ctbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ctbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctbtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfsm (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctfsm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfsm_work (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP alpha, const \fBlapack_complex_float\fP * a, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctfsm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctftri (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_ctftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctftri_work (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a)"

.PP
Definition at line 36 of file lapacke_ctftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfttp (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctfttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfttp_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctfttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfttr (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctfttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctfttr_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * arf, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctfttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * s, \fBlapack_int\fP lds, const \fBlapack_complex_float\fP * p, \fBlapack_int\fP ldp, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ctgevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * s, \fBlapack_int\fP lds, const \fBlapack_complex_float\fP * p, \fBlapack_int\fP ldp, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctgevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgexc (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ctgexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgexc_work (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ctgexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsen (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif)"

.PP
Definition at line 36 of file lapacke_ctgsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsen_work (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * alpha, \fBlapack_complex_float\fP * beta, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ctgsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsja (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_ctgsja\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsja_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, float tola, float tolb, float * alpha, float * beta, \fBlapack_complex_float\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * work, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_ctgsja_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, float * s, float * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ctgsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, float * s, float * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ctgsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsyl (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, const \fBlapack_complex_float\fP * d, \fBlapack_int\fP ldd, const \fBlapack_complex_float\fP * e, \fBlapack_int\fP lde, \fBlapack_complex_float\fP * f, \fBlapack_int\fP ldf, float * scale, float * dif)"

.PP
Definition at line 36 of file lapacke_ctgsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctgsyl_work (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, const \fBlapack_complex_float\fP * d, \fBlapack_int\fP ldd, const \fBlapack_complex_float\fP * e, \fBlapack_int\fP lde, \fBlapack_complex_float\fP * f, \fBlapack_int\fP ldf, float * scale, float * dif, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ctgsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float * rcond)"

.PP
Definition at line 36 of file lapacke_ctpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpmqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctpmqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpmqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_ctpmqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ctpqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ctpqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ctpqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_ctpqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctprfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctprfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctprfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_ctprfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctprfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ctprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctprfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctptri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctptri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctptrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctptrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * arf)"

.PP
Definition at line 36 of file lapacke_ctpttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * arf)"

.PP
Definition at line 36 of file lapacke_ctpttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpttr (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctpttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctpttr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctpttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * rcond)"

.PP
Definition at line 36 of file lapacke_ctrcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, float * rcond, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctrcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ctrevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctrevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrexc (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ctrexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrexc_work (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ctrexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ctrrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_float\fP * x, \fBlapack_int\fP ldx, float * ferr, float * berr, \fBlapack_complex_float\fP * work, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctrrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsen (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * w, \fBlapack_int\fP * m, float * s, float * sep)"

.PP
Definition at line 36 of file lapacke_ctrsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsen_work (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * w, \fBlapack_int\fP * m, float * s, float * sep, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ctrsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, float * s, float * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ctrsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * t, \fBlapack_int\fP ldt, const \fBlapack_complex_float\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_float\fP * vr, \fBlapack_int\fP ldvr, float * s, float * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_float\fP * work, \fBlapack_int\fP ldwork, float * rwork)"

.PP
Definition at line 36 of file lapacke_ctrsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsyl (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, float * scale)"

.PP
Definition at line 36 of file lapacke_ctrsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrsyl_work (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, float * scale)"

.PP
Definition at line 36 of file lapacke_ctrsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrtri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctrtri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrtri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ctrtri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctrtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ctrtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * arf)"

.PP
Definition at line 36 of file lapacke_ctrttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * arf)"

.PP
Definition at line 36 of file lapacke_ctrttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrttp (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctrttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctrttp_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * ap)"

.PP
Definition at line 36 of file lapacke_ctrttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctzrzf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_ctzrzf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ctzrzf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ctzrzf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunbdb (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP ldx22, float * theta, float * phi, \fBlapack_complex_float\fP * taup1, \fBlapack_complex_float\fP * taup2, \fBlapack_complex_float\fP * tauq1, \fBlapack_complex_float\fP * tauq2)"

.PP
Definition at line 36 of file lapacke_cunbdb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunbdb_work (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP ldx22, float * theta, float * phi, \fBlapack_complex_float\fP * taup1, \fBlapack_complex_float\fP * taup2, \fBlapack_complex_float\fP * tauq1, \fBlapack_complex_float\fP * tauq2, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunbdb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cuncsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP ldx22, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP ldv2t)"

.PP
Definition at line 36 of file lapacke_cuncsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cuncsd2by1 (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t)"

.PP
Definition at line 36 of file lapacke_cuncsd2by1\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cuncsd2by1_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cuncsd2by1_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cuncsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_float\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_float\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_float\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_float\fP * x22, \fBlapack_int\fP ldx22, float * theta, \fBlapack_complex_float\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_float\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_float\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_float\fP * v2t, \fBlapack_int\fP ldv2t, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork, float * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_cuncsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungbr (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cungbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungbr_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cungbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunghr (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cunghr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunghr_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunghr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunglq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cunglq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunglq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunglq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungql (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cungql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungql_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cungql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cungqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cungqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungrq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cungrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungrq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cungrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungtr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau)"

.PP
Definition at line 36 of file lapacke_cungtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cungtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cungtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmbr (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmbr_work (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmhr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmhr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmhr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmhr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmql (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmql_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmrq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmrq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmrz (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmrz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmrz_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmrz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cunmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cunmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_cunmtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cupgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_cupgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cupgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cupgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cupmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_cupmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_cupmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_float\fP * ap, const \fBlapack_complex_float\fP * tau, \fBlapack_complex_float\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_float\fP * work)"

.PP
Definition at line 36 of file lapacke_cupmtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbbcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * theta, double * phi, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t, double * v2t, \fBlapack_int\fP ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e)"

.PP
Definition at line 36 of file lapacke_dbbcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbbcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * theta, double * phi, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t, double * v2t, \fBlapack_int\fP ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dbbcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsdc (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, double * d, double * e, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * q, \fBlapack_int\fP * iq)"

.PP
Definition at line 36 of file lapacke_dbdsdc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsdc_work (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, double * d, double * e, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * q, \fBlapack_int\fP * iq, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dbdsdc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsqr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double * d, double * e, double * vt, \fBlapack_int\fP ldvt, double * u, \fBlapack_int\fP ldu, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dbdsqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsqr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double * d, double * e, double * vt, \fBlapack_int\fP ldvt, double * u, \fBlapack_int\fP ldu, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dbdsqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsvdx (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_dbdsvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dbdsvdx_work (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dbdsvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ddisna (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * d, double * sep)"

.PP
Definition at line 36 of file lapacke_ddisna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ddisna_work (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * d, double * sep)"

.PP
Definition at line 36 of file lapacke_ddisna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbbrd (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double * ab, \fBlapack_int\fP ldab, double * d, double * e, double * q, \fBlapack_int\fP ldq, double * pt, \fBlapack_int\fP ldpt, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dgbbrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbbrd_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double * ab, \fBlapack_int\fP ldab, double * d, double * e, double * q, \fBlapack_int\fP ldq, double * pt, \fBlapack_int\fP ldpt, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dgbbrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbcon (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dgbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbcon_work (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgbequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgbequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dgbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbrfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dgbrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbrfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgbrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * rpivot)"

.PP
Definition at line 36 of file lapacke_dgbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dgbsvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbsvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgbsvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbtrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbtrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbtrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgbtrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * scale, \fBlapack_int\fP m, double * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_dgebak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * scale, \fBlapack_int\fP m, double * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_dgebak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebal (int matrix_layout, char job, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale)"

.PP
Definition at line 36 of file lapacke_dgebal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebal_work (int matrix_layout, char job, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale)"

.PP
Definition at line 36 of file lapacke_dgebal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebrd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * d, double * e, double * tauq, double * taup)"

.PP
Definition at line 36 of file lapacke_dgebrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgebrd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * d, double * e, double * tauq, double * taup, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgebrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgecon (int matrix_layout, char norm, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dgecon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgecon_work (int matrix_layout, char norm, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgecon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgeequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgeequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgeequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_dgeequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgees (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP ldvs)"

.PP
Definition at line 36 of file lapacke_dgees\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgees_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP ldvs, double * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dgees_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeesx (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP ldvs, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_dgeesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeesx_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_D_SELECT2\fP select, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, double * wr, double * wi, double * vs, \fBlapack_int\fP ldvs, double * rconde, double * rcondv, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dgeesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * wr, double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_dgeev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * wr, double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * wr, double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_dgeevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * wr, double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgeevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgehrd (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgehrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgehrd_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgehrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgejsv (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * sva, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * stat, \fBlapack_int\fP * istat)"

.PP
Definition at line 36 of file lapacke_dgejsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgejsv_work (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * sva, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgejsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_dgelq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelq2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgelq2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelq2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work)"

.PP
Definition at line 36 of file lapacke_dgelq2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP tsize, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgelq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgelqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgelqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgels (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgels\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgels_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgels_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelsd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_dgelsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelsd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgelsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelss (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_dgelss\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelss_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgelss_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelsy (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_dgelsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgelsy_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, double rcond, \fBlapack_int\fP * rank, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgelsy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * t, \fBlapack_int\fP tsize, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dgemlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * t, \fBlapack_int\fP tsize, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgemlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * t, \fBlapack_int\fP tsize, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dgemqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * t, \fBlapack_int\fP tsize, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgemqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dgemqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgemqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dgemqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqlf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqlf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqlf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeqlf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqp3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqp3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeqp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqpf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqpf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqpf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, double * tau, double * work)"

.PP
Definition at line 36 of file lapacke_dgeqpf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_dgeqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqr2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqr2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqr2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work)"

.PP
Definition at line 36 of file lapacke_dgeqr2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP tsize, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrfp (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgeqrfp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrfp_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgeqrfp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dgeqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dgeqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dgeqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dgeqrt3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dgeqrt3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgeqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, double * a, \fBlapack_int\fP lda, double * t, \fBlapack_int\fP ldt, double * work)"

.PP
Definition at line 36 of file lapacke_dgeqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dgerfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgerfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dgerfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgerfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dgerqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgerqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgerqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesdd (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt)"

.PP
Definition at line 36 of file lapacke_dgesdd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesdd_work (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgesdd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvd (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * superb)"

.PP
Definition at line 36 of file lapacke_dgesvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvd_work (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgesvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvdx (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_dgesvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvdx_work (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, double * u, \fBlapack_int\fP ldu, double * vt, \fBlapack_int\fP ldvt, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgesvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvj (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * sva, \fBlapack_int\fP mv, double * v, \fBlapack_int\fP ldv, double * stat)"

.PP
Definition at line 36 of file lapacke_dgesvj\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvj_work (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * sva, \fBlapack_int\fP mv, double * v, \fBlapack_int\fP ldv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgesvj_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * rpivot)"

.PP
Definition at line 36 of file lapacke_dgesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dgesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgesvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetri (int matrix_layout, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetri_work (int matrix_layout, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetsls (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgetsls\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgetsls_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgetsls_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggbak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * lscale, const double * rscale, \fBlapack_int\fP m, double * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_dggbak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggbak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * lscale, const double * rscale, \fBlapack_int\fP m, double * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_dggbak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggbal (int matrix_layout, char job, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale)"

.PP
Definition at line 36 of file lapacke_dggbal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggbal_work (int matrix_layout, char job, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * work)"

.PP
Definition at line 36 of file lapacke_dggbal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgges (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_dgges\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgges3 (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_dgges3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgges3_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr, double * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dgges3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgges_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr, double * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dgges_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggesx (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_dggesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggesx_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_D_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, double * alphar, double * alphai, double * beta, double * vsl, \fBlapack_int\fP ldvsl, double * vsr, \fBlapack_int\fP ldvsr, double * rconde, double * rcondv, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dggesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_dggev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggev3 (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_dggev3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggev3_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggev3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_dggevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_dggevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggglm (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * d, double * x, double * y)"

.PP
Definition at line 36 of file lapacke_dggglm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggglm_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * d, double * x, double * y, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggglm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgghd3 (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dgghd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgghd3_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgghd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgghrd (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dgghrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgghrd_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dgghrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgglse (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * c, double * d, double * x)"

.PP
Definition at line 36 of file lapacke_dgglse\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgglse_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * c, double * d, double * x, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dgglse_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggqrf (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * taua, double * b, \fBlapack_int\fP ldb, double * taub)"

.PP
Definition at line 36 of file lapacke_dggqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggqrf_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, double * a, \fBlapack_int\fP lda, double * taua, double * b, \fBlapack_int\fP ldb, double * taub, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggrqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * taua, double * b, \fBlapack_int\fP ldb, double * taub)"

.PP
Definition at line 36 of file lapacke_dggrqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggrqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * taua, double * b, \fBlapack_int\fP ldb, double * taub, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggrqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvd (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dggsvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvd3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dggsvd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvd3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dggsvd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvd_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dggsvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvp (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_dggsvp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvp3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_dggsvp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvp3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dggsvp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dggsvp_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, double * tau, double * work)"

.PP
Definition at line 36 of file lapacke_dggsvp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtcon (char norm, \fBlapack_int\fP n, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dgtcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtcon_work (char norm, \fBlapack_int\fP n, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgtcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, const double * dlf, const double * df, const double * duf, const double * du2, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dgtrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, const double * dlf, const double * df, const double * duf, const double * du2, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgtrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * dl, double * d, double * du, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgtsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * dl, double * d, double * du, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgtsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, double * dlf, double * df, double * duf, double * du2, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dgtsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgtsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, double * dlf, double * df, double * duf, double * du2, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dgtsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgttrf (\fBlapack_int\fP n, double * dl, double * d, double * du, double * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgttrf_work (\fBlapack_int\fP n, double * dl, double * d, double * du, double * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dgttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgttrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dgttrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * dl, const double * d, const double * du, const double * du2, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dgttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhgeqz (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * h, \fBlapack_int\fP ldh, double * t, \fBlapack_int\fP ldt, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dhgeqz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhgeqz_work (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * h, \fBlapack_int\fP ldh, double * t, \fBlapack_int\fP ldt, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dhgeqz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhsein (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * h, \fBlapack_int\fP ldh, double * wr, const double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_dhsein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhsein_work (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * h, \fBlapack_int\fP ldh, double * wr, const double * wi, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_dhsein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhseqr (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * h, \fBlapack_int\fP ldh, double * wr, double * wi, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dhseqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dhseqr_work (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * h, \fBlapack_int\fP ldh, double * wr, double * wi, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dhseqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlacn2 (\fBlapack_int\fP n, double * v, double * x, \fBlapack_int\fP * isgn, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_dlacn2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlacn2_work (\fBlapack_int\fP n, double * v, double * x, \fBlapack_int\fP * isgn, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_dlacn2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlacpy (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dlacpy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlacpy_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dlacpy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlag2s (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, float * sa, \fBlapack_int\fP ldsa)"

.PP
Definition at line 36 of file lapacke_dlag2s\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlag2s_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, float * sa, \fBlapack_int\fP ldsa)"

.PP
Definition at line 36 of file lapacke_dlag2s_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlagge (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * d, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_dlagge\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlagge_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * d, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, double * work)"

.PP
Definition at line 36 of file lapacke_dlagge_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlagsy (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_dlagsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlagsy_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, double * work)"

.PP
Definition at line 36 of file lapacke_dlagsy_work\&.c\&.
.SS "double LAPACKE_dlamch (char cmach)"

.PP
Definition at line 36 of file lapacke_dlamch\&.c\&.
.SS "double LAPACKE_dlamch_work (char cmach)"

.PP
Definition at line 36 of file lapacke_dlamch_work\&.c\&.
.SS "double LAPACKE_dlange (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlange\&.c\&.
.SS "double LAPACKE_dlange_work (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_dlange_work\&.c\&.
.SS "double LAPACKE_dlansy (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlansy\&.c\&.
.SS "double LAPACKE_dlansy_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_dlansy_work\&.c\&.
.SS "double LAPACKE_dlantr (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlantr\&.c\&.
.SS "double LAPACKE_dlantr_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_dlantr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlapmr (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_dlapmr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlapmr_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_dlapmr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlapmt (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_dlapmt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlapmt_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_dlapmt_work\&.c\&.
.SS "double LAPACKE_dlapy2 (double x, double y)"

.PP
Definition at line 36 of file lapacke_dlapy2\&.c\&.
.SS "double LAPACKE_dlapy2_work (double x, double y)"

.PP
Definition at line 36 of file lapacke_dlapy2_work\&.c\&.
.SS "double LAPACKE_dlapy3 (double x, double y, double z)"

.PP
Definition at line 36 of file lapacke_dlapy3\&.c\&.
.SS "double LAPACKE_dlapy3_work (double x, double y, double z)"

.PP
Definition at line 36 of file lapacke_dlapy3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dlarfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_dlarfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfg (\fBlapack_int\fP n, double * alpha, double * x, \fBlapack_int\fP incx, double * tau)"

.PP
Definition at line 36 of file lapacke_dlarfg\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfg_work (\fBlapack_int\fP n, double * alpha, double * x, \fBlapack_int\fP incx, double * tau)"

.PP
Definition at line 36 of file lapacke_dlarfg_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarft (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * v, \fBlapack_int\fP ldv, const double * tau, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dlarft\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarft_work (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * v, \fBlapack_int\fP ldv, const double * tau, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dlarft_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfx (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * v, double tau, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dlarfx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarfx_work (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * v, double tau, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dlarfx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarnv (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, double * x)"

.PP
Definition at line 36 of file lapacke_dlarnv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlarnv_work (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, double * x)"

.PP
Definition at line 36 of file lapacke_dlarnv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlartgp (double f, double g, double * cs, double * sn, double * r)"

.PP
Definition at line 36 of file lapacke_dlartgp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlartgp_work (double f, double g, double * cs, double * sn, double * r)"

.PP
Definition at line 36 of file lapacke_dlartgp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlartgs (double x, double y, double sigma, double * cs, double * sn)"

.PP
Definition at line 36 of file lapacke_dlartgs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlartgs_work (double x, double y, double sigma, double * cs, double * sn)"

.PP
Definition at line 36 of file lapacke_dlartgs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlascl (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlascl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlascl_work (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlascl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlaset (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, double beta, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlaset\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlaset_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, double beta, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlaset_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlasrt (char id, \fBlapack_int\fP n, double * d)"

.PP
Definition at line 36 of file lapacke_dlasrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlasrt_work (char id, \fBlapack_int\fP n, double * d)"

.PP
Definition at line 36 of file lapacke_dlasrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlassq (\fBlapack_int\fP n, double * x, \fBlapack_int\fP incx, double * scale, double * sumsq)"

.PP
Definition at line 36 of file lapacke_dlassq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlassq_work (\fBlapack_int\fP n, double * x, \fBlapack_int\fP incx, double * scale, double * sumsq)"

.PP
Definition at line 36 of file lapacke_dlassq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlaswp (int matrix_layout, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_dlaswp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlaswp_work (int matrix_layout, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_dlaswp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlatms (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, double * d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlatms\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlatms_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, double * d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, double * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_dlatms_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlauum (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlauum\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dlauum_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dlauum_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dopgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, const double * tau, double * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_dopgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dopgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, const double * tau, double * q, \fBlapack_int\fP ldq, double * work)"

.PP
Definition at line 36 of file lapacke_dopgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dopmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * ap, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dopmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dopmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * ap, const double * tau, double * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_dopmtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorbdb (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x12, \fBlapack_int\fP ldx12, double * x21, \fBlapack_int\fP ldx21, double * x22, \fBlapack_int\fP ldx22, double * theta, double * phi, double * taup1, double * taup2, double * tauq1, double * tauq2)"

.PP
Definition at line 36 of file lapacke_dorbdb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorbdb_work (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x12, \fBlapack_int\fP ldx12, double * x21, \fBlapack_int\fP ldx21, double * x22, \fBlapack_int\fP ldx22, double * theta, double * phi, double * taup1, double * taup2, double * tauq1, double * tauq2, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorbdb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x12, \fBlapack_int\fP ldx12, double * x21, \fBlapack_int\fP ldx21, double * x22, \fBlapack_int\fP ldx22, double * theta, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t, double * v2t, \fBlapack_int\fP ldv2t)"

.PP
Definition at line 36 of file lapacke_dorcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorcsd2by1 (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x21, \fBlapack_int\fP ldx21, double * theta, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t)"

.PP
Definition at line 36 of file lapacke_dorcsd2by1\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorcsd2by1_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x21, \fBlapack_int\fP ldx21, double * theta, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dorcsd2by1_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * x11, \fBlapack_int\fP ldx11, double * x12, \fBlapack_int\fP ldx12, double * x21, \fBlapack_int\fP ldx21, double * x22, \fBlapack_int\fP ldx22, double * theta, double * u1, \fBlapack_int\fP ldu1, double * u2, \fBlapack_int\fP ldu2, double * v1t, \fBlapack_int\fP ldv1t, double * v2t, \fBlapack_int\fP ldv2t, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dorcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgbr (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorgbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgbr_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorgbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorghr (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorghr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorghr_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorghr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorglq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorglq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorglq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorglq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgql (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorgql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgql_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorgql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorgqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorgqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgrq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorgrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgrq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorgrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * tau)"

.PP
Definition at line 36 of file lapacke_dorgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dorgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dorgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormbr (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormbr_work (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormhr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormhr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormhr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormhr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormql (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormql_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormrq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormrq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormrz (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormrz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormrz_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormrz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_dormtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dormtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * tau, double * c, \fBlapack_int\fP ldc, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dormtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbcon (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dpbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dpbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbequ (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dpbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * afb, \fBlapack_int\fP ldafb, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dpbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbstf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, double * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_dpbstf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbstf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, double * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_dpbstf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dpbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, double * ab, \fBlapack_int\fP ldab, double * afb, \fBlapack_int\fP ldafb, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dpbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbtrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_dpbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbtrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_dpbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbtrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpbtrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftrf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dpftrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftrf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dpftrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftri (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dpftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftri_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dpftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftrs (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpftrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpftrs_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpftrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpocon (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dpocon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpocon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dpocon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpoequ (int matrix_layout, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpoequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpoequ_work (int matrix_layout, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpoequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpoequb (int matrix_layout, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpoequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpoequb_work (int matrix_layout, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dpoequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dporfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dporfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dporfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dporfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dporfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const double * s, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dporfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dporfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const double * s, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dporfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dposvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dposvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dposvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dposvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dposvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrf (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrf2 (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrf2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotri (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dpotri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpotrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpotrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpotrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dppcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dppcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppequ (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dppequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dppequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * afp, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dpprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * afp, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dpprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dppsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dppsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, double * afp, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dppsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dppsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, double * afp, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dppsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dpptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dpptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptri (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dpptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dpptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpstrf (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double tol)"

.PP
Definition at line 36 of file lapacke_dpstrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpstrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double tol, double * work)"

.PP
Definition at line 36 of file lapacke_dpstrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptcon (\fBlapack_int\fP n, const double * d, const double * e, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dptcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptcon_work (\fBlapack_int\fP n, const double * d, const double * e, double anorm, double * rcond, double * work)"

.PP
Definition at line 36 of file lapacke_dptcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpteqr (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dpteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dpteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptrfs (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, const double * df, const double * ef, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dptrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptrfs_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, const double * df, const double * ef, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work)"

.PP
Definition at line 36 of file lapacke_dptrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * d, double * e, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dptsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * d, double * e, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dptsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptsvx (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, double * df, double * ef, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dptsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dptsvx_work (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, double * df, double * ef, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work)"

.PP
Definition at line 36 of file lapacke_dptsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpttrf (\fBlapack_int\fP n, double * d, double * e)"

.PP
Definition at line 36 of file lapacke_dpttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpttrf_work (\fBlapack_int\fP n, double * d, double * e)"

.PP
Definition at line 36 of file lapacke_dpttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpttrs (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dpttrs_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const double * e, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dpttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsbev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dsbev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsbevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsbevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgst (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, const double * bb, \fBlapack_int\fP ldbb, double * x, \fBlapack_int\fP ldx)"

.PP
Definition at line 36 of file lapacke_dsbgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgst_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, const double * bb, \fBlapack_int\fP ldbb, double * x, \fBlapack_int\fP ldx, double * work)"

.PP
Definition at line 36 of file lapacke_dsbgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgv (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgv_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * w, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dsbgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgvd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsbgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgvd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsbgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgvx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbgvx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, double * ab, \fBlapack_int\fP ldab, double * bb, \fBlapack_int\fP ldbb, double * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsbgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbtrd (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * d, double * e, double * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_dsbtrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsbtrd_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, double * ab, \fBlapack_int\fP ldab, double * d, double * e, double * q, \fBlapack_int\fP ldq, double * work)"

.PP
Definition at line 36 of file lapacke_dsbtrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsfrk (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const double * a, \fBlapack_int\fP lda, double beta, double * c)"

.PP
Definition at line 36 of file lapacke_dsfrk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsfrk_work (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const double * a, \fBlapack_int\fP lda, double beta, double * c)"

.PP
Definition at line 36 of file lapacke_dsfrk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_dsgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * work, float * swork, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_dsgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dspcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dspcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dspev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * w, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dspev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dspevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dspevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dspevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dspevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double * ap, const double * bp)"

.PP
Definition at line 36 of file lapacke_dspgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double * ap, const double * bp)"

.PP
Definition at line 36 of file lapacke_dspgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dspgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dspgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dspgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dspgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dspgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspgvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double * ap, double * bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dspgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_dsposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * work, float * swork, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_dsposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * afp, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dsprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * afp, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dspsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * ap, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dspsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * afp, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dspsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dspsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * afp, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dspsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrd (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, double * d, double * e, double * tau)"

.PP
Definition at line 36 of file lapacke_dsptrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, double * d, double * e, double * tau)"

.PP
Definition at line 36 of file lapacke_dsptrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptri (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * ap, const \fBlapack_int\fP * ipiv, double * work)"

.PP
Definition at line 36 of file lapacke_dsptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstebz (char range, char order, \fBlapack_int\fP n, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, const double * d, const double * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, double * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit)"

.PP
Definition at line 36 of file lapacke_dstebz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstebz_work (char range, char order, \fBlapack_int\fP n, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, const double * d, const double * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, double * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dstebz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstedc (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dstedc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstedc_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dstedc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstegr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_dstegr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstegr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dstegr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstein (int matrix_layout, \fBlapack_int\fP n, const double * d, const double * e, \fBlapack_int\fP m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_dstein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstein_work (int matrix_layout, \fBlapack_int\fP n, const double * d, const double * e, \fBlapack_int\fP m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_dstein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstemr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac)"

.PP
Definition at line 36 of file lapacke_dstemr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstemr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dstemr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsteqr (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dsteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dsteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsterf (\fBlapack_int\fP n, double * d, double * e)"

.PP
Definition at line 36 of file lapacke_dsterf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsterf_work (\fBlapack_int\fP n, double * d, double * e)"

.PP
Definition at line 36 of file lapacke_dsterf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstev (int matrix_layout, char jobz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dstev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstev_work (int matrix_layout, char jobz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_dstev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevd (int matrix_layout, char jobz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_dstevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevd_work (int matrix_layout, char jobz, \fBlapack_int\fP n, double * d, double * e, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dstevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_dstevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dstevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevx (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dstevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dstevx_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dstevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsycon (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dsycon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsycon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_dsycon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsycon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsycon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsycon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsycon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyconv (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * e)"

.PP
Definition at line 36 of file lapacke_dsyconv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyconv_work (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * e)"

.PP
Definition at line 36 of file lapacke_dsyconv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_dsyequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax, double * work)"

.PP
Definition at line 36 of file lapacke_dsyequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_dsyev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_dsyev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsyev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsyev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_dsyevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_dsyevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsyevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * w, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsyevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevr (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_dsyevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevr_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_dsyevr_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevr_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsyevr_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevr_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsyevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsyevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsyevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsyevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsyevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsygst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsygst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_dsygv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygv_2stage (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_dsygv_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygv_2stage_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsygv_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsygv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_dsygvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * w, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dsygvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsygvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsygvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, double * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_dsygvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dsyrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsyrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyrfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dsyrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyrfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsyrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsysv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsysv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsysv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsysv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsysv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * e, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsysv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * e, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsysv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsysv_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsysv_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsysv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dsysvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsysvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_dsysvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsysvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, double * b, \fBlapack_int\fP ldb, double * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dsysvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_dsyswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsyswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_dsyswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrd (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * d, double * e, double * tau)"

.PP
Definition at line 36 of file lapacke_dsytrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * d, double * e, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_dsytrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * e, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_dsytri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_dsytri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_dsytri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * work)"

.PP
Definition at line 36 of file lapacke_dsytri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work)"

.PP
Definition at line 36 of file lapacke_dsytrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * e, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * a, \fBlapack_int\fP lda, double * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dsytrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dsytrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dsytrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double * rcond)"

.PP
Definition at line 36 of file lapacke_dtbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const double * ab, \fBlapack_int\fP ldab, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dtbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtbtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const double * ab, \fBlapack_int\fP ldab, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfsm (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, const double * a, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtfsm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfsm_work (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, double alpha, const double * a, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtfsm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtftri (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dtftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtftri_work (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, double * a)"

.PP
Definition at line 36 of file lapacke_dtftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfttp (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * arf, double * ap)"

.PP
Definition at line 36 of file lapacke_dtfttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfttp_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * arf, double * ap)"

.PP
Definition at line 36 of file lapacke_dtfttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfttr (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * arf, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtfttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtfttr_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * arf, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtfttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * s, \fBlapack_int\fP lds, const double * p, \fBlapack_int\fP ldp, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_dtgevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * s, \fBlapack_int\fP lds, const double * p, \fBlapack_int\fP ldp, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, double * work)"

.PP
Definition at line 36 of file lapacke_dtgevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgexc (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst)"

.PP
Definition at line 36 of file lapacke_dtgexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgexc_work (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dtgexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsen (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif)"

.PP
Definition at line 36 of file lapacke_dtgsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsen_work (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * alphar, double * alphai, double * beta, double * q, \fBlapack_int\fP ldq, double * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dtgsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsja (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_dtgsja\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsja_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double tola, double tolb, double * alpha, double * beta, double * u, \fBlapack_int\fP ldu, double * v, \fBlapack_int\fP ldv, double * q, \fBlapack_int\fP ldq, double * work, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_dtgsja_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, const double * vl, \fBlapack_int\fP ldvl, const double * vr, \fBlapack_int\fP ldvr, double * s, double * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_dtgsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, const double * vl, \fBlapack_int\fP ldvl, const double * vr, \fBlapack_int\fP ldvr, double * s, double * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtgsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsyl (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, double * c, \fBlapack_int\fP ldc, const double * d, \fBlapack_int\fP ldd, const double * e, \fBlapack_int\fP lde, double * f, \fBlapack_int\fP ldf, double * scale, double * dif)"

.PP
Definition at line 36 of file lapacke_dtgsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtgsyl_work (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, double * c, \fBlapack_int\fP ldc, const double * d, \fBlapack_int\fP ldd, const double * e, \fBlapack_int\fP lde, double * f, \fBlapack_int\fP ldf, double * scale, double * dif, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtgsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double * ap, double * rcond)"

.PP
Definition at line 36 of file lapacke_dtpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double * ap, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpmqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtpmqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpmqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * work)"

.PP
Definition at line 36 of file lapacke_dtpmqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dtpqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dtpqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_dtpqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * t, \fBlapack_int\fP ldt, double * work)"

.PP
Definition at line 36 of file lapacke_dtpqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtprfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtprfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtprfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const double * v, \fBlapack_int\fP ldv, const double * t, \fBlapack_int\fP ldt, double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb, double * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_dtprfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtprfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dtprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtprfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtptri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dtptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtptri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double * ap)"

.PP
Definition at line 36 of file lapacke_dtptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtptrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtptrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * ap, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * ap, double * arf)"

.PP
Definition at line 36 of file lapacke_dtpttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * ap, double * arf)"

.PP
Definition at line 36 of file lapacke_dtpttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpttr (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtpttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtpttr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * ap, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtpttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * rcond)"

.PP
Definition at line 36 of file lapacke_dtrcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * rcond, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtrcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrevc (int matrix_layout, char side, char howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * t, \fBlapack_int\fP ldt, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_dtrevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrevc_work (int matrix_layout, char side, char howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * t, \fBlapack_int\fP ldt, double * vl, \fBlapack_int\fP ldvl, double * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, double * work)"

.PP
Definition at line 36 of file lapacke_dtrevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrexc (int matrix_layout, char compq, \fBlapack_int\fP n, double * t, \fBlapack_int\fP ldt, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst)"

.PP
Definition at line 36 of file lapacke_dtrexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrexc_work (int matrix_layout, char compq, \fBlapack_int\fP n, double * t, \fBlapack_int\fP ldt, double * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, double * work)"

.PP
Definition at line 36 of file lapacke_dtrexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_dtrrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, const double * x, \fBlapack_int\fP ldx, double * ferr, double * berr, double * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtrrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsen (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, double * t, \fBlapack_int\fP ldt, double * q, \fBlapack_int\fP ldq, double * wr, double * wi, \fBlapack_int\fP * m, double * s, double * sep)"

.PP
Definition at line 36 of file lapacke_dtrsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsen_work (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, double * t, \fBlapack_int\fP ldt, double * q, \fBlapack_int\fP ldq, double * wr, double * wi, \fBlapack_int\fP * m, double * s, double * sep, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_dtrsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * t, \fBlapack_int\fP ldt, const double * vl, \fBlapack_int\fP ldvl, const double * vr, \fBlapack_int\fP ldvr, double * s, double * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_dtrsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const double * t, \fBlapack_int\fP ldt, const double * vl, \fBlapack_int\fP ldvl, const double * vr, \fBlapack_int\fP ldvr, double * s, double * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m, double * work, \fBlapack_int\fP ldwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_dtrsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsyl (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, double * c, \fBlapack_int\fP ldc, double * scale)"

.PP
Definition at line 36 of file lapacke_dtrsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrsyl_work (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, double * c, \fBlapack_int\fP ldc, double * scale)"

.PP
Definition at line 36 of file lapacke_dtrsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrtri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtrtri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrtri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_dtrtri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtrtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * a, \fBlapack_int\fP lda, double * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_dtrtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * arf)"

.PP
Definition at line 36 of file lapacke_dtrttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * arf)"

.PP
Definition at line 36 of file lapacke_dtrttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrttp (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * ap)"

.PP
Definition at line 36 of file lapacke_dtrttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtrttp_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, double * ap)"

.PP
Definition at line 36 of file lapacke_dtrttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtzrzf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau)"

.PP
Definition at line 36 of file lapacke_dtzrzf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_dtzrzf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, double * a, \fBlapack_int\fP lda, double * tau, double * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_dtzrzf_work\&.c\&.
.SS "int LAPACKE_get_nancheck ()"

.PP
Definition at line 43 of file lapacke_nancheck\&.c\&.
.SS "void LAPACKE_ilaver (\fBlapack_int\fP * vers_major, \fBlapack_int\fP * vers_minor, \fBlapack_int\fP * vers_patch)"

.PP
Definition at line 36 of file lapacke_ilaver\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbbcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * theta, float * phi, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t, float * v2t, \fBlapack_int\fP ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e)"

.PP
Definition at line 36 of file lapacke_sbbcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbbcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * theta, float * phi, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t, float * v2t, \fBlapack_int\fP ldv2t, float * b11d, float * b11e, float * b12d, float * b12e, float * b21d, float * b21e, float * b22d, float * b22e, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sbbcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsdc (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, float * d, float * e, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * q, \fBlapack_int\fP * iq)"

.PP
Definition at line 36 of file lapacke_sbdsdc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsdc_work (int matrix_layout, char uplo, char compq, \fBlapack_int\fP n, float * d, float * e, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * q, \fBlapack_int\fP * iq, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sbdsdc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsqr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float * d, float * e, float * vt, \fBlapack_int\fP ldvt, float * u, \fBlapack_int\fP ldu, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sbdsqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsqr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, float * d, float * e, float * vt, \fBlapack_int\fP ldvt, float * u, \fBlapack_int\fP ldu, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_sbdsqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsvdx (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_sbdsvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sbdsvdx_work (int matrix_layout, char uplo, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sbdsvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sdisna (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * d, float * sep)"

.PP
Definition at line 36 of file lapacke_sdisna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sdisna_work (char job, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * d, float * sep)"

.PP
Definition at line 36 of file lapacke_sdisna_work\&.c\&.
.SS "void LAPACKE_set_nancheck (int flag)"

.PP
Definition at line 38 of file lapacke_nancheck\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbbrd (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float * ab, \fBlapack_int\fP ldab, float * d, float * e, float * q, \fBlapack_int\fP ldq, float * pt, \fBlapack_int\fP ldpt, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sgbbrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbbrd_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float * ab, \fBlapack_int\fP ldab, float * d, float * e, float * q, \fBlapack_int\fP ldq, float * pt, \fBlapack_int\fP ldpt, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_sgbbrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbcon (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sgbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbcon_work (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgbequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * ab, \fBlapack_int\fP ldab, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgbequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sgbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbrfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sgbrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbrfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgbrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * rpivot)"

.PP
Definition at line 36 of file lapacke_sgbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sgbsvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbsvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgbsvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbtrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbtrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbtrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgbtrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * scale, \fBlapack_int\fP m, float * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_sgebak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * scale, \fBlapack_int\fP m, float * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_sgebak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebal (int matrix_layout, char job, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale)"

.PP
Definition at line 36 of file lapacke_sgebal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebal_work (int matrix_layout, char job, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale)"

.PP
Definition at line 36 of file lapacke_sgebal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebrd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * d, float * e, float * tauq, float * taup)"

.PP
Definition at line 36 of file lapacke_sgebrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgebrd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * d, float * e, float * tauq, float * taup, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgebrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgecon (int matrix_layout, char norm, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sgecon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgecon_work (int matrix_layout, char norm, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgecon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgeequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgeequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgeequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * r, float * c, float * rowcnd, float * colcnd, float * amax)"

.PP
Definition at line 36 of file lapacke_sgeequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgees (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP ldvs)"

.PP
Definition at line 36 of file lapacke_sgees\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgees_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP ldvs, float * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sgees_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeesx (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP ldvs, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_sgeesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeesx_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_S_SELECT2\fP select, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, float * wr, float * wi, float * vs, \fBlapack_int\fP ldvs, float * rconde, float * rcondv, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sgeesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * wr, float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_sgeev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * wr, float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * wr, float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_sgeevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * wr, float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * scale, float * abnrm, float * rconde, float * rcondv, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgeevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgehrd (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgehrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgehrd_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgehrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgejsv (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * sva, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * stat, \fBlapack_int\fP * istat)"

.PP
Definition at line 36 of file lapacke_sgejsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgejsv_work (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * sva, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgejsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_sgelq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelq2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgelq2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelq2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work)"

.PP
Definition at line 36 of file lapacke_sgelq2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP tsize, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgelq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgelqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgelqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgels (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgels\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgels_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgels_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelsd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_sgelsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelsd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgelsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelss (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_sgelss\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelss_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * s, float rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgelss_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelsy (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, float rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_sgelsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgelsy_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, float rcond, \fBlapack_int\fP * rank, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgelsy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * t, \fBlapack_int\fP tsize, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sgemlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * t, \fBlapack_int\fP tsize, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgemlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * t, \fBlapack_int\fP tsize, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sgemqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * t, \fBlapack_int\fP tsize, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgemqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sgemqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgemqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_sgemqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqlf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqlf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqlf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeqlf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqp3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqp3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeqp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqpf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqpf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqpf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, float * tau, float * work)"

.PP
Definition at line 36 of file lapacke_sgeqpf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_sgeqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqr2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqr2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqr2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work)"

.PP
Definition at line 36 of file lapacke_sgeqr2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP tsize, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrfp (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgeqrfp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrfp_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgeqrfp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_sgeqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_sgeqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_sgeqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_sgeqrt3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_sgeqrt3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgeqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, float * a, \fBlapack_int\fP lda, float * t, \fBlapack_int\fP ldt, float * work)"

.PP
Definition at line 36 of file lapacke_sgeqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sgerfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgerfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sgerfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * r, const float * c, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgerfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_sgerqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgerqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgerqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesdd (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt)"

.PP
Definition at line 36 of file lapacke_sgesdd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesdd_work (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgesdd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvd (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * superb)"

.PP
Definition at line 36 of file lapacke_sgesvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvd_work (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgesvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvdx (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_sgesvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvdx_work (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, float * s, float * u, \fBlapack_int\fP ldu, float * vt, \fBlapack_int\fP ldvt, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgesvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvj (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * sva, \fBlapack_int\fP mv, float * v, \fBlapack_int\fP ldv, float * stat)"

.PP
Definition at line 36 of file lapacke_sgesvj\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvj_work (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * sva, \fBlapack_int\fP mv, float * v, \fBlapack_int\fP ldv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgesvj_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * rpivot)"

.PP
Definition at line 36 of file lapacke_sgesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sgesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgesvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * r, float * c, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetri (int matrix_layout, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetri_work (int matrix_layout, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetsls (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgetsls\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgetsls_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgetsls_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggbak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * lscale, const float * rscale, \fBlapack_int\fP m, float * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_sggbak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggbak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * lscale, const float * rscale, \fBlapack_int\fP m, float * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_sggbak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggbal (int matrix_layout, char job, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale)"

.PP
Definition at line 36 of file lapacke_sggbal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggbal_work (int matrix_layout, char job, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * work)"

.PP
Definition at line 36 of file lapacke_sggbal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgges (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_sgges\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgges3 (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_sgges3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgges3_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr, float * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sgges3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgges_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr, float * work, \fBlapack_int\fP lwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sgges_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggesx (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_sggesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggesx_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_S_SELECT3\fP selctg, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, float * alphar, float * alphai, float * beta, float * vsl, \fBlapack_int\fP ldvsl, float * vsr, \fBlapack_int\fP ldvsr, float * rconde, float * rcondv, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sggesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_sggev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggev3 (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_sggev3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggev3_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggev3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv)"

.PP
Definition at line 36 of file lapacke_sggevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, float * lscale, float * rscale, float * abnrm, float * bbnrm, float * rconde, float * rcondv, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_sggevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggglm (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * d, float * x, float * y)"

.PP
Definition at line 36 of file lapacke_sggglm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggglm_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * d, float * x, float * y, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggglm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgghd3 (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sgghd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgghd3_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgghd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgghrd (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sgghrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgghrd_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sgghrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgglse (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * c, float * d, float * x)"

.PP
Definition at line 36 of file lapacke_sgglse\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgglse_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * c, float * d, float * x, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sgglse_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggqrf (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * taua, float * b, \fBlapack_int\fP ldb, float * taub)"

.PP
Definition at line 36 of file lapacke_sggqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggqrf_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, float * a, \fBlapack_int\fP lda, float * taua, float * b, \fBlapack_int\fP ldb, float * taub, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggrqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * taua, float * b, \fBlapack_int\fP ldb, float * taub)"

.PP
Definition at line 36 of file lapacke_sggrqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggrqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * taua, float * b, \fBlapack_int\fP ldb, float * taub, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggrqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvd (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sggsvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvd3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sggsvd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvd3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sggsvd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvd_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sggsvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvp (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_sggsvp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvp3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_sggsvp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvp3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sggsvp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sggsvp_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, float * tau, float * work)"

.PP
Definition at line 36 of file lapacke_sggsvp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtcon (char norm, \fBlapack_int\fP n, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sgtcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtcon_work (char norm, \fBlapack_int\fP n, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgtcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, const float * dlf, const float * df, const float * duf, const float * du2, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sgtrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, const float * dlf, const float * df, const float * duf, const float * du2, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgtrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * dl, float * d, float * du, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgtsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * dl, float * d, float * du, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgtsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, float * dlf, float * df, float * duf, float * du2, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sgtsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgtsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, float * dlf, float * df, float * duf, float * du2, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sgtsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgttrf (\fBlapack_int\fP n, float * dl, float * d, float * du, float * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgttrf_work (\fBlapack_int\fP n, float * dl, float * d, float * du, float * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_sgttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgttrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sgttrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * dl, const float * d, const float * du, const float * du2, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sgttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shgeqz (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * h, \fBlapack_int\fP ldh, float * t, \fBlapack_int\fP ldt, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_shgeqz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shgeqz_work (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * h, \fBlapack_int\fP ldh, float * t, \fBlapack_int\fP ldt, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_shgeqz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shsein (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * h, \fBlapack_int\fP ldh, float * wr, const float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_shsein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shsein_work (int matrix_layout, char job, char eigsrc, char initv, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * h, \fBlapack_int\fP ldh, float * wr, const float * wi, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_shsein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shseqr (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * h, \fBlapack_int\fP ldh, float * wr, float * wi, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_shseqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_shseqr_work (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * h, \fBlapack_int\fP ldh, float * wr, float * wi, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_shseqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slacn2 (\fBlapack_int\fP n, float * v, float * x, \fBlapack_int\fP * isgn, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_slacn2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slacn2_work (\fBlapack_int\fP n, float * v, float * x, \fBlapack_int\fP * isgn, float * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_slacn2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slacpy (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_slacpy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slacpy_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_slacpy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slag2d (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * sa, \fBlapack_int\fP ldsa, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slag2d\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slag2d_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * sa, \fBlapack_int\fP ldsa, double * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slag2d_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slagge (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * d, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_slagge\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slagge_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const float * d, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, float * work)"

.PP
Definition at line 36 of file lapacke_slagge_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slagsy (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_slagsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slagsy_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * d, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, float * work)"

.PP
Definition at line 36 of file lapacke_slagsy_work\&.c\&.
.SS "float LAPACKE_slamch (char cmach)"

.PP
Definition at line 36 of file lapacke_slamch\&.c\&.
.SS "float LAPACKE_slamch_work (char cmach)"

.PP
Definition at line 36 of file lapacke_slamch_work\&.c\&.
.SS "float LAPACKE_slange (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slange\&.c\&.
.SS "float LAPACKE_slange_work (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_slange_work\&.c\&.
.SS "float LAPACKE_slansy (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slansy\&.c\&.
.SS "float LAPACKE_slansy_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_slansy_work\&.c\&.
.SS "float LAPACKE_slantr (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slantr\&.c\&.
.SS "float LAPACKE_slantr_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_slantr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slapmr (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_slapmr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slapmr_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_slapmr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slapmt (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_slapmt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slapmt_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, float * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_slapmt_work\&.c\&.
.SS "float LAPACKE_slapy2 (float x, float y)"

.PP
Definition at line 36 of file lapacke_slapy2\&.c\&.
.SS "float LAPACKE_slapy2_work (float x, float y)"

.PP
Definition at line 36 of file lapacke_slapy2_work\&.c\&.
.SS "float LAPACKE_slapy3 (float x, float y, float z)"

.PP
Definition at line 36 of file lapacke_slapy3\&.c\&.
.SS "float LAPACKE_slapy3_work (float x, float y, float z)"

.PP
Definition at line 36 of file lapacke_slapy3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_slarfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_slarfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfg (\fBlapack_int\fP n, float * alpha, float * x, \fBlapack_int\fP incx, float * tau)"

.PP
Definition at line 36 of file lapacke_slarfg\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfg_work (\fBlapack_int\fP n, float * alpha, float * x, \fBlapack_int\fP incx, float * tau)"

.PP
Definition at line 36 of file lapacke_slarfg_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarft (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * v, \fBlapack_int\fP ldv, const float * tau, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_slarft\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarft_work (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * v, \fBlapack_int\fP ldv, const float * tau, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_slarft_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfx (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * v, float tau, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_slarfx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarfx_work (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * v, float tau, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_slarfx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarnv (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, float * x)"

.PP
Definition at line 36 of file lapacke_slarnv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slarnv_work (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, float * x)"

.PP
Definition at line 36 of file lapacke_slarnv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slartgp (float f, float g, float * cs, float * sn, float * r)"

.PP
Definition at line 36 of file lapacke_slartgp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slartgp_work (float f, float g, float * cs, float * sn, float * r)"

.PP
Definition at line 36 of file lapacke_slartgp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slartgs (float x, float y, float sigma, float * cs, float * sn)"

.PP
Definition at line 36 of file lapacke_slartgs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slartgs_work (float x, float y, float sigma, float * cs, float * sn)"

.PP
Definition at line 36 of file lapacke_slartgs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slascl (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slascl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slascl_work (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, float cfrom, float cto, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slascl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slaset (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, float beta, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slaset\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slaset_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, float beta, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slaset_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slasrt (char id, \fBlapack_int\fP n, float * d)"

.PP
Definition at line 36 of file lapacke_slasrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slasrt_work (char id, \fBlapack_int\fP n, float * d)"

.PP
Definition at line 36 of file lapacke_slasrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slassq (\fBlapack_int\fP n, float * x, \fBlapack_int\fP incx, float * scale, float * sumsq)"

.PP
Definition at line 36 of file lapacke_slassq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slassq_work (\fBlapack_int\fP n, float * x, \fBlapack_int\fP incx, float * scale, float * sumsq)"

.PP
Definition at line 36 of file lapacke_slassq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slaswp (int matrix_layout, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_slaswp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slaswp_work (int matrix_layout, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_slaswp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slatms (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, float * d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slatms\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slatms_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, float * d, \fBlapack_int\fP mode, float cond, float dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, float * a, \fBlapack_int\fP lda, float * work)"

.PP
Definition at line 36 of file lapacke_slatms_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slauum (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slauum\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_slauum_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_slauum_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sopgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, const float * tau, float * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_sopgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sopgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, const float * tau, float * q, \fBlapack_int\fP ldq, float * work)"

.PP
Definition at line 36 of file lapacke_sopgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sopmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * ap, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sopmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sopmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * ap, const float * tau, float * c, \fBlapack_int\fP ldc, float * work)"

.PP
Definition at line 36 of file lapacke_sopmtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorbdb (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x12, \fBlapack_int\fP ldx12, float * x21, \fBlapack_int\fP ldx21, float * x22, \fBlapack_int\fP ldx22, float * theta, float * phi, float * taup1, float * taup2, float * tauq1, float * tauq2)"

.PP
Definition at line 36 of file lapacke_sorbdb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorbdb_work (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x12, \fBlapack_int\fP ldx12, float * x21, \fBlapack_int\fP ldx21, float * x22, \fBlapack_int\fP ldx22, float * theta, float * phi, float * taup1, float * taup2, float * tauq1, float * tauq2, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorbdb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x12, \fBlapack_int\fP ldx12, float * x21, \fBlapack_int\fP ldx21, float * x22, \fBlapack_int\fP ldx22, float * theta, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t, float * v2t, \fBlapack_int\fP ldv2t)"

.PP
Definition at line 36 of file lapacke_sorcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorcsd2by1 (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x21, \fBlapack_int\fP ldx21, float * theta, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t)"

.PP
Definition at line 36 of file lapacke_sorcsd2by1\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorcsd2by1_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x21, \fBlapack_int\fP ldx21, float * theta, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sorcsd2by1_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, float * x11, \fBlapack_int\fP ldx11, float * x12, \fBlapack_int\fP ldx12, float * x21, \fBlapack_int\fP ldx21, float * x22, \fBlapack_int\fP ldx22, float * theta, float * u1, \fBlapack_int\fP ldu1, float * u2, \fBlapack_int\fP ldu2, float * v1t, \fBlapack_int\fP ldv1t, float * v2t, \fBlapack_int\fP ldv2t, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sorcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgbr (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorgbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgbr_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorgbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorghr (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorghr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorghr_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorghr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorglq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorglq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorglq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorglq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgql (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorgql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgql_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorgql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorgqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorgqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgrq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorgrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgrq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorgrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * tau)"

.PP
Definition at line 36 of file lapacke_sorgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sorgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sorgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormbr (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormbr_work (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormhr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormhr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormhr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormhr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormql (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormql_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormrq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormrq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormrz (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormrz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormrz_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormrz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_sormtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sormtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * tau, float * c, \fBlapack_int\fP ldc, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_sormtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbcon (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_spbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_spbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbequ (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_spbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * afb, \fBlapack_int\fP ldafb, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_spbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbstf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, float * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_spbstf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbstf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, float * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_spbstf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_spbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, float * ab, \fBlapack_int\fP ldab, float * afb, \fBlapack_int\fP ldafb, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_spbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbtrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_spbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbtrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_spbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbtrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spbtrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftrf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_spftrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftrf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_spftrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftri (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_spftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftri_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_spftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftrs (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spftrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spftrs_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spftrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spocon (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_spocon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spocon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_spocon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spoequ (int matrix_layout, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spoequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spoequ_work (int matrix_layout, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spoequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spoequb (int matrix_layout, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spoequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spoequb_work (int matrix_layout, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_spoequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sporfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sporfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sporfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sporfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sporfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const float * s, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sporfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sporfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const float * s, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sporfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sposvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sposvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_sposvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sposvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sposvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrf (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrf2 (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrf2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotri (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_spotri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spotrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spotrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spotrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sppcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sppcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppequ (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_sppequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_sppequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * afp, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_spprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * afp, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_spprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sppsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sppsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, float * afp, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sppsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sppsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, float * afp, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sppsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_spptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_spptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptri (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_spptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_spptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spstrf (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float tol)"

.PP
Definition at line 36 of file lapacke_spstrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spstrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, float tol, float * work)"

.PP
Definition at line 36 of file lapacke_spstrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptcon (\fBlapack_int\fP n, const float * d, const float * e, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sptcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptcon_work (\fBlapack_int\fP n, const float * d, const float * e, float anorm, float * rcond, float * work)"

.PP
Definition at line 36 of file lapacke_sptcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spteqr (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_spteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_spteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptrfs (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, const float * df, const float * ef, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sptrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptrfs_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, const float * df, const float * ef, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work)"

.PP
Definition at line 36 of file lapacke_sptrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * d, float * e, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sptsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * d, float * e, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sptsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptsvx (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, float * df, float * ef, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sptsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sptsvx_work (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, float * df, float * ef, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work)"

.PP
Definition at line 36 of file lapacke_sptsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spttrf (\fBlapack_int\fP n, float * d, float * e)"

.PP
Definition at line 36 of file lapacke_spttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spttrf_work (\fBlapack_int\fP n, float * d, float * e)"

.PP
Definition at line 36 of file lapacke_spttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spttrs (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_spttrs_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * d, const float * e, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_spttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssbev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_ssbev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssbevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssbevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgst (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, const float * bb, \fBlapack_int\fP ldbb, float * x, \fBlapack_int\fP ldx)"

.PP
Definition at line 36 of file lapacke_ssbgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgst_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, const float * bb, \fBlapack_int\fP ldbb, float * x, \fBlapack_int\fP ldx, float * work)"

.PP
Definition at line 36 of file lapacke_ssbgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgv (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgv_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * w, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_ssbgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgvd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssbgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgvd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssbgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgvx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbgvx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, float * ab, \fBlapack_int\fP ldab, float * bb, \fBlapack_int\fP ldbb, float * q, \fBlapack_int\fP ldq, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssbgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbtrd (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * d, float * e, float * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_ssbtrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssbtrd_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, float * ab, \fBlapack_int\fP ldab, float * d, float * e, float * q, \fBlapack_int\fP ldq, float * work)"

.PP
Definition at line 36 of file lapacke_ssbtrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssfrk (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const float * a, \fBlapack_int\fP lda, float beta, float * c)"

.PP
Definition at line 36 of file lapacke_ssfrk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssfrk_work (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, float alpha, const float * a, \fBlapack_int\fP lda, float beta, float * c)"

.PP
Definition at line 36 of file lapacke_ssfrk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_sspcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sspcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sspev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * w, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_sspev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sspevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sspevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sspevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * ap, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sspevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float * ap, const float * bp)"

.PP
Definition at line 36 of file lapacke_sspgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float * ap, const float * bp)"

.PP
Definition at line 36 of file lapacke_sspgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sspgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_sspgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sspgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sspgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sspgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspgvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float * ap, float * bp, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sspgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * afp, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ssprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * afp, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sspsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * ap, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_sspsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * afp, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_sspsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sspsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * afp, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sspsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrd (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, float * d, float * e, float * tau)"

.PP
Definition at line 36 of file lapacke_ssptrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, float * d, float * e, float * tau)"

.PP
Definition at line 36 of file lapacke_ssptrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptri (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * ap, const \fBlapack_int\fP * ipiv, float * work)"

.PP
Definition at line 36 of file lapacke_ssptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstebz (char range, char order, \fBlapack_int\fP n, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, const float * d, const float * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, float * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit)"

.PP
Definition at line 36 of file lapacke_sstebz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstebz_work (char range, char order, \fBlapack_int\fP n, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, const float * d, const float * e, \fBlapack_int\fP * m, \fBlapack_int\fP * nsplit, float * w, \fBlapack_int\fP * iblock, \fBlapack_int\fP * isplit, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_sstebz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstedc (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sstedc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstedc_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sstedc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstegr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_sstegr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstegr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sstegr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstein (int matrix_layout, \fBlapack_int\fP n, const float * d, const float * e, \fBlapack_int\fP m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_sstein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstein_work (int matrix_layout, \fBlapack_int\fP n, const float * d, const float * e, \fBlapack_int\fP m, const float * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_sstein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstemr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac)"

.PP
Definition at line 36 of file lapacke_sstemr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstemr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sstemr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssteqr (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_ssteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_ssteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssterf (\fBlapack_int\fP n, float * d, float * e)"

.PP
Definition at line 36 of file lapacke_ssterf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssterf_work (\fBlapack_int\fP n, float * d, float * e)"

.PP
Definition at line 36 of file lapacke_ssterf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstev (int matrix_layout, char jobz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sstev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstev_work (int matrix_layout, char jobz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz, float * work)"

.PP
Definition at line 36 of file lapacke_sstev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevd (int matrix_layout, char jobz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_sstevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevd_work (int matrix_layout, char jobz, \fBlapack_int\fP n, float * d, float * e, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sstevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_sstevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_sstevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevx (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sstevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_sstevx_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, float * d, float * e, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_sstevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssycon (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_ssycon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssycon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond)"

.PP
Definition at line 36 of file lapacke_ssycon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssycon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssycon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssycon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float anorm, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssycon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyconv (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * e)"

.PP
Definition at line 36 of file lapacke_ssyconv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyconv_work (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * e)"

.PP
Definition at line 36 of file lapacke_ssyconv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax)"

.PP
Definition at line 36 of file lapacke_ssyequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * s, float * scond, float * amax, float * work)"

.PP
Definition at line 36 of file lapacke_ssyequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_ssyev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_ssyev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssyev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssyev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_ssyevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w)"

.PP
Definition at line 36 of file lapacke_ssyevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssyevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * w, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssyevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevr (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_ssyevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevr_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_ssyevr_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevr_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssyevr_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevr_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssyevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssyevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssyevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssyevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssyevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssygst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssygst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_ssygv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygv_2stage (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_ssygv_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygv_2stage_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssygv_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssygv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w)"

.PP
Definition at line 36 of file lapacke_ssygvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * w, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ssygvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssygvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssygvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float vl, float vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, float abstol, \fBlapack_int\fP * m, float * w, float * z, \fBlapack_int\fP ldz, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_ssygvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ssyrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssyrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyrfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_ssyrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyrfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const float * s, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssyrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssysv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssysv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssysv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssysv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssysv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * e, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssysv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * e, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssysv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssysv_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssysv_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssysv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_ssysvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * ferr, float * berr, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssysvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params)"

.PP
Definition at line 36 of file lapacke_ssysvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssysvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, float * s, float * b, \fBlapack_int\fP ldb, float * x, \fBlapack_int\fP ldx, float * rcond, float * rpvgrw, float * berr, \fBlapack_int\fP n_err_bnds, float * err_bnds_norm, float * err_bnds_comp, \fBlapack_int\fP nparams, float * params, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ssysvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_ssyswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssyswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_ssyswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrd (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * d, float * e, float * tau)"

.PP
Definition at line 36 of file lapacke_ssytrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * d, float * e, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_ssytrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * e, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_ssytri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_ssytri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_ssytri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * work)"

.PP
Definition at line 36 of file lapacke_ssytri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work)"

.PP
Definition at line 36 of file lapacke_ssytrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * e, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, float * a, \fBlapack_int\fP lda, float * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ssytrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ssytrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ssytrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float * rcond)"

.PP
Definition at line 36 of file lapacke_stbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const float * ab, \fBlapack_int\fP ldab, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_stbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stbtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const float * ab, \fBlapack_int\fP ldab, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfsm (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, const float * a, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stfsm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfsm_work (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, float alpha, const float * a, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stfsm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stftri (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_stftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stftri_work (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, float * a)"

.PP
Definition at line 36 of file lapacke_stftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfttp (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * arf, float * ap)"

.PP
Definition at line 36 of file lapacke_stfttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfttp_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * arf, float * ap)"

.PP
Definition at line 36 of file lapacke_stfttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfttr (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * arf, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_stfttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stfttr_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * arf, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_stfttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * s, \fBlapack_int\fP lds, const float * p, \fBlapack_int\fP ldp, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_stgevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * s, \fBlapack_int\fP lds, const float * p, \fBlapack_int\fP ldp, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, float * work)"

.PP
Definition at line 36 of file lapacke_stgevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgexc (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst)"

.PP
Definition at line 36 of file lapacke_stgexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgexc_work (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_stgexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsen (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif)"

.PP
Definition at line 36 of file lapacke_stgsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsen_work (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * alphar, float * alphai, float * beta, float * q, \fBlapack_int\fP ldq, float * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, float * pl, float * pr, float * dif, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_stgsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsja (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_stgsja\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsja_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float tola, float tolb, float * alpha, float * beta, float * u, \fBlapack_int\fP ldu, float * v, \fBlapack_int\fP ldv, float * q, \fBlapack_int\fP ldq, float * work, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_stgsja_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, const float * vl, \fBlapack_int\fP ldvl, const float * vr, \fBlapack_int\fP ldvr, float * s, float * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_stgsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, const float * vl, \fBlapack_int\fP ldvl, const float * vr, \fBlapack_int\fP ldvr, float * s, float * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stgsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsyl (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, float * c, \fBlapack_int\fP ldc, const float * d, \fBlapack_int\fP ldd, const float * e, \fBlapack_int\fP lde, float * f, \fBlapack_int\fP ldf, float * scale, float * dif)"

.PP
Definition at line 36 of file lapacke_stgsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stgsyl_work (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, float * c, \fBlapack_int\fP ldc, const float * d, \fBlapack_int\fP ldd, const float * e, \fBlapack_int\fP lde, float * f, \fBlapack_int\fP ldf, float * scale, float * dif, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stgsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float * ap, float * rcond)"

.PP
Definition at line 36 of file lapacke_stpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float * ap, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpmqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stpmqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpmqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * work)"

.PP
Definition at line 36 of file lapacke_stpmqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_stpqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_stpqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_stpqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * t, \fBlapack_int\fP ldt, float * work)"

.PP
Definition at line 36 of file lapacke_stpqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stprfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stprfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stprfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const float * v, \fBlapack_int\fP ldv, const float * t, \fBlapack_int\fP ldt, float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb, float * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_stprfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stprfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_stprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stprfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_stprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stptri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_stptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stptri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float * ap)"

.PP
Definition at line 36 of file lapacke_stptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stptrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stptrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * ap, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_stptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * ap, float * arf)"

.PP
Definition at line 36 of file lapacke_stpttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * ap, float * arf)"

.PP
Definition at line 36 of file lapacke_stpttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpttr (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_stpttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stpttr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * ap, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_stpttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * rcond)"

.PP
Definition at line 36 of file lapacke_strcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * rcond, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_strcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strevc (int matrix_layout, char side, char howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * t, \fBlapack_int\fP ldt, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_strevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strevc_work (int matrix_layout, char side, char howmny, \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * t, \fBlapack_int\fP ldt, float * vl, \fBlapack_int\fP ldvl, float * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, float * work)"

.PP
Definition at line 36 of file lapacke_strevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strexc (int matrix_layout, char compq, \fBlapack_int\fP n, float * t, \fBlapack_int\fP ldt, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst)"

.PP
Definition at line 36 of file lapacke_strexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strexc_work (int matrix_layout, char compq, \fBlapack_int\fP n, float * t, \fBlapack_int\fP ldt, float * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ifst, \fBlapack_int\fP * ilst, float * work)"

.PP
Definition at line 36 of file lapacke_strexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr)"

.PP
Definition at line 36 of file lapacke_strrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, const float * x, \fBlapack_int\fP ldx, float * ferr, float * berr, float * work, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_strrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsen (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, float * t, \fBlapack_int\fP ldt, float * q, \fBlapack_int\fP ldq, float * wr, float * wi, \fBlapack_int\fP * m, float * s, float * sep)"

.PP
Definition at line 36 of file lapacke_strsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsen_work (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, float * t, \fBlapack_int\fP ldt, float * q, \fBlapack_int\fP ldq, float * wr, float * wi, \fBlapack_int\fP * m, float * s, float * sep, float * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_strsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * t, \fBlapack_int\fP ldt, const float * vl, \fBlapack_int\fP ldvl, const float * vr, \fBlapack_int\fP ldvr, float * s, float * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_strsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const float * t, \fBlapack_int\fP ldt, const float * vl, \fBlapack_int\fP ldvl, const float * vr, \fBlapack_int\fP ldvr, float * s, float * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m, float * work, \fBlapack_int\fP ldwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_strsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsyl (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, float * c, \fBlapack_int\fP ldc, float * scale)"

.PP
Definition at line 36 of file lapacke_strsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strsyl_work (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, const float * b, \fBlapack_int\fP ldb, float * c, \fBlapack_int\fP ldc, float * scale)"

.PP
Definition at line 36 of file lapacke_strsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strtri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_strtri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strtri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_strtri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_strtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const float * a, \fBlapack_int\fP lda, float * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_strtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * arf)"

.PP
Definition at line 36 of file lapacke_strttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * arf)"

.PP
Definition at line 36 of file lapacke_strttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strttp (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * ap)"

.PP
Definition at line 36 of file lapacke_strttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_strttp_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const float * a, \fBlapack_int\fP lda, float * ap)"

.PP
Definition at line 36 of file lapacke_strttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stzrzf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau)"

.PP
Definition at line 36 of file lapacke_stzrzf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_stzrzf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, float * a, \fBlapack_int\fP lda, float * tau, float * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_stzrzf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zbbcsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * theta, double * phi, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e)"

.PP
Definition at line 36 of file lapacke_zbbcsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zbbcsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, double * theta, double * phi, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP ldv2t, double * b11d, double * b11e, double * b12d, double * b12e, double * b21d, double * b21e, double * b22d, double * b22e, double * rwork, \fBlapack_int\fP lrwork)"

.PP
Definition at line 36 of file lapacke_zbbcsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zbdsqr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double * d, double * e, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zbdsqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zbdsqr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ncvt, \fBlapack_int\fP nru, \fBlapack_int\fP ncc, double * d, double * e, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_zbdsqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zcgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_zcgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zcgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP * work, \fBlapack_complex_float\fP * swork, double * rwork, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_zcgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zcposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_zcposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zcposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP * work, \fBlapack_complex_float\fP * swork, double * rwork, \fBlapack_int\fP * iter)"

.PP
Definition at line 36 of file lapacke_zcposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbbrd (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * pt, \fBlapack_int\fP ldpt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zgbbrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbbrd_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ncc, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * pt, \fBlapack_int\fP ldpt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbbrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbcon (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zgbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbcon_work (int matrix_layout, char norm, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgbequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgbequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zgbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbrfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zgbrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbrfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * rpivot)"

.PP
Definition at line 36 of file lapacke_zgbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zgbsvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbsvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgbsvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbtrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbtrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbtrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgbtrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * scale, \fBlapack_int\fP m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_zgebak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * scale, \fBlapack_int\fP m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_zgebak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebal (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale)"

.PP
Definition at line 36 of file lapacke_zgebal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebal_work (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale)"

.PP
Definition at line 36 of file lapacke_zgebal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebrd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * d, double * e, \fBlapack_complex_double\fP * tauq, \fBlapack_complex_double\fP * taup)"

.PP
Definition at line 36 of file lapacke_zgebrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgebrd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * d, double * e, \fBlapack_complex_double\fP * tauq, \fBlapack_complex_double\fP * taup, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgebrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgecon (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zgecon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgecon_work (int matrix_layout, char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgecon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeequ (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgeequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeequ_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgeequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeequb (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgeequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeequb_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * r, double * c, double * rowcnd, double * colcnd, double * amax)"

.PP
Definition at line 36 of file lapacke_zgeequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgees (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP ldvs)"

.PP
Definition at line 36 of file lapacke_zgees\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgees_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP ldvs, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zgees_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeesx (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP ldvs, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_zgeesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeesx_work (int matrix_layout, char jobvs, char sort, \fBLAPACK_Z_SELECT1\fP select, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vs, \fBlapack_int\fP ldvs, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zgeesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_zgeev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgeev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_zgeevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * scale, double * abnrm, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgeevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgehrd (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgehrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgehrd_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgehrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgejsv (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * sva, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, double * stat, \fBlapack_int\fP * istat)"

.PP
Definition at line 36 of file lapacke_zgejsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgejsv_work (int matrix_layout, char joba, char jobu, char jobv, char jobr, char jobt, char jobp, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * sva, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * cwork, \fBlapack_int\fP lwork, double * work, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zgejsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_zgelq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelq2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgelq2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelq2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zgelq2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgelq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgelqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgelqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgels (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgels\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgels_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgels_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelsd (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_zgelsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelsd_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zgelsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelss (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_zgelss\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelss_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * s, double rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgelss_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelsy (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, double rcond, \fBlapack_int\fP * rank)"

.PP
Definition at line 36 of file lapacke_zgelsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgelsy_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * jpvt, double rcond, \fBlapack_int\fP * rank, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgelsy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zgemlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgemlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zgemqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgemqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zgemqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgemqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zgemqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqlf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqlf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqlf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgeqlf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqp3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqp3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgeqp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqpf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqpf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqpf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * jpvt, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgeqpf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize)"

.PP
Definition at line 36 of file lapacke_zgeqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqr2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqr2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqr2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zgeqr2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP tsize, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgeqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgeqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrfp (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgeqrfp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrfp_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgeqrfp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zgeqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zgeqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zgeqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt3 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zgeqrt3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt3_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zgeqrt3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgeqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zgeqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zgerfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgerfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerfsx (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zgerfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerfsx_work (int matrix_layout, char trans, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * r, const double * c, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgerfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zgerqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgerqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgerqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesdd (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt)"

.PP
Definition at line 36 of file lapacke_zgesdd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesdd_work (int matrix_layout, char jobz, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zgesdd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvd (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, double * superb)"

.PP
Definition at line 36 of file lapacke_zgesvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvd_work (int matrix_layout, char jobu, char jobvt, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgesvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvdx (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_int\fP * superb)"

.PP
Definition at line 36 of file lapacke_zgesvdx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvdx_work (int matrix_layout, char jobu, char jobvt, char range, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * ns, double * s, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * vt, \fBlapack_int\fP ldvt, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zgesvdx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvj (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * sva, \fBlapack_int\fP mv, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, double * stat)"

.PP
Definition at line 36 of file lapacke_zgesvj\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvj_work (int matrix_layout, char joba, char jobu, char jobv, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * sva, \fBlapack_int\fP mv, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * cwork, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork)"

.PP
Definition at line 36 of file lapacke_zgesvj_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, double * rpivot)"

.PP
Definition at line 36 of file lapacke_zgesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvxx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zgesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgesvxx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * r, double * c, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrf2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrf2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetri (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetri_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetsls (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgetsls\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgetsls_work (int matrix_layout, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgetsls_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggbak (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * lscale, const double * rscale, \fBlapack_int\fP m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_zggbak\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggbak_work (int matrix_layout, char job, char side, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const double * lscale, const double * rscale, \fBlapack_int\fP m, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv)"

.PP
Definition at line 36 of file lapacke_zggbak_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggbal (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale)"

.PP
Definition at line 36 of file lapacke_zggbal\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggbal_work (int matrix_layout, char job, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * work)"

.PP
Definition at line 36 of file lapacke_zggbal_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgges (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_zgges\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgges3 (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr)"

.PP
Definition at line 36 of file lapacke_zgges3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgges3_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zgges3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgges_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zgges_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggesx (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_zggesx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggesx_work (int matrix_layout, char jobvsl, char jobvsr, char sort, \fBLAPACK_Z_SELECT2\fP selctg, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_int\fP * sdim, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vsl, \fBlapack_int\fP ldvsl, \fBlapack_complex_double\fP * vsr, \fBlapack_int\fP ldvsr, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zggesx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggev (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_zggev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggev3 (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr)"

.PP
Definition at line 36 of file lapacke_zggev3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggev3_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zggev3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggev_work (int matrix_layout, char jobvl, char jobvr, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zggev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggevx (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv)"

.PP
Definition at line 36 of file lapacke_zggevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggevx_work (int matrix_layout, char balanc, char jobvl, char jobvr, char sense, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP * ilo, \fBlapack_int\fP * ihi, double * lscale, double * rscale, double * abnrm, double * bbnrm, double * rconde, double * rcondv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_logical\fP * bwork)"

.PP
Definition at line 36 of file lapacke_zggevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggglm (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x, \fBlapack_complex_double\fP * y)"

.PP
Definition at line 36 of file lapacke_zggglm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggglm_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x, \fBlapack_complex_double\fP * y, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zggglm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgghd3 (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zgghd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgghd3_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgghd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgghrd (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zgghrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgghrd_work (int matrix_layout, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zgghrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgglse (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x)"

.PP
Definition at line 36 of file lapacke_zgglse\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgglse_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * x, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zgglse_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggqrf (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * taub)"

.PP
Definition at line 36 of file lapacke_zggqrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggqrf_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * taub, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zggqrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggrqf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * taub)"

.PP
Definition at line 36 of file lapacke_zggrqf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggrqf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * taua, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * taub, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zggrqf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvd (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zggsvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvd3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zggsvd3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvd3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zggsvd3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvd_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP p, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zggsvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvp (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_zggsvp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvp3 (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_zggsvp3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvp3_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, double * rwork, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zggsvp3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zggsvp_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, \fBlapack_int\fP * k, \fBlapack_int\fP * l, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * iwork, double * rwork, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zggsvp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtcon (char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zgtcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtcon_work (char norm, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zgtcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtrfs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * dlf, const \fBlapack_complex_double\fP * df, const \fBlapack_complex_double\fP * duf, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zgtrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtrfs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * dlf, const \fBlapack_complex_double\fP * df, const \fBlapack_complex_double\fP * duf, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgtrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgtsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgtsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtsvx (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * dlf, \fBlapack_complex_double\fP * df, \fBlapack_complex_double\fP * duf, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zgtsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgtsvx_work (int matrix_layout, char fact, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * dlf, \fBlapack_complex_double\fP * df, \fBlapack_complex_double\fP * duf, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zgtsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgttrf (\fBlapack_int\fP n, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgttrf_work (\fBlapack_int\fP n, \fBlapack_complex_double\fP * dl, \fBlapack_complex_double\fP * d, \fBlapack_complex_double\fP * du, \fBlapack_complex_double\fP * du2, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zgttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgttrs (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zgttrs_work (int matrix_layout, char trans, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * dl, const \fBlapack_complex_double\fP * d, const \fBlapack_complex_double\fP * du, const \fBlapack_complex_double\fP * du2, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zgttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhbev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhbev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhbevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhbevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgst (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx)"

.PP
Definition at line 36 of file lapacke_zhbgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgst_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhbgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgv (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgv_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhbgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgvd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhbgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgvd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhbgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgvx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbgvx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP ka, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhbgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbtrd (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_zhbtrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhbtrd_work (int matrix_layout, char vect, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * d, double * e, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhbtrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhecon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zhecon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhecon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zhecon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhecon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhecon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhecon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhecon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zheequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zheequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_zheev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheev_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_zheev_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheev_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zheev_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zheev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_zheevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevd_2stage (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w)"

.PP
Definition at line 36 of file lapacke_zheevd_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevd_2stage_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zheevd_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zheevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevr (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_zheevr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevr_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_zheevr_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevr_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zheevr_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevr_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zheevr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zheevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevx_2stage (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zheevx_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevx_2stage_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zheevx_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zheevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhegst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhegst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_zhegv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegv_2stage (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_zhegv_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegv_2stage_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhegv_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhegv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w)"

.PP
Definition at line 36 of file lapacke_zhegvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double * w, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhegvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhegvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhegvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhegvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zherfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zherfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zherfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zherfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zherfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zherfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zherfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zherfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhesv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhesv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhesv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhesv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhesv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhesv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhesv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhesv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zhesvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhesvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zhesvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhesvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhesvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_zheswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zheswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_zheswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrd (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * d, double * e, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zhetrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * d, double * e, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_zhetrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_zhetri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_zhetri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhetri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhetri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhetrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhetrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhetrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhetrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhfrk (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double beta, \fBlapack_complex_double\fP * c)"

.PP
Definition at line 36 of file lapacke_zhfrk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhfrk_work (int matrix_layout, char transr, char uplo, char trans, \fBlapack_int\fP n, \fBlapack_int\fP k, double alpha, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double beta, \fBlapack_complex_double\fP * c)"

.PP
Definition at line 36 of file lapacke_zhfrk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhgeqz (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhgeqz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhgeqz_work (int matrix_layout, char job, char compq, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhgeqz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zhpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpev (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhpev\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpev_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhpev_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpevd (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhpevd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpevd_work (int matrix_layout, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhpevd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpevx (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhpevx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpevx_work (int matrix_layout, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhpevx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgst (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * bp)"

.PP
Definition at line 36 of file lapacke_zhpgst\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgst_work (int matrix_layout, \fBlapack_int\fP itype, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * bp)"

.PP
Definition at line 36 of file lapacke_zhpgst_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgv (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhpgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgv_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhpgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgvd (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhpgvd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgvd_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zhpgvd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgvx (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhpgvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpgvx_work (int matrix_layout, \fBlapack_int\fP itype, char jobz, char range, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * bp, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifail)"

.PP
Definition at line 36 of file lapacke_zhpgvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zhprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhpsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhpsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zhpsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhpsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zhpsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrd (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * d, double * e, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zhptrd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrd_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, double * d, double * e, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zhptrd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zhptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zhptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zhptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhsein (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_zhsein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhsein_work (int matrix_layout, char job, char eigsrc, char initv, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork, \fBlapack_int\fP * ifaill, \fBlapack_int\fP * ifailr)"

.PP
Definition at line 36 of file lapacke_zhsein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhseqr (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zhseqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zhseqr_work (int matrix_layout, char job, char compz, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * h, \fBlapack_int\fP ldh, \fBlapack_complex_double\fP * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zhseqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacgv (\fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_zlacgv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacgv_work (\fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_zlacgv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacn2 (\fBlapack_int\fP n, \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP * x, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_zlacn2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacn2_work (\fBlapack_int\fP n, \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP * x, double * est, \fBlapack_int\fP * kase, \fBlapack_int\fP * isave)"

.PP
Definition at line 36 of file lapacke_zlacn2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacp2 (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zlacp2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacp2_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zlacp2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacpy (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zlacpy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacpy_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zlacpy_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacrm (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zlacrm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlacrm_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const double * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_zlacrm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlag2c (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * sa, \fBlapack_int\fP ldsa)"

.PP
Definition at line 36 of file lapacke_zlag2c\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlag2c_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_float\fP * sa, \fBlapack_int\fP ldsa)"

.PP
Definition at line 36 of file lapacke_zlag2c_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlagge (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_zlagge\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlagge_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP kl, \fBlapack_int\fP ku, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlagge_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaghe (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_zlaghe\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaghe_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlaghe_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlagsy (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed)"

.PP
Definition at line 36 of file lapacke_zlagsy\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlagsy_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP k, const double * d, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * iseed, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlagsy_work\&.c\&.
.SS "double LAPACKE_zlange (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlange\&.c\&.
.SS "double LAPACKE_zlange_work (int matrix_layout, char norm, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_zlange_work\&.c\&.
.SS "double LAPACKE_zlanhe (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlanhe\&.c\&.
.SS "double LAPACKE_zlanhe_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_zlanhe_work\&.c\&.
.SS "double LAPACKE_zlansy (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlansy\&.c\&.
.SS "double LAPACKE_zlansy_work (int matrix_layout, char norm, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_zlansy_work\&.c\&.
.SS "double LAPACKE_zlantr (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlantr\&.c\&.
.SS "double LAPACKE_zlantr_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * work)"

.PP
Definition at line 36 of file lapacke_zlantr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlapmr (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_zlapmr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlapmr_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_zlapmr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlapmt (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_zlapmt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlapmt_work (int matrix_layout, \fBlapack_logical\fP forwrd, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, \fBlapack_int\fP * k)"

.PP
Definition at line 36 of file lapacke_zlapmt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarcm (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zlarcm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarcm_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, const double * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, double * work)"

.PP
Definition at line 36 of file lapacke_zlarcm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zlarfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_zlarfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfg (\fBlapack_int\fP n, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zlarfg\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfg_work (\fBlapack_int\fP n, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zlarfg_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarft (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zlarft\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarft_work (int matrix_layout, char direct, char storev, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_zlarft_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfx (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlarfx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarfx_work (int matrix_layout, char side, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * v, \fBlapack_complex_double\fP tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlarfx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarnv (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x)"

.PP
Definition at line 36 of file lapacke_zlarnv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlarnv_work (\fBlapack_int\fP idist, \fBlapack_int\fP * iseed, \fBlapack_int\fP n, \fBlapack_complex_double\fP * x)"

.PP
Definition at line 36 of file lapacke_zlarnv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlascl (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlascl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlascl_work (int matrix_layout, char type, \fBlapack_int\fP kl, \fBlapack_int\fP ku, double cfrom, double cto, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlascl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaset (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, \fBlapack_complex_double\fP beta, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlaset\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaset_work (int matrix_layout, char uplo, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, \fBlapack_complex_double\fP beta, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlaset_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlassq (\fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, double * scale, double * sumsq)"

.PP
Definition at line 36 of file lapacke_zlassq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlassq_work (\fBlapack_int\fP n, \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, double * scale, double * sumsq)"

.PP
Definition at line 36 of file lapacke_zlassq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaswp (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_zlaswp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlaswp_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP k1, \fBlapack_int\fP k2, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP incx)"

.PP
Definition at line 36 of file lapacke_zlaswp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlatms (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, double * d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlatms\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlatms_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, char dist, \fBlapack_int\fP * iseed, char sym, double * d, \fBlapack_int\fP mode, double cond, double dmax, \fBlapack_int\fP kl, \fBlapack_int\fP ku, char pack, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zlatms_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlauum (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlauum\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zlauum_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zlauum_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbcon (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zpbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zpbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbequ (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpbequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpbequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zpbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zpbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbstf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_zpbstf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbstf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kb, \fBlapack_complex_double\fP * bb, \fBlapack_int\fP ldbb)"

.PP
Definition at line 36 of file lapacke_zpbstf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpbsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpbsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zpbsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * afb, \fBlapack_int\fP ldafb, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zpbsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbtrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_zpbtrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbtrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab)"

.PP
Definition at line 36 of file lapacke_zpbtrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbtrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpbtrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftrf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_zpftrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftrf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_zpftrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftri (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_zpftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftri_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_zpftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftrs (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpftrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpftrs_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpftrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpocon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zpocon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpocon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zpocon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpoequ (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpoequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpoequ_work (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpoequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpoequb (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpoequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpoequb_work (int matrix_layout, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zpoequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zporfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zporfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zporfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zporfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zporfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zporfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zporfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zporfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zposv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zposv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zposvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zposvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zposvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zposvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zposvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrf2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotrf2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrf2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotrf2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zpotri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpotrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpotrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpotrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zppcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double anorm, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zppcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppequ (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zppequ\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppequ_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zppequ_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zpprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zpprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zppsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zppsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zppsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zppsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zppsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_zpptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_zpptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_zpptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_zpptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpstrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double tol)"

.PP
Definition at line 36 of file lapacke_zpstrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpstrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * piv, \fBlapack_int\fP * rank, double tol, double * work)"

.PP
Definition at line 36 of file lapacke_zpstrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptcon (\fBlapack_int\fP n, const double * d, const \fBlapack_complex_double\fP * e, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zptcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptcon_work (\fBlapack_int\fP n, const double * d, const \fBlapack_complex_double\fP * e, double anorm, double * rcond, double * work)"

.PP
Definition at line 36 of file lapacke_zptcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpteqr (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zpteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_zpteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, const double * df, const \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zptrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, const double * df, const \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zptrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptsv (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * d, \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zptsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptsv_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, double * d, \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zptsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptsvx (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, double * df, \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zptsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zptsvx_work (int matrix_layout, char fact, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, double * df, \fBlapack_complex_double\fP * ef, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zptsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpttrf (\fBlapack_int\fP n, double * d, \fBlapack_complex_double\fP * e)"

.PP
Definition at line 36 of file lapacke_zpttrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpttrf_work (\fBlapack_int\fP n, double * d, \fBlapack_complex_double\fP * e)"

.PP
Definition at line 36 of file lapacke_zpttrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpttrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpttrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zpttrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const double * d, const \fBlapack_complex_double\fP * e, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zpttrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspcon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zspcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspcon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zspcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsprfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zsprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsprfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * afp, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zsprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspsv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zspsv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspsv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zspsv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspsvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zspsvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zspsvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * afp, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zspsvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsptrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsptrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsptrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstedc (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zstedc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstedc_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zstedc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstegr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz)"

.PP
Definition at line 36 of file lapacke_zstegr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstegr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, double abstol, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * isuppz, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zstegr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstein (int matrix_layout, \fBlapack_int\fP n, const double * d, const double * e, \fBlapack_int\fP m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_zstein\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstein_work (int matrix_layout, \fBlapack_int\fP n, const double * d, const double * e, \fBlapack_int\fP m, const double * w, const \fBlapack_int\fP * iblock, const \fBlapack_int\fP * isplit, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, double * work, \fBlapack_int\fP * iwork, \fBlapack_int\fP * ifailv)"

.PP
Definition at line 36 of file lapacke_zstein_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstemr (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac)"

.PP
Definition at line 36 of file lapacke_zstemr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zstemr_work (int matrix_layout, char jobz, char range, \fBlapack_int\fP n, double * d, double * e, double vl, double vu, \fBlapack_int\fP il, \fBlapack_int\fP iu, \fBlapack_int\fP * m, double * w, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP nzc, \fBlapack_int\fP * isuppz, \fBlapack_logical\fP * tryrac, double * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_zstemr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsteqr (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz)"

.PP
Definition at line 36 of file lapacke_zsteqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsteqr_work (int matrix_layout, char compz, \fBlapack_int\fP n, double * d, double * e, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, double * work)"

.PP
Definition at line 36 of file lapacke_zsteqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsycon (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zsycon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsycon_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond)"

.PP
Definition at line 36 of file lapacke_zsycon_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsycon_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsycon_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsycon_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, double anorm, double * rcond, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsycon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyconv (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * e)"

.PP
Definition at line 36 of file lapacke_zsyconv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyconv_work (int matrix_layout, char uplo, char way, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * e)"

.PP
Definition at line 36 of file lapacke_zsyconv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyequb (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax)"

.PP
Definition at line 36 of file lapacke_zsyequb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyequb_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * s, double * scond, double * amax, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsyequb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zsyr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP incx, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_zsyr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyrfs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zsyrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyrfs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zsyrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyrfsx (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zsyrfsx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyrfsx_work (int matrix_layout, char uplo, char equed, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, const \fBlapack_int\fP * ipiv, const double * s, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zsyrfsx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsysv\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsysv_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsysv_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsysv_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsysv_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsysv_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsysv_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsysv_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsysv_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysv_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsysv_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysvx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_zsysvx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysvx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * ferr, double * berr, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_zsysvx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysvxx (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params)"

.PP
Definition at line 36 of file lapacke_zsysvxx\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsysvxx_work (int matrix_layout, char fact, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * af, \fBlapack_int\fP ldaf, \fBlapack_int\fP * ipiv, char * equed, double * s, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * rcond, double * rpvgrw, double * berr, \fBlapack_int\fP n_err_bnds, double * err_bnds_norm, double * err_bnds_comp, \fBlapack_int\fP nparams, double * params, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_zsysvxx_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyswapr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_zsyswapr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsyswapr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP i1, \fBlapack_int\fP i2)"

.PP
Definition at line 36 of file lapacke_zsyswapr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytrf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytrf_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2)"

.PP
Definition at line 36 of file lapacke_zsytrf_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrf_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrf_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_rk (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytrf_rk\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_rk_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * e, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrf_rk_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytrf_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrf_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrf_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytri2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytri2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri2x (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_zsytri2x\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri2x_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP nb)"

.PP
Definition at line 36 of file lapacke_zsytri2x_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv)"

.PP
Definition at line 36 of file lapacke_zsytri_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytri_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytri_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsytri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs2 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs2_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zsytrs2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_3 (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_3\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_3_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * e, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_3_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_aa (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_aa\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_aa_2stage (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_aa_2stage\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_aa_2stage_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tb, \fBlapack_int\fP ltb, \fBlapack_int\fP * ipiv, \fBlapack_int\fP * ipiv2, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_aa_2stage_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_aa_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zsytrs_aa_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_rook (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_rook\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_rook_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_rook_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zsytrs_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_int\fP * ipiv, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_zsytrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * rcond)"

.PP
Definition at line 36 of file lapacke_ztbcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztbcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_ztbrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztbrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztbtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztbtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP kd, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ab, \fBlapack_int\fP ldab, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztbtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfsm (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztfsm\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfsm_work (int matrix_layout, char transr, char side, char uplo, char trans, char diag, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP alpha, const \fBlapack_complex_double\fP * a, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztfsm_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztftri (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_ztftri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztftri_work (int matrix_layout, char transr, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a)"

.PP
Definition at line 36 of file lapacke_ztftri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfttp (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztfttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfttp_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztfttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfttr (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztfttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztfttr_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * arf, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztfttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * s, \fBlapack_int\fP lds, const \fBlapack_complex_double\fP * p, \fBlapack_int\fP ldp, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ztgevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * s, \fBlapack_int\fP lds, const \fBlapack_complex_double\fP * p, \fBlapack_int\fP ldp, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztgevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgexc (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ztgexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgexc_work (int matrix_layout, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ztgexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsen (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif)"

.PP
Definition at line 36 of file lapacke_ztgsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsen_work (int matrix_layout, \fBlapack_int\fP ijob, \fBlapack_logical\fP wantq, \fBlapack_logical\fP wantz, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * alpha, \fBlapack_complex_double\fP * beta, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * z, \fBlapack_int\fP ldz, \fBlapack_int\fP * m, double * pl, double * pr, double * dif, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork, \fBlapack_int\fP liwork)"

.PP
Definition at line 36 of file lapacke_ztgsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsja (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_ztgsja\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsja_work (int matrix_layout, char jobu, char jobv, char jobq, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, double tola, double tolb, double * alpha, double * beta, \fBlapack_complex_double\fP * u, \fBlapack_int\fP ldu, \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * work, \fBlapack_int\fP * ncycle)"

.PP
Definition at line 36 of file lapacke_ztgsja_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, double * s, double * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ztgsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, double * s, double * dif, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ztgsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsyl (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, const \fBlapack_complex_double\fP * d, \fBlapack_int\fP ldd, const \fBlapack_complex_double\fP * e, \fBlapack_int\fP lde, \fBlapack_complex_double\fP * f, \fBlapack_int\fP ldf, double * scale, double * dif)"

.PP
Definition at line 36 of file lapacke_ztgsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztgsyl_work (int matrix_layout, char trans, \fBlapack_int\fP ijob, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, const \fBlapack_complex_double\fP * d, \fBlapack_int\fP ldd, const \fBlapack_complex_double\fP * e, \fBlapack_int\fP lde, \fBlapack_complex_double\fP * f, \fBlapack_int\fP ldf, double * scale, double * dif, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_ztgsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double * rcond)"

.PP
Definition at line 36 of file lapacke_ztpcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztpcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpmqrt (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztpmqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpmqrt_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, \fBlapack_int\fP nb, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_ztpmqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpqrt (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ztpqrt\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpqrt2 (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ztpqrt2\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpqrt2_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt)"

.PP
Definition at line 36 of file lapacke_ztpqrt2_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpqrt_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP l, \fBlapack_int\fP nb, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_ztpqrt_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztprfb (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztprfb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztprfb_work (int matrix_layout, char side, char trans, char direct, char storev, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP * v, \fBlapack_int\fP ldv, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * work, \fBlapack_int\fP ldwork)"

.PP
Definition at line 36 of file lapacke_ztprfb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztprfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_ztprfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztprfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztprfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztptri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztptri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztptri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztptri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztptrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztptrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztptrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztptrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * arf)"

.PP
Definition at line 36 of file lapacke_ztpttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * arf)"

.PP
Definition at line 36 of file lapacke_ztpttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpttr (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztpttr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztpttr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztpttr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrcon (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * rcond)"

.PP
Definition at line 36 of file lapacke_ztrcon\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrcon_work (int matrix_layout, char norm, char uplo, char diag, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, double * rcond, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztrcon_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrevc (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ztrevc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrevc_work (int matrix_layout, char side, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztrevc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrexc (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ztrexc\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrexc_work (int matrix_layout, char compq, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_int\fP ifst, \fBlapack_int\fP ilst)"

.PP
Definition at line 36 of file lapacke_ztrexc_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrrfs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr)"

.PP
Definition at line 36 of file lapacke_ztrrfs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrrfs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, const \fBlapack_complex_double\fP * x, \fBlapack_int\fP ldx, double * ferr, double * berr, \fBlapack_complex_double\fP * work, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztrrfs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsen (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * w, \fBlapack_int\fP * m, double * s, double * sep)"

.PP
Definition at line 36 of file lapacke_ztrsen\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsen_work (int matrix_layout, char job, char compq, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * w, \fBlapack_int\fP * m, double * s, double * sep, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ztrsen_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsna (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, double * s, double * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m)"

.PP
Definition at line 36 of file lapacke_ztrsna\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsna_work (int matrix_layout, char job, char howmny, const \fBlapack_logical\fP * select, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * t, \fBlapack_int\fP ldt, const \fBlapack_complex_double\fP * vl, \fBlapack_int\fP ldvl, const \fBlapack_complex_double\fP * vr, \fBlapack_int\fP ldvr, double * s, double * sep, \fBlapack_int\fP mm, \fBlapack_int\fP * m, \fBlapack_complex_double\fP * work, \fBlapack_int\fP ldwork, double * rwork)"

.PP
Definition at line 36 of file lapacke_ztrsna_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsyl (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, double * scale)"

.PP
Definition at line 36 of file lapacke_ztrsyl\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrsyl_work (int matrix_layout, char trana, char tranb, \fBlapack_int\fP isgn, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, double * scale)"

.PP
Definition at line 36 of file lapacke_ztrsyl_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrtri (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztrtri\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrtri_work (int matrix_layout, char uplo, char diag, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda)"

.PP
Definition at line 36 of file lapacke_ztrtri_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrtrs (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztrtrs\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrtrs_work (int matrix_layout, char uplo, char trans, char diag, \fBlapack_int\fP n, \fBlapack_int\fP nrhs, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * b, \fBlapack_int\fP ldb)"

.PP
Definition at line 36 of file lapacke_ztrtrs_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrttf (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * arf)"

.PP
Definition at line 36 of file lapacke_ztrttf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrttf_work (int matrix_layout, char transr, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * arf)"

.PP
Definition at line 36 of file lapacke_ztrttf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrttp (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztrttp\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztrttp_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * ap)"

.PP
Definition at line 36 of file lapacke_ztrttp_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztzrzf (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_ztzrzf\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_ztzrzf_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_ztzrzf_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunbdb (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP ldx22, double * theta, double * phi, \fBlapack_complex_double\fP * taup1, \fBlapack_complex_double\fP * taup2, \fBlapack_complex_double\fP * tauq1, \fBlapack_complex_double\fP * tauq2)"

.PP
Definition at line 36 of file lapacke_zunbdb\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunbdb_work (int matrix_layout, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP ldx22, double * theta, double * phi, \fBlapack_complex_double\fP * taup1, \fBlapack_complex_double\fP * taup2, \fBlapack_complex_double\fP * tauq1, \fBlapack_complex_double\fP * tauq2, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunbdb_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zuncsd (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP ldx22, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP ldv2t)"

.PP
Definition at line 36 of file lapacke_zuncsd\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zuncsd2by1 (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t)"

.PP
Definition at line 36 of file lapacke_zuncsd2by1\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zuncsd2by1_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zuncsd2by1_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zuncsd_work (int matrix_layout, char jobu1, char jobu2, char jobv1t, char jobv2t, char trans, char signs, \fBlapack_int\fP m, \fBlapack_int\fP p, \fBlapack_int\fP q, \fBlapack_complex_double\fP * x11, \fBlapack_int\fP ldx11, \fBlapack_complex_double\fP * x12, \fBlapack_int\fP ldx12, \fBlapack_complex_double\fP * x21, \fBlapack_int\fP ldx21, \fBlapack_complex_double\fP * x22, \fBlapack_int\fP ldx22, double * theta, \fBlapack_complex_double\fP * u1, \fBlapack_int\fP ldu1, \fBlapack_complex_double\fP * u2, \fBlapack_int\fP ldu2, \fBlapack_complex_double\fP * v1t, \fBlapack_int\fP ldv1t, \fBlapack_complex_double\fP * v2t, \fBlapack_int\fP ldv2t, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork, double * rwork, \fBlapack_int\fP lrwork, \fBlapack_int\fP * iwork)"

.PP
Definition at line 36 of file lapacke_zuncsd_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungbr (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zungbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungbr_work (int matrix_layout, char vect, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zungbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunghr (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zunghr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunghr_work (int matrix_layout, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunghr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunglq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zunglq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunglq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunglq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungql (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zungql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungql_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zungql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungqr (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zungqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungqr_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zungqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungrq (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zungrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungrq_work (int matrix_layout, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zungrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungtr (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau)"

.PP
Definition at line 36 of file lapacke_zungtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zungtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zungtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmbr (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmbr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmbr_work (int matrix_layout, char vect, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmbr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmhr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmhr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmhr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP ilo, \fBlapack_int\fP ihi, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmhr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmlq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmlq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmlq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmlq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmql (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmql\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmql_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmql_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmqr (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmqr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmqr_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmqr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmrq (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmrq\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmrq_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmrq_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmrz (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmrz\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmrz_work (int matrix_layout, char side, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, \fBlapack_int\fP k, \fBlapack_int\fP l, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmrz_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zunmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zunmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * a, \fBlapack_int\fP lda, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work, \fBlapack_int\fP lwork)"

.PP
Definition at line 36 of file lapacke_zunmtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zupgtr (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq)"

.PP
Definition at line 36 of file lapacke_zupgtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zupgtr_work (int matrix_layout, char uplo, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * q, \fBlapack_int\fP ldq, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zupgtr_work\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zupmtr (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc)"

.PP
Definition at line 36 of file lapacke_zupmtr\&.c\&.
.SS "\fBlapack_int\fP LAPACKE_zupmtr_work (int matrix_layout, char side, char uplo, char trans, \fBlapack_int\fP m, \fBlapack_int\fP n, const \fBlapack_complex_double\fP * ap, const \fBlapack_complex_double\fP * tau, \fBlapack_complex_double\fP * c, \fBlapack_int\fP ldc, \fBlapack_complex_double\fP * work)"

.PP
Definition at line 36 of file lapacke_zupmtr_work\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
