.TH "slasd7.f" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
slasd7.f
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBslasd7\fP (ICOMPQ, NL, NR, SQRE, K, D, Z, ZW, VF, VFW, VL, VLW, ALPHA, BETA, DSIGMA, IDX, IDXP, IDXQ, PERM, GIVPTR, GIVCOL, LDGCOL, GIVNUM, LDGNUM, C, S, INFO)"
.br
.RI "\fBSLASD7\fP merges the two sets of singular values together into a single sorted set\&. Then it tries to deflate the size of the problem\&. Used by sbdsdc\&. "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine slasd7 (integer ICOMPQ, integer NL, integer NR, integer SQRE, integer K, real, dimension( * ) D, real, dimension( * ) Z, real, dimension( * ) ZW, real, dimension( * ) VF, real, dimension( * ) VFW, real, dimension( * ) VL, real, dimension( * ) VLW, real ALPHA, real BETA, real, dimension( * ) DSIGMA, integer, dimension( * ) IDX, integer, dimension( * ) IDXP, integer, dimension( * ) IDXQ, integer, dimension( * ) PERM, integer GIVPTR, integer, dimension( ldgcol, * ) GIVCOL, integer LDGCOL, real, dimension( ldgnum, * ) GIVNUM, integer LDGNUM, real C, real S, integer INFO)"

.PP
\fBSLASD7\fP merges the two sets of singular values together into a single sorted set\&. Then it tries to deflate the size of the problem\&. Used by sbdsdc\&.  
.PP
\fBPurpose: \fP
.RS 4

.PP
.nf
 SLASD7 merges the two sets of singular values together into a single
 sorted set. Then it tries to deflate the size of the problem. There
 are two ways in which deflation can occur:  when two or more singular
 values are close together or if there is a tiny entry in the Z
 vector. For each such occurrence the order of the related
 secular equation problem is reduced by one.

 SLASD7 is called from SLASD6.
.fi
.PP
 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIICOMPQ\fP 
.PP
.nf
          ICOMPQ is INTEGER
          Specifies whether singular vectors are to be computed
          in compact form, as follows:
          = 0: Compute singular values only.
          = 1: Compute singular vectors of upper
               bidiagonal matrix in compact form.
.fi
.PP
.br
\fINL\fP 
.PP
.nf
          NL is INTEGER
         The row dimension of the upper block. NL >= 1.
.fi
.PP
.br
\fINR\fP 
.PP
.nf
          NR is INTEGER
         The row dimension of the lower block. NR >= 1.
.fi
.PP
.br
\fISQRE\fP 
.PP
.nf
          SQRE is INTEGER
         = 0: the lower block is an NR-by-NR square matrix.
         = 1: the lower block is an NR-by-(NR+1) rectangular matrix.

         The bidiagonal matrix has
         N = NL + NR + 1 rows and
         M = N + SQRE >= N columns.
.fi
.PP
.br
\fIK\fP 
.PP
.nf
          K is INTEGER
         Contains the dimension of the non-deflated matrix, this is
         the order of the related secular equation. 1 <= K <=N.
.fi
.PP
.br
\fID\fP 
.PP
.nf
          D is REAL array, dimension ( N )
         On entry D contains the singular values of the two submatrices
         to be combined. On exit D contains the trailing (N-K) updated
         singular values (those which were deflated) sorted into
         increasing order.
.fi
.PP
.br
\fIZ\fP 
.PP
.nf
          Z is REAL array, dimension ( M )
         On exit Z contains the updating row vector in the secular
         equation.
.fi
.PP
.br
\fIZW\fP 
.PP
.nf
          ZW is REAL array, dimension ( M )
         Workspace for Z.
.fi
.PP
.br
\fIVF\fP 
.PP
.nf
          VF is REAL array, dimension ( M )
         On entry, VF(1:NL+1) contains the first components of all
         right singular vectors of the upper block; and VF(NL+2:M)
         contains the first components of all right singular vectors
         of the lower block. On exit, VF contains the first components
         of all right singular vectors of the bidiagonal matrix.
.fi
.PP
.br
\fIVFW\fP 
.PP
.nf
          VFW is REAL array, dimension ( M )
         Workspace for VF.
.fi
.PP
.br
\fIVL\fP 
.PP
.nf
          VL is REAL array, dimension ( M )
         On entry, VL(1:NL+1) contains the  last components of all
         right singular vectors of the upper block; and VL(NL+2:M)
         contains the last components of all right singular vectors
         of the lower block. On exit, VL contains the last components
         of all right singular vectors of the bidiagonal matrix.
.fi
.PP
.br
\fIVLW\fP 
.PP
.nf
          VLW is REAL array, dimension ( M )
         Workspace for VL.
.fi
.PP
.br
\fIALPHA\fP 
.PP
.nf
          ALPHA is REAL
         Contains the diagonal element associated with the added row.
.fi
.PP
.br
\fIBETA\fP 
.PP
.nf
          BETA is REAL
         Contains the off-diagonal element associated with the added
         row.
.fi
.PP
.br
\fIDSIGMA\fP 
.PP
.nf
          DSIGMA is REAL array, dimension ( N )
         Contains a copy of the diagonal elements (K-1 singular values
         and one zero) in the secular equation.
.fi
.PP
.br
\fIIDX\fP 
.PP
.nf
          IDX is INTEGER array, dimension ( N )
         This will contain the permutation used to sort the contents of
         D into ascending order.
.fi
.PP
.br
\fIIDXP\fP 
.PP
.nf
          IDXP is INTEGER array, dimension ( N )
         This will contain the permutation used to place deflated
         values of D at the end of the array. On output IDXP(2:K)
         points to the nondeflated D-values and IDXP(K+1:N)
         points to the deflated singular values.
.fi
.PP
.br
\fIIDXQ\fP 
.PP
.nf
          IDXQ is INTEGER array, dimension ( N )
         This contains the permutation which separately sorts the two
         sub-problems in D into ascending order.  Note that entries in
         the first half of this permutation must first be moved one
         position backward; and entries in the second half
         must first have NL+1 added to their values.
.fi
.PP
.br
\fIPERM\fP 
.PP
.nf
          PERM is INTEGER array, dimension ( N )
         The permutations (from deflation and sorting) to be applied
         to each singular block. Not referenced if ICOMPQ = 0.
.fi
.PP
.br
\fIGIVPTR\fP 
.PP
.nf
          GIVPTR is INTEGER
         The number of Givens rotations which took place in this
         subproblem. Not referenced if ICOMPQ = 0.
.fi
.PP
.br
\fIGIVCOL\fP 
.PP
.nf
          GIVCOL is INTEGER array, dimension ( LDGCOL, 2 )
         Each pair of numbers indicates a pair of columns to take place
         in a Givens rotation. Not referenced if ICOMPQ = 0.
.fi
.PP
.br
\fILDGCOL\fP 
.PP
.nf
          LDGCOL is INTEGER
         The leading dimension of GIVCOL, must be at least N.
.fi
.PP
.br
\fIGIVNUM\fP 
.PP
.nf
          GIVNUM is REAL array, dimension ( LDGNUM, 2 )
         Each number indicates the C or S value to be used in the
         corresponding Givens rotation. Not referenced if ICOMPQ = 0.
.fi
.PP
.br
\fILDGNUM\fP 
.PP
.nf
          LDGNUM is INTEGER
         The leading dimension of GIVNUM, must be at least N.
.fi
.PP
.br
\fIC\fP 
.PP
.nf
          C is REAL
         C contains garbage if SQRE =0 and the C-value of a Givens
         rotation related to the right null space if SQRE = 1.
.fi
.PP
.br
\fIS\fP 
.PP
.nf
          S is REAL
         S contains garbage if SQRE =0 and the S-value of a Givens
         rotation related to the right null space if SQRE = 1.
.fi
.PP
.br
\fIINFO\fP 
.PP
.nf
          INFO is INTEGER
         = 0:  successful exit.
         < 0:  if INFO = -i, the i-th argument had an illegal value.
.fi
.PP
 
.RE
.PP
\fBAuthor:\fP
.RS 4
Univ\&. of Tennessee 
.PP
Univ\&. of California Berkeley 
.PP
Univ\&. of Colorado Denver 
.PP
NAG Ltd\&. 
.RE
.PP
\fBDate:\fP
.RS 4
December 2016 
.RE
.PP
\fBContributors: \fP
.RS 4
Ming Gu and Huan Ren, Computer Science Division, University of California at Berkeley, USA 
.RE
.PP

.PP
Definition at line 282 of file slasd7\&.f\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
