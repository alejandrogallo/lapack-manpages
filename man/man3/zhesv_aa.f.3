.TH "zhesv_aa.f" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
zhesv_aa.f
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBzhesv_aa\fP (UPLO, \fBN\fP, \fBNRHS\fP, A, \fBLDA\fP, IPIV, B, \fBLDB\fP, WORK, LWORK, INFO)"
.br
.RI "\fB ZHESV_AA computes the solution to system of linear equations A * X = B for HE matrices\fP "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine zhesv_aa (character UPLO, integer N, integer NRHS, complex*16, dimension( lda, * ) A, integer LDA, integer, dimension( * ) IPIV, complex*16, dimension( ldb, * ) B, integer LDB, complex*16, dimension( * ) WORK, integer LWORK, integer INFO)"

.PP
\fB ZHESV_AA computes the solution to system of linear equations A * X = B for HE matrices\fP  
.PP
\fBPurpose: \fP
.RS 4

.PP
.nf
 ZHESV_AA computes the solution to a complex system of linear equations
    A * X = B,
 where A is an N-by-N Hermitian matrix and X and B are N-by-NRHS
 matrices.

 Aasen's algorithm is used to factor A as
    A = U * T * U**H,  if UPLO = 'U', or
    A = L * T * L**H,  if UPLO = 'L',
 where U (or L) is a product of permutation and unit upper (lower)
 triangular matrices, and T is Hermitian and tridiagonal. The factored form
 of A is then used to solve the system of equations A * X = B.
.fi
.PP
 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIUPLO\fP 
.PP
.nf
          UPLO is CHARACTER*1
          = 'U':  Upper triangle of A is stored;
          = 'L':  Lower triangle of A is stored.
.fi
.PP
.br
\fIN\fP 
.PP
.nf
          N is INTEGER
          The number of linear equations, i.e., the order of the
          matrix A.  N >= 0.
.fi
.PP
.br
\fINRHS\fP 
.PP
.nf
          NRHS is INTEGER
          The number of right hand sides, i.e., the number of columns
          of the matrix B.  NRHS >= 0.
.fi
.PP
.br
\fIA\fP 
.PP
.nf
          A is COMPLEX*16 array, dimension (LDA,N)
          On entry, the Hermitian matrix A.  If UPLO = 'U', the leading
          N-by-N upper triangular part of A contains the upper
          triangular part of the matrix A, and the strictly lower
          triangular part of A is not referenced.  If UPLO = 'L', the
          leading N-by-N lower triangular part of A contains the lower
          triangular part of the matrix A, and the strictly upper
          triangular part of A is not referenced.

          On exit, if INFO = 0, the tridiagonal matrix T and the
          multipliers used to obtain the factor U or L from the
          factorization A = U*T*U**H or A = L*T*L**H as computed by
          ZHETRF_AA.
.fi
.PP
.br
\fILDA\fP 
.PP
.nf
          LDA is INTEGER
          The leading dimension of the array A.  LDA >= max(1,N).
.fi
.PP
.br
\fIIPIV\fP 
.PP
.nf
          IPIV is INTEGER array, dimension (N)
          On exit, it contains the details of the interchanges, i.e.,
          the row and column k of A were interchanged with the
          row and column IPIV(k).
.fi
.PP
.br
\fIB\fP 
.PP
.nf
          B is COMPLEX*16 array, dimension (LDB,NRHS)
          On entry, the N-by-NRHS right hand side matrix B.
          On exit, if INFO = 0, the N-by-NRHS solution matrix X.
.fi
.PP
.br
\fILDB\fP 
.PP
.nf
          LDB is INTEGER
          The leading dimension of the array B.  LDB >= max(1,N).
.fi
.PP
.br
\fIWORK\fP 
.PP
.nf
          WORK is COMPLEX*16 array, dimension (MAX(1,LWORK))
          On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
.fi
.PP
.br
\fILWORK\fP 
.PP
.nf
          LWORK is INTEGER
          The length of WORK.  LWORK >= MAX(1,2*N,3*N-2), and for best 
          performance LWORK >= max(1,N*NB), where NB is the optimal
          blocksize for ZHETRF.

          If LWORK = -1, then a workspace query is assumed; the routine
          only calculates the optimal size of the WORK array, returns
          this value as the first entry of the WORK array, and no error
          message related to LWORK is issued by XERBLA.
.fi
.PP
.br
\fIINFO\fP 
.PP
.nf
          INFO is INTEGER
          = 0: successful exit
          < 0: if INFO = -i, the i-th argument had an illegal value
          > 0: if INFO = i, D(i,i) is exactly zero.  The factorization
               has been completed, but the block diagonal matrix D is
               exactly singular, so the solution could not be computed.
.fi
.PP
 
.RE
.PP
\fBAuthor:\fP
.RS 4
Univ\&. of Tennessee 
.PP
Univ\&. of California Berkeley 
.PP
Univ\&. of Colorado Denver 
.PP
NAG Ltd\&. 
.RE
.PP
\fBDate:\fP
.RS 4
November 2017 
.RE
.PP

.PP
Definition at line 164 of file zhesv_aa\&.f\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
