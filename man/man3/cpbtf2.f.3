.TH "cpbtf2.f" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cpbtf2.f
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBcpbtf2\fP (UPLO, \fBN\fP, KD, AB, LDAB, INFO)"
.br
.RI "\fBCPBTF2\fP computes the Cholesky factorization of a symmetric/Hermitian positive definite band matrix (unblocked algorithm)\&. "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine cpbtf2 (character UPLO, integer N, integer KD, complex, dimension( ldab, * ) AB, integer LDAB, integer INFO)"

.PP
\fBCPBTF2\fP computes the Cholesky factorization of a symmetric/Hermitian positive definite band matrix (unblocked algorithm)\&.  
.PP
\fBPurpose: \fP
.RS 4

.PP
.nf
 CPBTF2 computes the Cholesky factorization of a complex Hermitian
 positive definite band matrix A.

 The factorization has the form
    A = U**H * U ,  if UPLO = 'U', or
    A = L  * L**H,  if UPLO = 'L',
 where U is an upper triangular matrix, U**H is the conjugate transpose
 of U, and L is lower triangular.

 This is the unblocked version of the algorithm, calling Level 2 BLAS.
.fi
.PP
 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIUPLO\fP 
.PP
.nf
          UPLO is CHARACTER*1
          Specifies whether the upper or lower triangular part of the
          Hermitian matrix A is stored:
          = 'U':  Upper triangular
          = 'L':  Lower triangular
.fi
.PP
.br
\fIN\fP 
.PP
.nf
          N is INTEGER
          The order of the matrix A.  N >= 0.
.fi
.PP
.br
\fIKD\fP 
.PP
.nf
          KD is INTEGER
          The number of super-diagonals of the matrix A if UPLO = 'U',
          or the number of sub-diagonals if UPLO = 'L'.  KD >= 0.
.fi
.PP
.br
\fIAB\fP 
.PP
.nf
          AB is COMPLEX array, dimension (LDAB,N)
          On entry, the upper or lower triangle of the Hermitian band
          matrix A, stored in the first KD+1 rows of the array.  The
          j-th column of A is stored in the j-th column of the array AB
          as follows:
          if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)<=i<=j;
          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+kd).

          On exit, if INFO = 0, the triangular factor U or L from the
          Cholesky factorization A = U**H *U or A = L*L**H of the band
          matrix A, in the same storage format as A.
.fi
.PP
.br
\fILDAB\fP 
.PP
.nf
          LDAB is INTEGER
          The leading dimension of the array AB.  LDAB >= KD+1.
.fi
.PP
.br
\fIINFO\fP 
.PP
.nf
          INFO is INTEGER
          = 0: successful exit
          < 0: if INFO = -k, the k-th argument had an illegal value
          > 0: if INFO = k, the leading minor of order k is not
               positive definite, and the factorization could not be
               completed.
.fi
.PP
 
.RE
.PP
\fBAuthor:\fP
.RS 4
Univ\&. of Tennessee 
.PP
Univ\&. of California Berkeley 
.PP
Univ\&. of Colorado Denver 
.PP
NAG Ltd\&. 
.RE
.PP
\fBDate:\fP
.RS 4
December 2016 
.RE
.PP
\fBFurther Details: \fP
.RS 4

.PP
.nf
  The band storage scheme is illustrated by the following example, when
  N = 6, KD = 2, and UPLO = 'U':

  On entry:                       On exit:

      *    *   a13  a24  a35  a46      *    *   u13  u24  u35  u46
      *   a12  a23  a34  a45  a56      *   u12  u23  u34  u45  u56
     a11  a22  a33  a44  a55  a66     u11  u22  u33  u44  u55  u66

  Similarly, if UPLO = 'L' the format of A is as follows:

  On entry:                       On exit:

     a11  a22  a33  a44  a55  a66     l11  l22  l33  l44  l55  l66
     a21  a32  a43  a54  a65   *      l21  l32  l43  l54  l65   *
     a31  a42  a53  a64   *    *      l31  l42  l53  l64   *    *

  Array elements marked * are not used by the routine.
.fi
.PP
 
.RE
.PP

.PP
Definition at line 144 of file cpbtf2\&.f\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
