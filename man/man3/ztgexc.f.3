.TH "ztgexc.f" 3 "Tue Nov 14 2017" "Version 3.8.0" "LAPACK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ztgexc.f
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBztgexc\fP (WANTQ, WANTZ, \fBN\fP, A, \fBLDA\fP, B, \fBLDB\fP, Q, LDQ, Z, LDZ, IFST, ILST, INFO)"
.br
.RI "\fBZTGEXC\fP "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine ztgexc (logical WANTQ, logical WANTZ, integer N, complex*16, dimension( lda, * ) A, integer LDA, complex*16, dimension( ldb, * ) B, integer LDB, complex*16, dimension( ldq, * ) Q, integer LDQ, complex*16, dimension( ldz, * ) Z, integer LDZ, integer IFST, integer ILST, integer INFO)"

.PP
\fBZTGEXC\fP  
.PP
\fBPurpose: \fP
.RS 4

.PP
.nf
 ZTGEXC reorders the generalized Schur decomposition of a complex
 matrix pair (A,B), using an unitary equivalence transformation
 (A, B) := Q * (A, B) * Z**H, so that the diagonal block of (A, B) with
 row index IFST is moved to row ILST.

 (A, B) must be in generalized Schur canonical form, that is, A and
 B are both upper triangular.

 Optionally, the matrices Q and Z of generalized Schur vectors are
 updated.

        Q(in) * A(in) * Z(in)**H = Q(out) * A(out) * Z(out)**H
        Q(in) * B(in) * Z(in)**H = Q(out) * B(out) * Z(out)**H
.fi
.PP
 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIWANTQ\fP 
.PP
.nf
          WANTQ is LOGICAL
          .TRUE. : update the left transformation matrix Q;
          .FALSE.: do not update Q.
.fi
.PP
.br
\fIWANTZ\fP 
.PP
.nf
          WANTZ is LOGICAL
          .TRUE. : update the right transformation matrix Z;
          .FALSE.: do not update Z.
.fi
.PP
.br
\fIN\fP 
.PP
.nf
          N is INTEGER
          The order of the matrices A and B. N >= 0.
.fi
.PP
.br
\fIA\fP 
.PP
.nf
          A is COMPLEX*16 array, dimension (LDA,N)
          On entry, the upper triangular matrix A in the pair (A, B).
          On exit, the updated matrix A.
.fi
.PP
.br
\fILDA\fP 
.PP
.nf
          LDA is INTEGER
          The leading dimension of the array A. LDA >= max(1,N).
.fi
.PP
.br
\fIB\fP 
.PP
.nf
          B is COMPLEX*16 array, dimension (LDB,N)
          On entry, the upper triangular matrix B in the pair (A, B).
          On exit, the updated matrix B.
.fi
.PP
.br
\fILDB\fP 
.PP
.nf
          LDB is INTEGER
          The leading dimension of the array B. LDB >= max(1,N).
.fi
.PP
.br
\fIQ\fP 
.PP
.nf
          Q is COMPLEX*16 array, dimension (LDQ,N)
          On entry, if WANTQ = .TRUE., the unitary matrix Q.
          On exit, the updated matrix Q.
          If WANTQ = .FALSE., Q is not referenced.
.fi
.PP
.br
\fILDQ\fP 
.PP
.nf
          LDQ is INTEGER
          The leading dimension of the array Q. LDQ >= 1;
          If WANTQ = .TRUE., LDQ >= N.
.fi
.PP
.br
\fIZ\fP 
.PP
.nf
          Z is COMPLEX*16 array, dimension (LDZ,N)
          On entry, if WANTZ = .TRUE., the unitary matrix Z.
          On exit, the updated matrix Z.
          If WANTZ = .FALSE., Z is not referenced.
.fi
.PP
.br
\fILDZ\fP 
.PP
.nf
          LDZ is INTEGER
          The leading dimension of the array Z. LDZ >= 1;
          If WANTZ = .TRUE., LDZ >= N.
.fi
.PP
.br
\fIIFST\fP 
.PP
.nf
          IFST is INTEGER
.fi
.PP
.br
\fIILST\fP 
.PP
.nf
          ILST is INTEGER
          Specify the reordering of the diagonal blocks of (A, B).
          The block with row index IFST is moved to row ILST, by a
          sequence of swapping between adjacent blocks.
.fi
.PP
.br
\fIINFO\fP 
.PP
.nf
          INFO is INTEGER
           =0:  Successful exit.
           <0:  if INFO = -i, the i-th argument had an illegal value.
           =1:  The transformed matrix pair (A, B) would be too far
                from generalized Schur form; the problem is ill-
                conditioned. (A, B) may have been partially reordered,
                and ILST points to the first row of the current
                position of the block being moved.
.fi
.PP
 
.RE
.PP
\fBAuthor:\fP
.RS 4
Univ\&. of Tennessee 
.PP
Univ\&. of California Berkeley 
.PP
Univ\&. of Colorado Denver 
.PP
NAG Ltd\&. 
.RE
.PP
\fBDate:\fP
.RS 4
June 2017 
.RE
.PP
\fBContributors: \fP
.RS 4
Bo Kagstrom and Peter Poromaa, Department of Computing Science, Umea University, S-901 87 Umea, Sweden\&. 
.RE
.PP
\fBReferences: \fP
.RS 4
[1] B\&. Kagstrom; A Direct Method for Reordering Eigenvalues in the Generalized Real Schur Form of a Regular Matrix Pair (A, B), in M\&.S\&. Moonen et al (eds), Linear Algebra for Large Scale and Real-Time Applications, Kluwer Academic Publ\&. 1993, pp 195-218\&. 
.br
 [2] B\&. Kagstrom and P\&. Poromaa; Computing Eigenspaces with Specified Eigenvalues of a Regular Matrix Pair (A, B) and Condition Estimation: Theory, Algorithms and Software, Report UMINF - 94\&.04, Department of Computing Science, Umea University, S-901 87 Umea, Sweden, 1994\&. Also as LAPACK Working Note 87\&. To appear in Numerical Algorithms, 1996\&. 
.br
 [3] B\&. Kagstrom and P\&. Poromaa, LAPACK-Style Algorithms and Software for Solving the Generalized Sylvester Equation and Estimating the Separation between Regular Matrix Pairs, Report UMINF - 93\&.23, Department of Computing Science, Umea University, S-901 87 Umea, Sweden, December 1993, Revised April 1994, Also as LAPACK working Note 75\&. To appear in ACM Trans\&. on Math\&. Software, Vol 22, No 1, 1996\&. 
.RE
.PP

.PP
Definition at line 202 of file ztgexc\&.f\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LAPACK from the source code\&.
